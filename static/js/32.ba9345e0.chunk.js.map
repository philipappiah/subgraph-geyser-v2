{"version":3,"sources":["../../src/index.ts","../../src/provider.ts","../../src/utils.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator.js"],"names":["NETWORK_CHAIN_ID","MAINNET","RINKEBY","XDAI","this","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","module","exports","fn","self","args","arguments","apply","err","undefined"],"mappings":"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","file":"static/js/32.ba9345e0.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SafeAppProvider = void 0;\nvar provider_1 = require(\"./provider\");\nObject.defineProperty(exports, \"SafeAppProvider\", { enumerable: true, get: function () { return provider_1.SafeAppProvider; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SafeAppProvider = void 0;\nconst events_1 = require(\"events\");\nconst utils_1 = require(\"./utils\");\nconst NETWORK_CHAIN_ID = {\n    MAINNET: 1,\n    RINKEBY: 4,\n    XDAI: 100,\n};\n// The API is based on Ethereum JavaScript API Provider Standard. Link: https://eips.ethereum.org/EIPS/eip-1193\nclass SafeAppProvider {\n    constructor(safe, sdk) {\n        this.submittedTxs = new Map();\n        this.events = new events_1.EventEmitter();\n        this.safe = safe;\n        this.sdk = sdk;\n    }\n    async connect() {\n        this.events.emit('connect', { chainId: this.chainId });\n        return;\n    }\n    async disconnect() {\n        return;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    get chainId() {\n        return NETWORK_CHAIN_ID[this.safe.network];\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async request(request) {\n        const { method, params = [] } = request;\n        switch (method) {\n            case 'eth_accounts':\n                return [this.safe.safeAddress];\n            case 'net_version':\n            case 'eth_chainId':\n                return `0x${this.chainId.toString(16)}`;\n            case 'eth_sendTransaction':\n                const tx = Object.assign({ value: '0', data: '0x' }, params[0]);\n                const resp = await this.sdk.txs.send({\n                    txs: [tx],\n                });\n                // Store fake transaction\n                this.submittedTxs.set(resp.safeTxHash, {\n                    from: this.safe.safeAddress,\n                    hash: resp.safeTxHash,\n                    gas: 0,\n                    gasPrice: '0x00',\n                    nonce: 0,\n                    input: tx.data,\n                    value: tx.value,\n                    to: tx.to,\n                    blockHash: null,\n                    blockNumber: null,\n                    transactionIndex: null,\n                });\n                return resp.safeTxHash;\n            case 'eth_blockNumber':\n                const block = await this.sdk.eth.getBlockByNumber(['latest']);\n                return block.number;\n            case 'eth_getBalance':\n                return this.sdk.eth.getBalance([utils_1.getLowerCase(params[0]), params[1]]);\n            case 'eth_getCode':\n                return this.sdk.eth.getCode([utils_1.getLowerCase(params[0]), params[1]]);\n            case 'eth_getStorageAt':\n                return this.sdk.eth.getStorageAt([utils_1.getLowerCase(params[0]), params[1], params[2]]);\n            case 'eth_getBlockByNumber':\n                return this.sdk.eth.getBlockByNumber([params[0], params[1]]);\n            case 'eth_getBlockByHash':\n                return this.sdk.eth.getBlockByHash([params[0], params[1]]);\n            case 'eth_getTransactionByHash':\n                let txHash = params[0];\n                try {\n                    const resp = await this.sdk.txs.getBySafeTxHash(txHash);\n                    txHash = resp.transactionHash || txHash;\n                }\n                catch (e) { }\n                // Use fake transaction if we don't have a real tx hash\n                if (this.submittedTxs.has(txHash)) {\n                    return this.submittedTxs.get(txHash);\n                }\n                return this.sdk.eth.getTransactionByHash([txHash]).then((tx) => {\n                    // We set the tx hash to the one requested, as some provider assert this\n                    if (tx) {\n                        tx.hash = params[0];\n                    }\n                    return tx;\n                });\n            case 'eth_getTransactionReceipt': {\n                let txHash = params[0];\n                try {\n                    const resp = await this.sdk.txs.getBySafeTxHash(txHash);\n                    txHash = resp.transactionHash || txHash;\n                }\n                catch (e) { }\n                return this.sdk.eth.getTransactionReceipt([txHash]).then((tx) => {\n                    // We set the tx hash to the one requested, as some provider assert this\n                    if (tx) {\n                        tx.transactionHash = params[0];\n                    }\n                    return tx;\n                });\n            }\n            case 'eth_estimateGas': {\n                return 0;\n            }\n            case 'eth_call': {\n                return this.sdk.eth.call([params[0], params[1]]);\n            }\n            case 'eth_getLogs':\n                return this.sdk.eth.getPastLogs([params[0]]);\n            default:\n                throw Error(`\"${request.method}\" not implemented`);\n        }\n    }\n}\nexports.SafeAppProvider = SafeAppProvider;\n//# sourceMappingURL=provider.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLowerCase = void 0;\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nexports.getLowerCase = getLowerCase;\n//# sourceMappingURL=utils.js.map","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;"],"sourceRoot":""}