{"version":3,"sources":["../node_modules/ethjs-util/lib/index.js","../../src/index.ts","../node_modules/assert/assert.js","secp256k1.ts","keccak.ts","../node_modules/ethereum-cryptography/node_modules/secp256k1/elliptic.js","../node_modules/keccak/js.js","../node_modules/ethereum-cryptography/node_modules/secp256k1/lib/index.js","../node_modules/ethereum-cryptography/node_modules/secp256k1/lib/elliptic.js","random.ts","hash-utils.ts","../node_modules/keccak/lib/api/index.js","../node_modules/keccak/lib/api/keccak.js","../node_modules/keccak/lib/api/shake.js","../node_modules/keccak/lib/keccak.js","../node_modules/keccak/lib/keccak-state-unroll.js"],"names":["isHexPrefixed","require","stripHexPrefix","padToEven","value","a","Error","length","intToHex","i","toString","module","exports","arrayContainsArray","superset","subset","some","Array","isArray","Boolean","indexOf","intToBuffer","hex","Buffer","slice","getBinarySize","str","byteLength","fromAscii","stringValue","n","charCodeAt","fromUtf8","replace","toAscii","l","substring","code","parseInt","substr","String","fromCharCode","toUtf8","getKeys","params","key","allowEmpty","result","push","isHexString","match","objectAssign","compare","b","x","y","len","Math","min","isBuffer","global","_isBuffer","util","hasOwn","Object","prototype","hasOwnProperty","pSlice","functionsHaveNames","name","pToString","obj","call","isView","arrbuf","ArrayBuffer","DataView","buffer","assert","ok","regex","getName","func","isFunction","truncate","s","inspect","something","rawname","fail","actual","expected","message","operator","stackStartFunction","AssertionError","_deepEqual","strict","memos","isDate","getTime","isRegExp","source","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","Uint8Array","actualIndex","actualVisitedObjects","undefined","isPrimitive","getPrototypeOf","aIsArgs","isArguments","bIsArgs","ka","objectKeys","kb","sort","objEquiv","object","expectedException","test","e","isPrototypeOf","_throws","shouldThrow","block","TypeError","error","_tryBlock","userProvidedMessage","isUnexpectedException","isError","options","self","this","generatedMessage","captureStackTrace","err","stack","out","fn_name","idx","next_line","inherits","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","keys","createKeccakHash","errors","cond","msg","isUint8Array","numbers","join","includes","isCompressed","toTypeString","getAssertedOutput","output","secp256k1","contextRandomize","seed","privateKeyVerify","seckey","privateKeyNegate","privateKeyTweakAdd","tweak","privateKeyTweakMul","publicKeyVerify","pubkey","publicKeyCreate","compressed","publicKeyConvert","publicKeyNegate","publicKeyCombine","pubkeys","publicKeyTweakAdd","publicKeyTweakMul","signatureNormalize","sig","signatureExport","outputlen","signatureImport","ecdsaSign","msg32","data","noncefn","signature","recid","ecdsaVerify","ecdsaRecover","ecdh","hashfn","xbuf","ybuf","ec","EC","ecparams","curve","BN","constructor","loadPublicKey","first","cmp","p","toRed","red","redSqr","redIMul","redIAdd","redSqrt","isOdd","redNeg","keyPair","pub","loadCompressedPublicKey","subarray","x3","redISub","isZero","loadUncompressedPublicKey","savePublicKey","point","encode","bn","negate","sub","umod","toArrayLike","set","iadd","isub","tweaked","imul","keyFromPrivate","getPublic","pair","pairs","add","isInfinity","g","mul","r","nh","sigR","sigS","lenR","posR","lenS","posS","_noncefn","counter","nonce","d","sign","canonical","k","pers","recoveryParam","sigObj","sigr","sigs","verify","recoverPubKey","scalar","sha256","hash","update","digest","getX","toArray","getY","resolve","createKeccak","createShake","KeccakState","Keccak","Shake","algorithm","toLowerCase","Transform","rate","capacity","delimitedSuffix","hashBitLength","_rate","_capacity","_delimitedSuffix","_hashBitLength","_options","_state","initialize","_finalized","chunk","encoding","callback","from","absorb","absorbLastFewBits","squeeze","_resetState","clone","copy","size","dataByteLength","keccakState","state","blockSize","count","squeezing","p1600","bits","alloc","dest","P1600_ROUND_CONSTANTS","round","lo0","hi0","lo1","hi1","lo2","hi2","lo3","hi3","lo4","hi4","lo","hi","t1slo0","t1shi0","t1slo5","t1shi5","t1slo10","t1shi10","t1slo15","t1shi15","t1slo20","t1shi20","t1slo1","t1shi1","t1slo6","t1shi6","t1slo11","t1shi11","t1slo16","t1shi16","t1slo21","t1shi21","t1slo2","t1shi2","t1slo7","t1shi7","t1slo12","t1shi12","t1slo17","t1shi17","t1slo22","t1shi22","t1slo3","t1shi3","t1slo8","t1shi8","t1slo13","t1shi13","t1slo18","t1shi18","t1slo23","t1shi23","t1slo4","t1shi4","t1slo9","t1shi9","t1slo14","t1shi14","t1slo19","t1shi19","t1slo24","t1shi24","t2slo0","t2shi0","t2slo16","t2shi16","t2slo7","t2shi7","t2slo23","t2shi23","t2slo14","t2shi14","t2slo10","t2shi10","t2slo1","t2shi1","t2slo17","t2shi17","t2slo8","t2shi8","t2slo24","t2shi24","t2slo20","t2shi20","t2slo11","t2shi11","t2slo2","t2shi2","t2slo18","t2shi18","t2slo9","t2shi9","t2slo5","t2shi5","t2slo21","t2shi21","t2slo12","t2shi12","t2slo3","t2shi3","t2slo19","t2shi19","t2slo15","t2shi15","t2slo6","t2shi6","t2slo22","t2shi22","t2slo13","t2shi13","t2slo4","t2shi4"],"mappings":"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","file":"static/js/1.5d11d3c4.chunk.js","sourcesContent":["'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLength = exports.decode = exports.encode = void 0;\nvar BN = require(\"bn.js\");\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * This function takes in a data, convert it to buffer if not, and a length for recursion\n * @param input - will be converted to buffer\n * @returns returns buffer of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        var output = [];\n        for (var i = 0; i < input.length; i++) {\n            output.push(encode(input[i]));\n        }\n        var buf = Buffer.concat(output);\n        return Buffer.concat([encodeLength(buf.length, 192), buf]);\n    }\n    else {\n        var inputBuf = toBuffer(input);\n        return inputBuf.length === 1 && inputBuf[0] < 128\n            ? inputBuf\n            : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf]);\n    }\n}\nexports.encode = encode;\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n * @param base The base to parse the integer into\n */\nfunction safeParseInt(v, base) {\n    if (v.slice(0, 2) === '00') {\n        throw new Error('invalid RLP: extra zeros');\n    }\n    return parseInt(v, base);\n}\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        return Buffer.from([len + offset]);\n    }\n    else {\n        var hexLength = intToHex(len);\n        var lLength = hexLength.length / 2;\n        var firstByte = intToHex(offset + 55 + lLength);\n        return Buffer.from(firstByte + hexLength, 'hex');\n    }\n}\nfunction decode(input, stream) {\n    if (stream === void 0) { stream = false; }\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var decoded = _decode(inputBuffer);\n    if (stream) {\n        return decoded;\n    }\n    if (decoded.remainder.length !== 0) {\n        throw new Error('invalid remainder');\n    }\n    return decoded.data;\n}\nexports.decode = decode;\n/**\n * Get the length of the RLP input\n * @param input\n * @returns The length of the input or an empty Buffer if no input\n */\nfunction getLength(input) {\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var firstByte = inputBuffer[0];\n    if (firstByte <= 0x7f) {\n        return inputBuffer.length;\n    }\n    else if (firstByte <= 0xb7) {\n        return firstByte - 0x7f;\n    }\n    else if (firstByte <= 0xbf) {\n        return firstByte - 0xb6;\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        return firstByte - 0xbf;\n    }\n    else {\n        // a list  over 55 bytes long\n        var llength = firstByte - 0xf6;\n        var length = safeParseInt(inputBuffer.slice(1, llength).toString('hex'), 16);\n        return llength + length;\n    }\n}\nexports.getLength = getLength;\n/** Decode an input with RLP */\nfunction _decode(input) {\n    var length, llength, data, innerRemainder, d;\n    var decoded = [];\n    var firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.slice(1),\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Buffer.from([]);\n        }\n        else {\n            data = input.slice(1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error('invalid rlp encoding: byte must be less 0x80');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length),\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error('invalid RLP: not enough bytes for string length');\n        }\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        if (length <= 55) {\n            throw new Error('invalid RLP: expected string length to be greater than 55');\n        }\n        data = input.slice(llength, length + llength);\n        if (data.length < length) {\n            throw new Error('invalid RLP: not enough bytes for string');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length + llength),\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = input.slice(1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(length),\n        };\n    }\n    else {\n        // a list  over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        var totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error('invalid rlp: total length is larger than the data');\n        }\n        innerRemainder = input.slice(llength, totalLength);\n        if (innerRemainder.length === 0) {\n            throw new Error('invalid rlp, List has a invalid length');\n        }\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(totalLength),\n        };\n    }\n}\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str) {\n    return str.slice(0, 2) === '0x';\n}\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform an integer into its hexadecimal value */\nfunction intToHex(integer) {\n    if (integer < 0) {\n        throw new Error('Invalid integer as argument, must be unsigned!');\n    }\n    var hex = integer.toString(16);\n    return hex.length % 2 ? \"0\" + hex : hex;\n}\n/** Pad a string to be even */\nfunction padToEven(a) {\n    return a.length % 2 ? \"0\" + a : a;\n}\n/** Transform an integer into a Buffer */\nfunction intToBuffer(integer) {\n    var hex = intToHex(integer);\n    return Buffer.from(hex, 'hex');\n}\n/** Transform anything into a Buffer */\nfunction toBuffer(v) {\n    if (!Buffer.isBuffer(v)) {\n        if (typeof v === 'string') {\n            if (isHexPrefixed(v)) {\n                return Buffer.from(padToEven(stripHexPrefix(v)), 'hex');\n            }\n            else {\n                return Buffer.from(v);\n            }\n        }\n        else if (typeof v === 'number' || typeof v === 'bigint') {\n            if (!v) {\n                return Buffer.from([]);\n            }\n            else {\n                return intToBuffer(v);\n            }\n        }\n        else if (v === null || v === undefined) {\n            return Buffer.from([]);\n        }\n        else if (v instanceof Uint8Array) {\n            return Buffer.from(v);\n        }\n        else if (BN.isBN(v)) {\n            // converts a BN to a Buffer\n            return Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n}\n//# sourceMappingURL=index.js.map","'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar secp256k1_1 = require(\"secp256k1\");\nvar random_1 = require(\"./random\");\nvar SECP256K1_PRIVATE_KEY_SIZE = 32;\nfunction createPrivateKey() {\n    return __awaiter(this, void 0, void 0, function () {\n        var pk;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!true) return [3 /*break*/, 2];\n                    return [4 /*yield*/, random_1.getRandomBytes(SECP256K1_PRIVATE_KEY_SIZE)];\n                case 1:\n                    pk = _a.sent();\n                    if (secp256k1_1.privateKeyVerify(pk)) {\n                        return [2 /*return*/, pk];\n                    }\n                    return [3 /*break*/, 0];\n                case 2: return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.createPrivateKey = createPrivateKey;\nfunction createPrivateKeySync() {\n    while (true) {\n        var pk = random_1.getRandomBytesSync(SECP256K1_PRIVATE_KEY_SIZE);\n        if (secp256k1_1.privateKeyVerify(pk)) {\n            return pk;\n        }\n    }\n}\nexports.createPrivateKeySync = createPrivateKeySync;\n__export(require(\"secp256k1\"));\n//# sourceMappingURL=secp256k1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hash_utils_1 = require(\"./hash-utils\");\nvar createKeccakHash = require(\"keccak\");\nexports.keccak224 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak224\");\n});\nexports.keccak256 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak256\");\n});\nexports.keccak384 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak384\");\n});\nexports.keccak512 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak512\");\n});\n//# sourceMappingURL=keccak.js.map","module.exports = require('./lib')(require('./lib/elliptic'))\n","module.exports = require('./lib/api')(require('./lib/keccak'))\n","const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n","const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar randombytes = require(\"randombytes\");\nfunction getRandomBytes(bytes) {\n    return new Promise(function (resolve, reject) {\n        randombytes(bytes, function (err, resp) {\n            if (err) {\n                reject(err);\n                return;\n            }\n            resolve(resp);\n        });\n    });\n}\nexports.getRandomBytes = getRandomBytes;\nfunction getRandomBytesSync(bytes) {\n    return randombytes(bytes);\n}\nexports.getRandomBytesSync = getRandomBytesSync;\n//# sourceMappingURL=random.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction createHashFunction(hashConstructor) {\n    return function (msg) {\n        var hash = hashConstructor();\n        hash.update(msg);\n        return Buffer.from(hash.digest());\n    };\n}\nexports.createHashFunction = createHashFunction;\n//# sourceMappingURL=hash-utils.js.map","const createKeccak = require('./keccak')\nconst createShake = require('./shake')\n\nmodule.exports = function (KeccakState) {\n  const Keccak = createKeccak(KeccakState)\n  const Shake = createShake(KeccakState)\n\n  return function (algorithm, options) {\n    const hash = typeof algorithm === 'string' ? algorithm.toLowerCase() : algorithm\n    switch (hash) {\n      case 'keccak224': return new Keccak(1152, 448, null, 224, options)\n      case 'keccak256': return new Keccak(1088, 512, null, 256, options)\n      case 'keccak384': return new Keccak(832, 768, null, 384, options)\n      case 'keccak512': return new Keccak(576, 1024, null, 512, options)\n\n      case 'sha3-224': return new Keccak(1152, 448, 0x06, 224, options)\n      case 'sha3-256': return new Keccak(1088, 512, 0x06, 256, options)\n      case 'sha3-384': return new Keccak(832, 768, 0x06, 384, options)\n      case 'sha3-512': return new Keccak(576, 1024, 0x06, 512, options)\n\n      case 'shake128': return new Shake(1344, 256, 0x1f, options)\n      case 'shake256': return new Shake(1088, 512, 0x1f, options)\n\n      default: throw new Error('Invald algorithm: ' + algorithm)\n    }\n  }\n}\n","const { Transform } = require('stream')\n\nmodule.exports = (KeccakState) => class Keccak extends Transform {\n  constructor (rate, capacity, delimitedSuffix, hashBitLength, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._hashBitLength = hashBitLength\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush (callback) {\n    let error = null\n    try {\n      this.push(this.digest())\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Digest already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  digest (encoding) {\n    if (this._finalized) throw new Error('Digest already called')\n    this._finalized = true\n\n    if (this._delimitedSuffix) this._state.absorbLastFewBits(this._delimitedSuffix)\n    let digest = this._state.squeeze(this._hashBitLength / 8)\n    if (encoding !== undefined) digest = digest.toString(encoding)\n\n    this._resetState()\n\n    return digest\n  }\n\n  // remove result from memory\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  // because sometimes we need hash right now and little later\n  _clone () {\n    const clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n","const { Transform } = require('stream')\n\nmodule.exports = (KeccakState) => class Shake extends Transform {\n  constructor (rate, capacity, delimitedSuffix, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush () {}\n\n  _read (size) {\n    this.push(this.squeeze(size))\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Squeeze already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  squeeze (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true\n      this._state.absorbLastFewBits(this._delimitedSuffix)\n    }\n\n    let data = this._state.squeeze(dataByteLength)\n    if (encoding !== undefined) data = data.toString(encoding)\n\n    return data\n  }\n\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  _clone () {\n    const clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n","const keccakState = require('./keccak-state-unroll')\n\nfunction Keccak () {\n  // much faster than `new Array(50)`\n  this.state = [\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0\n  ]\n\n  this.blockSize = null\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.initialize = function (rate, capacity) {\n  for (let i = 0; i < 50; ++i) this.state[i] = 0\n  this.blockSize = rate / 8\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.absorb = function (data) {\n  for (let i = 0; i < data.length; ++i) {\n    this.state[~~(this.count / 4)] ^= data[i] << (8 * (this.count % 4))\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n}\n\nKeccak.prototype.absorbLastFewBits = function (bits) {\n  this.state[~~(this.count / 4)] ^= bits << (8 * (this.count % 4))\n  if ((bits & 0x80) !== 0 && this.count === (this.blockSize - 1)) keccakState.p1600(this.state)\n  this.state[~~((this.blockSize - 1) / 4)] ^= 0x80 << (8 * ((this.blockSize - 1) % 4))\n  keccakState.p1600(this.state)\n  this.count = 0\n  this.squeezing = true\n}\n\nKeccak.prototype.squeeze = function (length) {\n  if (!this.squeezing) this.absorbLastFewBits(0x01)\n\n  const output = Buffer.alloc(length)\n  for (let i = 0; i < length; ++i) {\n    output[i] = (this.state[~~(this.count / 4)] >>> (8 * (this.count % 4))) & 0xff\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n\n  return output\n}\n\nKeccak.prototype.copy = function (dest) {\n  for (let i = 0; i < 50; ++i) dest.state[i] = this.state[i]\n  dest.blockSize = this.blockSize\n  dest.count = this.count\n  dest.squeezing = this.squeezing\n}\n\nmodule.exports = Keccak\n","const P1600_ROUND_CONSTANTS = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648]\n\nexports.p1600 = function (s) {\n  for (let round = 0; round < 24; ++round) {\n    // theta\n    const lo0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40]\n    const hi0 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41]\n    const lo1 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42]\n    const hi1 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43]\n    const lo2 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44]\n    const hi2 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45]\n    const lo3 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46]\n    const hi3 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47]\n    const lo4 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48]\n    const hi4 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49]\n\n    let lo = lo4 ^ (lo1 << 1 | hi1 >>> 31)\n    let hi = hi4 ^ (hi1 << 1 | lo1 >>> 31)\n    const t1slo0 = s[0] ^ lo\n    const t1shi0 = s[1] ^ hi\n    const t1slo5 = s[10] ^ lo\n    const t1shi5 = s[11] ^ hi\n    const t1slo10 = s[20] ^ lo\n    const t1shi10 = s[21] ^ hi\n    const t1slo15 = s[30] ^ lo\n    const t1shi15 = s[31] ^ hi\n    const t1slo20 = s[40] ^ lo\n    const t1shi20 = s[41] ^ hi\n    lo = lo0 ^ (lo2 << 1 | hi2 >>> 31)\n    hi = hi0 ^ (hi2 << 1 | lo2 >>> 31)\n    const t1slo1 = s[2] ^ lo\n    const t1shi1 = s[3] ^ hi\n    const t1slo6 = s[12] ^ lo\n    const t1shi6 = s[13] ^ hi\n    const t1slo11 = s[22] ^ lo\n    const t1shi11 = s[23] ^ hi\n    const t1slo16 = s[32] ^ lo\n    const t1shi16 = s[33] ^ hi\n    const t1slo21 = s[42] ^ lo\n    const t1shi21 = s[43] ^ hi\n    lo = lo1 ^ (lo3 << 1 | hi3 >>> 31)\n    hi = hi1 ^ (hi3 << 1 | lo3 >>> 31)\n    const t1slo2 = s[4] ^ lo\n    const t1shi2 = s[5] ^ hi\n    const t1slo7 = s[14] ^ lo\n    const t1shi7 = s[15] ^ hi\n    const t1slo12 = s[24] ^ lo\n    const t1shi12 = s[25] ^ hi\n    const t1slo17 = s[34] ^ lo\n    const t1shi17 = s[35] ^ hi\n    const t1slo22 = s[44] ^ lo\n    const t1shi22 = s[45] ^ hi\n    lo = lo2 ^ (lo4 << 1 | hi4 >>> 31)\n    hi = hi2 ^ (hi4 << 1 | lo4 >>> 31)\n    const t1slo3 = s[6] ^ lo\n    const t1shi3 = s[7] ^ hi\n    const t1slo8 = s[16] ^ lo\n    const t1shi8 = s[17] ^ hi\n    const t1slo13 = s[26] ^ lo\n    const t1shi13 = s[27] ^ hi\n    const t1slo18 = s[36] ^ lo\n    const t1shi18 = s[37] ^ hi\n    const t1slo23 = s[46] ^ lo\n    const t1shi23 = s[47] ^ hi\n    lo = lo3 ^ (lo0 << 1 | hi0 >>> 31)\n    hi = hi3 ^ (hi0 << 1 | lo0 >>> 31)\n    const t1slo4 = s[8] ^ lo\n    const t1shi4 = s[9] ^ hi\n    const t1slo9 = s[18] ^ lo\n    const t1shi9 = s[19] ^ hi\n    const t1slo14 = s[28] ^ lo\n    const t1shi14 = s[29] ^ hi\n    const t1slo19 = s[38] ^ lo\n    const t1shi19 = s[39] ^ hi\n    const t1slo24 = s[48] ^ lo\n    const t1shi24 = s[49] ^ hi\n\n    // rho & pi\n    const t2slo0 = t1slo0\n    const t2shi0 = t1shi0\n    const t2slo16 = (t1shi5 << 4 | t1slo5 >>> 28)\n    const t2shi16 = (t1slo5 << 4 | t1shi5 >>> 28)\n    const t2slo7 = (t1slo10 << 3 | t1shi10 >>> 29)\n    const t2shi7 = (t1shi10 << 3 | t1slo10 >>> 29)\n    const t2slo23 = (t1shi15 << 9 | t1slo15 >>> 23)\n    const t2shi23 = (t1slo15 << 9 | t1shi15 >>> 23)\n    const t2slo14 = (t1slo20 << 18 | t1shi20 >>> 14)\n    const t2shi14 = (t1shi20 << 18 | t1slo20 >>> 14)\n    const t2slo10 = (t1slo1 << 1 | t1shi1 >>> 31)\n    const t2shi10 = (t1shi1 << 1 | t1slo1 >>> 31)\n    const t2slo1 = (t1shi6 << 12 | t1slo6 >>> 20)\n    const t2shi1 = (t1slo6 << 12 | t1shi6 >>> 20)\n    const t2slo17 = (t1slo11 << 10 | t1shi11 >>> 22)\n    const t2shi17 = (t1shi11 << 10 | t1slo11 >>> 22)\n    const t2slo8 = (t1shi16 << 13 | t1slo16 >>> 19)\n    const t2shi8 = (t1slo16 << 13 | t1shi16 >>> 19)\n    const t2slo24 = (t1slo21 << 2 | t1shi21 >>> 30)\n    const t2shi24 = (t1shi21 << 2 | t1slo21 >>> 30)\n    const t2slo20 = (t1shi2 << 30 | t1slo2 >>> 2)\n    const t2shi20 = (t1slo2 << 30 | t1shi2 >>> 2)\n    const t2slo11 = (t1slo7 << 6 | t1shi7 >>> 26)\n    const t2shi11 = (t1shi7 << 6 | t1slo7 >>> 26)\n    const t2slo2 = (t1shi12 << 11 | t1slo12 >>> 21)\n    const t2shi2 = (t1slo12 << 11 | t1shi12 >>> 21)\n    const t2slo18 = (t1slo17 << 15 | t1shi17 >>> 17)\n    const t2shi18 = (t1shi17 << 15 | t1slo17 >>> 17)\n    const t2slo9 = (t1shi22 << 29 | t1slo22 >>> 3)\n    const t2shi9 = (t1slo22 << 29 | t1shi22 >>> 3)\n    const t2slo5 = (t1slo3 << 28 | t1shi3 >>> 4)\n    const t2shi5 = (t1shi3 << 28 | t1slo3 >>> 4)\n    const t2slo21 = (t1shi8 << 23 | t1slo8 >>> 9)\n    const t2shi21 = (t1slo8 << 23 | t1shi8 >>> 9)\n    const t2slo12 = (t1slo13 << 25 | t1shi13 >>> 7)\n    const t2shi12 = (t1shi13 << 25 | t1slo13 >>> 7)\n    const t2slo3 = (t1slo18 << 21 | t1shi18 >>> 11)\n    const t2shi3 = (t1shi18 << 21 | t1slo18 >>> 11)\n    const t2slo19 = (t1shi23 << 24 | t1slo23 >>> 8)\n    const t2shi19 = (t1slo23 << 24 | t1shi23 >>> 8)\n    const t2slo15 = (t1slo4 << 27 | t1shi4 >>> 5)\n    const t2shi15 = (t1shi4 << 27 | t1slo4 >>> 5)\n    const t2slo6 = (t1slo9 << 20 | t1shi9 >>> 12)\n    const t2shi6 = (t1shi9 << 20 | t1slo9 >>> 12)\n    const t2slo22 = (t1shi14 << 7 | t1slo14 >>> 25)\n    const t2shi22 = (t1slo14 << 7 | t1shi14 >>> 25)\n    const t2slo13 = (t1slo19 << 8 | t1shi19 >>> 24)\n    const t2shi13 = (t1shi19 << 8 | t1slo19 >>> 24)\n    const t2slo4 = (t1slo24 << 14 | t1shi24 >>> 18)\n    const t2shi4 = (t1shi24 << 14 | t1slo24 >>> 18)\n\n    // chi\n    s[0] = t2slo0 ^ (~t2slo1 & t2slo2)\n    s[1] = t2shi0 ^ (~t2shi1 & t2shi2)\n    s[10] = t2slo5 ^ (~t2slo6 & t2slo7)\n    s[11] = t2shi5 ^ (~t2shi6 & t2shi7)\n    s[20] = t2slo10 ^ (~t2slo11 & t2slo12)\n    s[21] = t2shi10 ^ (~t2shi11 & t2shi12)\n    s[30] = t2slo15 ^ (~t2slo16 & t2slo17)\n    s[31] = t2shi15 ^ (~t2shi16 & t2shi17)\n    s[40] = t2slo20 ^ (~t2slo21 & t2slo22)\n    s[41] = t2shi20 ^ (~t2shi21 & t2shi22)\n    s[2] = t2slo1 ^ (~t2slo2 & t2slo3)\n    s[3] = t2shi1 ^ (~t2shi2 & t2shi3)\n    s[12] = t2slo6 ^ (~t2slo7 & t2slo8)\n    s[13] = t2shi6 ^ (~t2shi7 & t2shi8)\n    s[22] = t2slo11 ^ (~t2slo12 & t2slo13)\n    s[23] = t2shi11 ^ (~t2shi12 & t2shi13)\n    s[32] = t2slo16 ^ (~t2slo17 & t2slo18)\n    s[33] = t2shi16 ^ (~t2shi17 & t2shi18)\n    s[42] = t2slo21 ^ (~t2slo22 & t2slo23)\n    s[43] = t2shi21 ^ (~t2shi22 & t2shi23)\n    s[4] = t2slo2 ^ (~t2slo3 & t2slo4)\n    s[5] = t2shi2 ^ (~t2shi3 & t2shi4)\n    s[14] = t2slo7 ^ (~t2slo8 & t2slo9)\n    s[15] = t2shi7 ^ (~t2shi8 & t2shi9)\n    s[24] = t2slo12 ^ (~t2slo13 & t2slo14)\n    s[25] = t2shi12 ^ (~t2shi13 & t2shi14)\n    s[34] = t2slo17 ^ (~t2slo18 & t2slo19)\n    s[35] = t2shi17 ^ (~t2shi18 & t2shi19)\n    s[44] = t2slo22 ^ (~t2slo23 & t2slo24)\n    s[45] = t2shi22 ^ (~t2shi23 & t2shi24)\n    s[6] = t2slo3 ^ (~t2slo4 & t2slo0)\n    s[7] = t2shi3 ^ (~t2shi4 & t2shi0)\n    s[16] = t2slo8 ^ (~t2slo9 & t2slo5)\n    s[17] = t2shi8 ^ (~t2shi9 & t2shi5)\n    s[26] = t2slo13 ^ (~t2slo14 & t2slo10)\n    s[27] = t2shi13 ^ (~t2shi14 & t2shi10)\n    s[36] = t2slo18 ^ (~t2slo19 & t2slo15)\n    s[37] = t2shi18 ^ (~t2shi19 & t2shi15)\n    s[46] = t2slo23 ^ (~t2slo24 & t2slo20)\n    s[47] = t2shi23 ^ (~t2shi24 & t2shi20)\n    s[8] = t2slo4 ^ (~t2slo0 & t2slo1)\n    s[9] = t2shi4 ^ (~t2shi0 & t2shi1)\n    s[18] = t2slo9 ^ (~t2slo5 & t2slo6)\n    s[19] = t2shi9 ^ (~t2shi5 & t2shi6)\n    s[28] = t2slo14 ^ (~t2slo10 & t2slo11)\n    s[29] = t2shi14 ^ (~t2shi10 & t2shi11)\n    s[38] = t2slo19 ^ (~t2slo15 & t2slo16)\n    s[39] = t2shi19 ^ (~t2shi15 & t2shi16)\n    s[48] = t2slo24 ^ (~t2slo20 & t2slo21)\n    s[49] = t2shi24 ^ (~t2shi20 & t2shi21)\n\n    // iota\n    s[0] ^= P1600_ROUND_CONSTANTS[round * 2]\n    s[1] ^= P1600_ROUND_CONSTANTS[round * 2 + 1]\n  }\n}\n"],"sourceRoot":""}