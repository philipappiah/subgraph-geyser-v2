{"version":3,"sources":["constants.ts","context/AppContext.tsx","components/Spinner.tsx","styling/styles.ts","components/Button.tsx","sdk/abis.ts","sdk/utils.ts","sdk/stats.ts","sdk/tokens.ts","sdk/actions.ts","utils/cache.ts","utils/token.ts","styling/colors.ts","config/geyser.ts","utils/abis/BalancerBPoolV1.ts","utils/abis/BalancerCRPV1.ts","utils/abis/MooniswapV1Pair.ts","utils/abis/UniswapV2Pair.ts","utils/price.ts","utils/stakingToken.ts","queries/geyser.ts","utils/abis/UFragments.ts","utils/abis/UFragmentsPolicy.ts","utils/eth.ts","utils/ampleforth.ts","utils/rewardToken.ts","config/additionalTokens.ts","context/Web3Context.tsx","context/GeyserContext.tsx","components/ToggleView.tsx","queries/vault.ts","context/VaultContext.tsx","context/WalletContext.tsx","utils/stats.ts","context/StatsContext.tsx","utils/numeral.ts","utils/amount.ts","components/PositiveInput.tsx","hooks/useTxStateMachine.ts","components/Modal.tsx","components/ProcessingButton.tsx","components/EtherscanLink.tsx","components/SingleTxMessage.tsx","components/SingleTxModal.tsx","components/GeyserFirst/GeyserInteractionButton.tsx","components/GeyserFirst/UserBalance.tsx","assets/rewardSymbol.svg","assets/info.svg","components/Tooltip.tsx","components/GeyserFirst/EstimatedRewards.tsx","assets/warning.svg","components/GeyserFirst/ConnectWalletWarning.tsx","components/GeyserFirst/UnstakeSummary.tsx","components/GeyserFirst/UnstakeConfirmModal.tsx","components/GeyserFirst/UnstakeTxModal.tsx","components/GeyserFirst/WithdrawTxMessage.tsx","components/GeyserFirst/GeyserStakeView.tsx","components/GeyserFirst/GeyserStatsBox.tsx","components/GeyserFirst/MyStatsBox.tsx","components/GeyserFirst/MyStats.tsx","components/GeyserFirst/GeyserStats.tsx","components/GeyserFirst/GeyserStatsView.tsx","components/GeyserFirst/GeyserFirstContainer.tsx","components/Table.tsx","components/VaultFirst/VaultBalanceView.tsx","components/VaultFirst/VaultFirstContainer.tsx","components/Body.tsx","components/HeaderWalletButton.tsx","types.ts","utils/formatDisplayAddress.ts","components/HeaderToggle.tsx","components/Header.tsx","queries/client.ts","assets/caret_down.svg","assets/checkmark_light.svg","components/Dropdown.tsx","components/GeysersList.tsx","assets/clipboard.svg","components/ToolButton.tsx","components/VaultsList.tsx","components/DropdownsContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Mode","TxState","DAY_IN_SEC","MONTH_IN_SEC","YEAR_IN_SEC","CONST_CACHE_TIME_MS","StakingToken","RewardToken","EXTERNAL_LINKS","Align","UFRG_INIT_BLOCK","AMPL_LAUNCH_DATE","INITIAL_SUPPLY","GET_APY_NO_STAKE_MSG","days","GET_REWARD_MULTIPLIER_MSG","multiplier","INFURA_PROJECT_ID","AppContext","createContext","mode","GEYSERS","toggleMode","AppContextProvider","children","useState","appMode","setAppMode","Provider","value","VAULTS","Spinner","fill","className","viewBox","cx","cy","r","stroke","strokeWidth","d","Paragraph","styled","p","props","color","Overlay","div","ResponsiveHeader","css","ResponsiveText","ResponsiveSubText","Centered","Ellipsis","CardLabel","span","CardValue","ModalButton","isLoading","type","ERC20_ABI","anonymous","inputs","indexed","internalType","name","outputs","stateMutability","payable","loadNetworkConfig","signerOrProvider","a","Signer","isSigner","provider","getNetwork","localhostConfig","signPermission","method","vault","owner","delegateAddress","tokenAddress","amount","vaultNonce","chainId","getNonce","domain","version","verifyingContract","address","types","delegate","token","nonce","_signTypedData","signedPermission","parseEventFromReceipt","receipt","contract","event","filter","filters","eventFilter","topics","length","topicHash","filteredLogs","logs","log","interface","parseLog","_execGeyserFunction","geyserAddress","fnc","args","config","geyser","Contract","GeyserTemplate","abi","_execVaultFunction","vaultAddress","VaultTemplate","getCurrentVaultReward","getCurrentUnlockedRewards","getFutureUnlockedRewards","timestamp","getCurrentStakeReward","getBalanceLocked","getClaimedRewardsFromUnstake","eventLog","_execTokenFunction","ERC20Decimals","ERC20Name","ERC20Symbol","ERC20Balance","holderAddress","unstake","signer","getGeyserData","stakingToken","permission","unstakeAndClaim","withdraw","recipientAddress","transferERC20","withdrawRewards","claimedRewards","rewards","BigNumber","from","isZero","response","withdrawUnlocked","unlockedBalance","sub","approveCreateDepositStake","router","RouterV1","salt","randomBytes","callStatic","create2Vault","VaultFactory","lockPermission","getAddress","allowance","lt","approve","wait","create2VaultAndStake","approveDepositStake","amountToStake","balanceOf","getBalanceDelegated","stakableAmountInVault","remainingAmountToTransfer","gt","transfer","stake","set","key","ttl","data","expiresAt","Date","getTime","localStorage","setItem","JSON","stringify","get","getItem","parse","removeItem","computeAndCache","getValueOperation","useCache","cachedValue","NamedColors","getTokenInfo","toChecksumAddress","ls","symbol","decimals","meterGeyserConfig","MOCK","rewardToken","geyserConfigs","BALANCER_BPOOL_V1_ABI","constant","BALANCER_CRP_V1_ABI","components","MOONISWAP_V1_PAIR_ABI","UNISWAP_V2_PAIR_ABI","DEFAULT_PRICES","AMPL","BTC","WETH","LINK","BAL","LEND","COMP","MKR","CRV","BZRX","YFI","NMR","USDC","SYMBOL_TO_QUERY","WBTC","getCurrentPrice","cacheKey","TTL","HOUR_IN_SEC","query","Error","client","CGApi","Promise","race","simple","price","ids","vs_currencies","_","reject","setTimeout","reqTimeoutSec","usd","console","error","defaultStakingTokenInfo","totalSupply","marketCap","composition","getStakingTokenInfo","UNISWAP_V2","SUSHISWAP","MOONISWAP_V1","BALANCER_V1","BALANCER_SMART_POOL_V1","getMockLPToken","getUniswapV2","getSushiswap","getMooniswap","getBalancerV1","getBalancerSmartPoolV1","getTokenComposition","stakingTokenAddress","weight","balance","balanceNumber","parseInt","formatUnits","getTokenCompositions","tokenAddresses","weights","all","map","index","getMarketCap","reduce","m","c","uniswapV2Pair","namePrefix","symbolPrefix","token0","token0Address","token1","token1Address","totalSupplyNumber","parseFloat","tokenCompositions","token0Symbol","token1Symbol","getTokens","tokens","getBalancerTokenCompositions","getCurrentTokens","getTotalDenormalizedWeight","totalDenormalizedWeight","getDenormalizedWeight","tokenDenormalizedWeights","tokenWeights","w","bPool","GET_GEYSERS","gql","UFRAGMENTS_ABI","UFRAGMENTS_POLICY_ABI","getDefaultProvider","ethers","providers","InfuraProvider","getWebSocketProvider","loadHistoricalLogs","eventName","startBlock","queryFilter","getTotalRewardShares","rewardSchedules","policyAddress","epoch","getSupplyHistory","supplyHistory","getShares","schedule","rewardAmount","getSupplyOn","start","acc","findIndex","ts","Math","max","supply","policy","eventLogs","historyFromLogs","timestampSec","toString","requestedSupplyAdjustment","concat","i","cached","defaultRewardTokenInfo","getTotalRewards","getRewardTokenInfo","getMockToken","getAMPLToken","tokenInfo","monetaryPolicy","totalRewardShares","additionalTokens","enabled","Web3Provider","Web3Context","selectWallet","ready","wallet","defaultProvider","setAddress","setWallet","onboard","setOnboard","setProvider","setSigner","setReady","updateWallet","useCallback","newWallet","ethersProvider","rpcSigner","getSigner","useEffect","subscriptions","onboardAPI","selectedAddress","Onboard","networkName","networkId","previouslySelectedWallet","walletSelect","walletSelected","walletCheck","isReady","getState","GeyserContext","geysers","selectedGeyserInfo","stakingTokenInfo","rewardTokenInfo","selectGeyser","selectGeyserById","selectGeyserByName","isStakingAction","toggleStakingAction","handleGeyserAction","undefined","allTokensInfos","getGeyserName","selectedGeyserConfig","GeyserContextProvider","useContext","useLazyQuery","pollInterval","getGeysers","geyserLoading","loading","geyserData","setGeysers","setSelectedGeyserInfo","setSelectedGeyserConfig","setAllTokensInfos","Map","geyserAddressToName","geyserNameToAddress","setIsStakingAction","selectedVault","parsedAmount","handleStake","handleUnstake","id","geyserConfig","find","newStakingTokenInfo","newRewardTokenInfo","g","geyserId","toLowerCase","variables","currentGeysers","status","powerSwitch","sort","b","indexOf","geyserAddressToTokens","geyserTokens","rewardTokenAddress","geyserTokensSet","Set","flatMap","rewardTokens","stakingTokens","allSettled","has","additionalTokensInfos","result","newAllTokensInfos","ToggleView","toggle","options","checked","onChange","SwitchContainer","SwitchOptionOne","SwitchOptionTwo","GET_USER_VAULTS","VaultContext","vaults","selectVault","selectVaultById","currentLock","withdrawFromVault","withdrawRewardsFromVault","withdrawUnlockedFromVault","VaultContextProvider","selectedGeyser","getVaults","vaultLoading","vaultData","setVaults","setSelectedVault","setCurrentLock","user","userVaults","lockId","locks","lock","WalletContext","walletAmount","refreshWalletAmount","WalletContextProvider","setWalletAmount","getWalletAmount","mounted","nowInSeconds","round","now","getGeyserDuration","schedulesEndTime","duration","endTime","getCalcPeriod","scalingTime","geyserDuration","min","getGeyserTotalDeposit","totalStake","getGeyserStats","totalDeposit","totalRewards","calcPeriodInDays","MIN_IN_SEC","getTotalStakeUnits","cachedTotalStakeUnits","totalStakeUnits","lastUpdate","lastUpdateTime","durationSinceLastUpdate","add","mul","getLockStakeUnits","cachedStakeUnits","stakeUnits","getPoolDrip","end","getUserDrip","additionalStakes","afterDuration","poolDrip","stakeUnitsFromAdditionalStake","totalStakeUnitsAfterDuration","lockStakeUnitsAfterDuration","getUserDripAfterWithdraw","withdrawAmount","getStakeDrip","stakeUnitsFromStake","calculateAPY","inflow","outflow","periods","getUserAPY","stakingTokenDecimals","stakingTokenPrice","rewardTokenDecimals","rewardTokenSymbol","rewardTokenPrice","calcPeriod","drip","stakedAmount","getPoolAPY","stakeDripAfterPeriod","getCurrentMultiplier","scalingFloor","scalingCeiling","minMultiplier","maxMultiplier","lockStakeUnits","currentUnlockedRewards","currentRewards","maxRewards","fraction","getUserStats","apy","currentMultiplier","currentReward","formattedCurrentRewards","getVaultTokenBalance","parsedBalance","lockedBalance","parsedUnlockedBalance","getVaultStats","stakingTokenBalance","rewardTokenBalance","vaultTokenBalances","currentStake","addressSet","stakingTokenBalanceInfo","rewardTokenBalanceInfo","isDuplicate","additionalTokenBalances","StatsContext","userStats","geyserStats","vaultStats","computeRewardsFromUnstake","computeAPYFromAdditionalStakes","computeRewardsFromAdditionalStakes","computeLossFromUnstake1Month","refreshVaultStats","StatsContextProvider","setUserStats","setGeyserStats","setVaultStats","unstakeAmount","computedRewards","stakeAmount","normalGains","gainsAfterUnstake","newGeyserStats","newUserStats","newVaultStats","safeNumeral","n","f","safeNum","numeral","format","formatWithDecimals","parts","split","missingDecimals","Array","join","amountOrZero","PositiveInput","precision","maxValue","Container","Input","e","pattern","RegExp","currentTarget","test","respectsPrecision","parseUnits","lte","respectsMax","onClick","input","Button","button","useTxStateMachine","submit","state","PENDING","currentTxState","setCurrentTxState","txState","MINED","FAILED","submitTx","SUBMITTED","refresh","ModalContext","ref","Modal","Object","assign","open","onClose","disableClose","initialFocus","useRef","appear","show","as","Fragment","aria-hidden","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","ContentContainer","Title","Body","Consumer","MessageContainer","Message","Footer","FooterContainer","ProcessingButton","DisabledButton","disabled","EtherscanLink","txHash","rel","href","target","SingleTxMessage","txStateMachine","successMessage","hash","getTxMessage","SingleTxModal","txSuccessMessage","setSuccessMessage","isProcessing","includes","GeyserInteractionButton","displayText","UserBalance","currentAmount","formatDisplayAmount","amt","formatAmount","FlexDiv","Text","Tooltip","messages","classNames","panelClassnames","src","info","alt","Panel","OuterLayer","InnerLayer","title","body","EstimatedRewards","parsedUserInput","setRewards","EstimatedRewardsContainer","ColoredDiv","Icon","rewardSymbol","RewardsTextContainer","img","ConnectWalletWarning","ConnectWalletWarningContainer","Content","Img","warning","ButtonWrapper","UnstakeSummary","userInput","stakingTokenSymbol","setRewardAmount","SummaryCard","Label","Value","Amount","UnstakeConfirmModal","onConfirm","loss","setLoss","ConfirmButton","UnstakeTxModal","unstakeSuccessMessage","withdrawStaking","withdrawReward","withdrawStakingTxMessage","withdrawRewardTxMessage","unstakeTxStateMachine","withdrawStakeStateMachine","withdrawRewardStateMachine","submittedWithdraw","setSubmittedWithdraw","unstakeState","unstakeReceipt","processingStates","unstakeProcessing","withdrawProcessing","WithdrawTxMessage","GeyserStakeView","setUserInput","setParsedUserInput","currentStakeAmount","unstakeConfirmModalOpen","setUnstakeConfirmModalOpen","actualRewardsFromUnstake","setActualRewardsFromUnstake","actualStakingTokensFromUnstake","setActualStakingTokensFromUnstake","txModalOpen","setTxModalOpen","refreshInputAmount","onCloseTxModal","tx","GeyserStakeViewContainer","placeholder","GeyserStatsBox","targetValue","units","interpolate","statsValue","setStatsValue","useSpring","val","GeyserStatsBoxContainer","GeyserStatsBoxLabel","GeyserStatsBoxValueContainer","GeyserStatsBoxValue","GeyserStatsBoxUnits","MyStatsBox","delim","MyStatContainer","MyStatName","MyStatValueContainer","MyStatValue","MyStatUnits","MyStats","getTooltipMessages","MyStatsContainer","MyStatsWrapper","slice","GeyserStatsContainer","Header","h3","GeyserStats","GeyserStatsView","GeyserFirstContainer","ToggleContainer","Table","columns","dataSource","rows","source","dataIndex","getOwnPropertyDescriptor","getAlignmentClass","textAlign","CENTER","LEFT","RIGHT","getPaddingClass","colNumber","numCols","TableContent","TableHead","widthClass","HeaderCell","TableBody","row","rowNumber","TableRow","cell","RowCell","Spacer","table","tr","thead","tbody","th","td","VaultBalanceView","tokenBalance","setTokenBalance","modalOpen","setModalOpen","vaultTokenBalance","TextEllipsis","unlocked","action","ActionButton","ButtonText","VaultFirstContainer","GeyserStatus","HeaderWalletButton","addr","autoCapitalize","WHITE","formatAddr","HeaderToggle","Group","SwitchLabel","Switchy","Switch","LeftContainer","LogoSpan","MiddleContainer","RightContainer","ApolloClient","uri","cache","InMemoryCache","Dropdown","groups","optgroups","selectedOption","renderOptions","opts","option","Option","active","selected","checkMark","OptionsWrapper","caretDown","Options","group","GeysersList","SHUTDOWN","GeysersListContainer","Heading","geyserName","ToolButton","VaultsList","VaultsListContainer","navigator","clipboard","writeText","copy","vaultId","SelectedOption","DropdownsContainer","Center","App","ApolloProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+xWA4BYA,EAMAC,E,2DA9BCC,EAAa,MAEbC,EAAe,OACfC,EAAc,QAadC,EANaD,S,SAcdJ,O,mBAAAA,I,sBAAAA,M,cAMAC,O,qBAAAA,I,yBAAAA,I,iBAAAA,I,oBAAAA,M,KAOL,IAKKK,EAaAC,EAlBCC,EACA,2B,SAIDF,O,eAAAA,I,2BAAAA,I,yBAAAA,I,+BAAAA,I,6BAAAA,I,oDAAAA,M,cAaAC,O,eAAAA,I,gBAAAA,M,KAUL,IAyBKE,EAtBCC,EAAkB,QAElBC,EAAmB,WACnBC,EAAiB,IAMjBC,EAAuB,SAAC,GAAD,QAAGC,KAAH,0FAAU,IAAV,4MAGvBC,EAA4B,SAAC,GAAD,QAAGD,YAAH,MAAU,IAAV,MAAeE,kBAAf,MAA4B,MAA5B,+CACPF,EADO,8BACmBE,EADnB,0B,SAU7BP,O,eAAAA,I,iBAAAA,I,oBAAAA,M,KAOL,I,QAGMQ,EAAoB,mC,OCrGpBC,EAAaC,wBAGvB,CACDC,KAAMpB,EAAKqB,QACXC,WAAY,eAGDC,EAA+B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7C,EAA8BC,mBAAezB,EAAKqB,SAAlD,mBAAOK,EAAP,KAAgBC,EAAhB,KAIA,OAAO,cAACT,EAAWU,SAAZ,CAAqBC,MAAO,CAAET,KAAMM,EAASJ,WAFjC,kBAAMK,EAAWD,IAAY1B,EAAKqB,QAAUrB,EAAK8B,OAAS9B,EAAKqB,WAE3E,SAA4DG,K,wBCfxDO,EAAU,kBACrB,sBAAKC,KAAK,OAAOC,UAAU,6CAA6CC,QAAQ,YAAhF,UACE,wBAAQD,UAAU,aAAaE,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKC,OAAO,eAAeC,YAAY,MACxF,sBAAMN,UAAU,aAAaD,KAAK,eAAeQ,EAAE,wHCA1CC,EAAYC,IAAOC,EAAV,wEAAGD,CAAH,mBACX,SAACE,GAAD,OAAWA,EAAMC,QACtB,sEAGOC,EAAUJ,IAAOK,IAAV,sEAAGL,CAAH,YACd,oOACA,sEAGOM,EAAmBC,YAAH,kCACvB,8GAGOC,EAAiBD,YAAH,kCACrB,8GAGOE,EAAoBF,YAAH,kCACxB,2GAGOG,EAAWV,IAAOK,IAAV,uEAAGL,CAAH,QACf,+DAGOW,EAAWJ,YAAH,kCACf,6CAKOK,EAAYZ,IAAOa,KAAV,wEAAGb,CAAH,QAChB,0IAGOc,EAAYd,IAAOa,KAAV,wEAAGb,CAAH,QAChB,gGAGOe,EAAcf,aCtCY,SAACE,GACtC,IAAQc,EAAwBd,EAAxBc,UAAWlC,EAAaoB,EAAbpB,SACnB,OACE,iDAAQmC,KAAK,UAAaf,GAA1B,cACGc,GAAa,cAAC,EAAD,IACblC,SDiCiB,0EAAGkB,CAAH,sBAElB,0PACA,6a,0EE/COkB,GAAY,CACvB,CACEC,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,QACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,WACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,OACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,KACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,WACNN,KAAM,SAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,QACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVM,KAAM,YACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,UACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVM,KAAM,YACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,cACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,YACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,WACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,SACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,YACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,eACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,WACNC,QAAS,CACP,CACEF,aAAc,QACdC,KAAM,GACNN,KAAM,UAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,OACNC,QAAS,CACP,CACEF,aAAc,SACdC,KAAM,GACNN,KAAM,WAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,SACNC,QAAS,CACP,CACEF,aAAc,SACdC,KAAM,GACNN,KAAM,WAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,a,mBCxNGU,GAAiB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACRC,KAAOC,SAASH,GAAhB,UACnBA,EAAiBI,gBADE,aACnB,EAA2BC,aAC3BL,EAAiBK,aAHU,uCAKpBC,IALoB,2CAAH,sDAejBC,GAAc,uCAAG,WAC5BC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAR4B,qBAAAd,EAAA,8DAWfa,EAXe,qCAWML,EAAMO,WAXZ,6BAW5BF,EAX4B,UAalBC,EAbkB,uCAaAN,EAAML,SAASC,aAbf,oBAa6BU,QAb7B,eAa5BA,EAb4B,KAetBE,EAAS,CACbtB,KAAM,iBACNuB,QAAS,QACTH,UACAI,kBAAmBV,EAAMW,UAErBC,EAAQ,IACRb,GAAU,CACd,CAAEb,KAAM,WAAYN,KAAM,WAC1B,CAAEM,KAAM,QAASN,KAAM,WACvB,CAAEM,KAAM,SAAUN,KAAM,WACxB,CAAEM,KAAM,QAASN,KAAM,YAEnB9B,EAAQ,CACZ+D,SAAUX,EACVY,MAAOX,EACPC,OAAQA,EACRW,MAAOV,GAhCmB,UAoCGJ,EAAMe,eAAeR,EAAQI,EAAO9D,GApCvC,eAoCtBmE,EApCsB,yBAsCrBA,GAtCqB,4CAAH,oEAiFdC,GAAwB,SACnCC,EACAC,EACAC,GAEA,IAAMC,EAASF,EAASG,QAAQF,GAChC,IAAKC,EAAQ,OAAO,KACpB,IAAME,EAAcF,IACpB,IAAKE,IAAgBA,EAAYC,QAAwC,IAA9BD,EAAYC,OAAOC,OAAc,OAAO,KACnF,IAAMC,EAAYH,EAAYC,OAAO,GAC/BG,EAAeT,EAAQU,KAAKP,QAAO,SAACQ,GAAD,OAASA,EAAIL,OAAO,KAAOE,KACpE,OAAIC,EAAaF,OAAS,EACjBN,EAASW,UAAUC,SAASJ,EAAa,IAE3C,M,SClHMK,G,qFAAf,WACEC,EACA3C,EACA4C,GAHF,+BAAA3C,EAAA,6DAIE4C,EAJF,+BAIgB,GAJhB,SAMuB9C,GAAkBC,GANzC,cAMQ8C,EANR,OAOQC,EAAS,IAAIC,IAASL,EAAeG,EAAOG,eAAeC,IAAKlD,GAPxE,kBAQS+C,EAAOH,GAAP,MAAAG,EAAM,YAASF,KARxB,4C,+BAWeM,G,qFAAf,WACEC,EACApD,EACA4C,GAHF,+BAAA3C,EAAA,6DAIE4C,EAJF,+BAIgB,GAJhB,SAMuB9C,GAAkBC,GANzC,cAMQ8C,EANR,OAOQrC,EAAQ,IAAIuC,IAASI,EAAcN,EAAOO,cAAcH,IAAKlD,GAPrE,kBAQSS,EAAMmC,GAAN,MAAAnC,EAAK,YAASoC,KARvB,4C,sBAWO,IAAMS,GAAqB,uCAAG,WACnCF,EACAT,EACA3C,GAHmC,SAAAC,EAAA,+EAK5ByC,GAA+BC,EAAe3C,EAAkB,wBAAyB,CAACoD,KAL9D,2CAAH,0DAoBrBG,GAAyB,uCAAG,WACvCZ,EACA3C,GAFuC,SAAAC,EAAA,+EAIhCyC,GAA+BC,EAAe3C,EAAkB,8BAJhC,2CAAH,wDAOzBwD,GAAwB,uCAAG,WACtCb,EACAc,EACAzD,GAHsC,SAAAC,EAAA,+EAK/ByC,GAA+BC,EAAe3C,EAAkB,2BAA4B,CAACyD,KAL9D,2CAAH,0DAQxBC,GAAqB,uCAAG,WACnCN,EACAT,EACA9B,EACAb,GAJmC,SAAAC,EAAA,+EAM5ByC,GAA+BC,EAAe3C,EAAkB,wBAAyB,CAC9FoD,EACAvC,KARiC,2CAAH,4DAYrB8C,GAAgB,uCAAG,WAC9BP,EACAxC,EACAZ,GAH8B,SAAAC,EAAA,+EAKvBkD,GAA8BC,EAAcpD,EAAkB,mBAAoB,CAACY,KAL5D,2CAAH,0DAQhBgD,GAA4B,uCAAG,WAC1ChC,EACAe,EACA3C,GAH0C,mBAAAC,EAAA,sEAKrBF,GAAkBC,GALG,UAKpC8C,EALoC,OAMpCC,EAAS,IAAIC,IAASL,EAAeG,EAAOG,eAAeC,IAAKlD,GAChE6D,EAAWlC,GAAsBC,EAASmB,EAAQ,iBAPd,yCAQpB,MARoB,gCASnCc,EAAShB,MAT0B,2CAAH,0DC9EzC,SAASiB,GACPlD,EACAZ,EACA4C,GAEa,IADbC,EACY,uDADE,GAGRtB,EAAQ,IAAIyB,IAASpC,EAActB,GAAWU,GACpD,OAAOuB,EAAMqB,GAAN,MAAArB,EAAK,YAASsB,IAGhB,IAAMkB,GAAa,uCAAG,WAAOnD,EAAsBZ,GAA7B,SAAAC,EAAA,+EACpB6D,GAA2BlD,EAAcZ,EAAkB,aADvC,2CAAH,wDAIbgE,GAAS,uCAAG,WAAOpD,EAAsBZ,GAA7B,SAAAC,EAAA,+EAChB6D,GAA2BlD,EAAcZ,EAAkB,SAD3C,2CAAH,wDAITiE,GAAW,uCAAG,WAAOrD,EAAsBZ,GAA7B,SAAAC,EAAA,+EAClB6D,GAA2BlD,EAAcZ,EAAkB,WADzC,2CAAH,wDAIXkE,GAAY,uCAAG,WAC1BtD,EACAuD,EACAnE,GAH0B,SAAAC,EAAA,+EAKnB6D,GAA8BlD,EAAcZ,EAAkB,YAAa,CAACmE,KALzD,2CAAH,0DC8BZC,GAAO,uCAAG,WAAOzB,EAAuBS,EAAsBvC,EAAsBwD,GAA1E,uBAAApE,EAAA,sEACAF,GAAkBsE,GADlB,cACfvB,EADe,OAGfC,EAAS,IAAIC,IAASL,EAAeG,EAAOG,eAAeC,IAAKmB,GAChE5D,EAAQ,IAAIuC,IAASI,EAAcN,EAAOO,cAAcH,IAAKmB,GAJ9C,SAMOtB,EAAOuB,gBANd,cAMf1D,EANe,OAM+B2D,aAE9CC,EAAajE,GAAe,SAAUE,EAAO4D,EAAQtB,EAAO3B,QAASR,EAAcC,GARpE,kBAUdkC,EAAO0B,gBAAgBhE,EAAMW,QAASP,EAAQ2D,IAVhC,4CAAH,4DAaPE,GAAQ,uCAAG,WACtBtB,EACAxC,EACA+D,EACA9D,EACAwD,GALsB,mBAAApE,EAAA,sEAODF,GAAkBsE,GAPjB,cAOhBvB,EAPgB,OAShBrC,EAAQ,IAAIuC,IAASI,EAAcN,EAAOO,cAAcH,IAAKmB,GAC7D9C,EAAQ,IAAIyB,IAASpC,EAActB,GAAW+E,GAV9B,kBAYf5D,EAAMmE,cAAcrD,EAAMH,QAASuD,EAAkB9D,IAZtC,2CAAH,8DAgBRgE,GAAe,uCAAG,WAC7BlC,EACAgC,EACA/C,EACAyC,GAJ6B,uBAAApE,EAAA,sEAMA2D,GAA6BhC,EAASe,EAAe0B,GANrD,UAMvBS,EANuB,gDAOD,MAPC,UAQrBrE,EAAyBqE,EAAzBrE,MAAOc,EAAkBuD,EAAlBvD,MAAOV,EAAWiE,EAAXjE,SAChBkE,EAAUC,IAAUC,KAAKpE,IACnBqE,SAViB,yCAUA,MAVA,wBAYXR,GAASjE,EAAOc,EAAOoD,EAAkBI,EAASV,GAZvC,gCAa3BU,EAb2B,mBAY3BI,SAZ2B,KAa3BJ,QAb2B,mDAAH,4DAiBfK,GAAgB,uCAAG,WAC9BhC,EACAxC,EACA+D,EACAN,GAJ8B,eAAApE,EAAA,sEAMCiE,GAAatD,EAAcwC,EAAciB,GAN1C,mCAOtBV,GAAiBP,EAAcxC,EAAcyD,GAPvB,wBAMxBgB,EANwB,KAMmDC,IANnD,iBAUVJ,SAVU,yCAUO,MAVP,wBAYZR,GAAStB,EAAcxC,EAAc+D,EAAkBU,EAAiBhB,GAZ5D,gCAapBgB,EAboB,mBAY5BF,SAZ4B,KAa5BtE,OAb4B,mDAAH,4DAmBhB0E,GAAyB,uCAAG,WAAO5C,EAAuB9B,EAAsBwD,GAApD,iCAAApE,EAAA,sEAClBF,GAAkBsE,GADA,cACjCvB,EADiC,OAGjCC,EAAS,IAAIC,IAASL,EAAeG,EAAOG,eAAeC,IAAKmB,GAChEmB,EAAS,IAAIxC,IAASF,EAAO2C,SAASrE,QAAS0B,EAAO2C,SAASvC,IAAKmB,GAJnC,SAMXtB,EAAOuB,gBANI,cAMjC1D,EANiC,OAMa2D,aAC9ChD,EAAQ,IAAIyB,IAASpC,EAActB,GAAW+E,GAG9CqB,EAAOC,uBAAY,IAVc,UAWZH,EAAOI,WAAWC,aAAa/C,EAAOgD,aAAa1E,QAASsE,GAXhD,eAWjCtC,EAXiC,OAYjC3C,EAAQ,IAAIuC,IAASI,EAAcN,EAAOO,cAAcH,IAAKmB,GAZ5B,UAaV9D,GAAe,OAAQE,EAAO4D,EAAQ1B,EAAepB,EAAMH,QAASP,EAAQ,KAblE,eAajCkF,EAbiC,YAczBpD,EAdyB,KAcVG,EAAOgD,aAAa1E,QAdV,UAcyBiD,EAAO2B,aAdhC,gCAc8CnF,EAd9C,KAcsD6E,EAdtD,KAc4DK,EAA7FlD,EAdiC,0CAgBftB,EAAM0E,UAAU5B,EAAO2B,aAAcR,EAAOpE,SAhB7B,mBAiBzB8E,GAAGrF,GAjBsB,kCAkBxBU,EAAM4E,QAAQX,EAAOpE,QAASP,GAlBN,gCAkBeuF,OAlBf,iCAoBhCZ,EAAOa,qBAAP,MAAAb,EAA+B3C,IApBC,4CAAH,0DAuBzByD,GAAmB,uCAAG,WACjC3D,EACAS,EACAmD,EACAlC,GAJiC,iCAAApE,EAAA,sEAMZF,GAAkBsE,GANN,cAM3BvB,EAN2B,OAO3BC,EAAS,IAAIC,IAASL,EAAeG,EAAOG,eAAeC,IAAKmB,GAPrC,SAQLtB,EAAOuB,gBARF,cAQ3B1D,EAR2B,OAQmB2D,aAC9ChD,EAAQ,IAAIyB,IAASpC,EAActB,GAAW+E,GAC9C5D,EAAQ,IAAIuC,IAASI,EAAcN,EAAOO,cAAcH,IAAKmB,GAVlC,UAaE9C,EAAMiF,UAAU/F,EAAMW,SAbxB,qCAa4CX,EAAMgG,oBAAoBlF,EAAMH,QAAS2B,EAAO3B,SAb5F,uBAa7BsF,EAb6B,KAakCpB,IAblC,kBAgB3BqB,EAA4B3B,IAAUC,KAAKsB,GAAejB,IAAIoB,IACvCE,GAAG,GAjBC,kCAkBlBrF,EAAMsF,SAASpG,EAAMW,QAASuF,GAlBZ,gCAkBwCP,OAlBxC,yBAqBJ7F,GAAe,OAAQE,EAAO4D,EAAQ1B,EAAepB,EAAMH,QAASmF,GArBhE,eAqB3BR,EArB2B,OAsB3BlD,EAAO,CAACO,EAAcmD,EAAeR,GAErChI,EAAIgF,EAAO+D,MAAP,MAAA/D,EAAgBF,GAxBO,UAyBpB9E,EAzBoB,gCAyBjBqI,OAzBiB,iCA0B1BrI,GA1B0B,4CAAH,4DChJnBgJ,GAAM,SAACC,EAAazJ,EAAY0J,GAC3C,IAAMC,EAAO,CAAE3J,QAAO4J,WAAW,IAAIC,MAAOC,UAAYJ,GACxDK,aAAaC,QAAQP,EAAKQ,KAAKC,UAAUP,KAG9BQ,GAAM,SAACV,GAClB,IAAME,EAAOI,aAAaK,QAAQX,GAClC,GAAa,OAATE,EAAe,CACjB,MAA6BM,KAAKI,MAAMV,GAAhC3J,EAAR,EAAQA,MAAO4J,EAAf,EAAeA,UACf,KAAIA,GAAaA,GAAY,IAAIC,MAAOC,WAGtC,OAAO9J,EAFP+J,aAAaO,WAAWb,GAK5B,OAAO,MAKF,SAAec,GAAtB,uC,8CAAO,WACLC,EACAf,EACAC,GAHK,+BAAAhH,EAAA,yDAIL+H,EAJK,+BAI8B,kBAAM,KAEnCC,EAAcP,GAAIV,MACLgB,EAASC,GAPvB,yCAO4CA,GAP5C,uBAQeF,IARf,cAQCxK,EARD,OASLwJ,GAAIC,EAAKzJ,EAAO0J,GATX,kBAUE1J,GAVF,4C,sBCdA,I,MCLK2K,GDKCC,GAAY,uCAAG,WAC1BvH,EACAZ,GAF0B,6BAAAC,EAAA,6DAG1BgH,EAH0B,+BAGZlL,EAERqF,EAAUgH,4BAAkBxH,GALR,kBAMnByH,GAAA,sBACL,4BAAApI,EAAA,kEAEImB,EAFJ,SAGgB4C,GAAU5C,EAASpB,GAHnC,mCAIkBiE,GAAY7C,EAASpB,GAJvC,mCAKoB+D,GAAc3C,EAASpB,GAL3C,0BACQzC,EADR,CAEI6D,QAFJ,KAGIzB,KAHJ,KAII2I,OAJJ,KAKIC,SALJ,wBAOShL,GAPT,4CADK,UAUF6D,EAVE,cAWL6F,IAjBwB,2CAAH,wDEiBnBuB,GAAoC,CACxC,CACE7I,KAAM,4BACNyB,QAAS,6CACTmD,aAAcvI,EAAayM,KAC3BC,YAAazM,EAAYwM,OA6ChBE,GAAgCH,GCzEhCI,GAAwB,CACnC,CACEpJ,OAAQ,GACRM,SAAS,EACTD,gBAAiB,aACjBR,KAAM,eAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,MACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,MACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,MACNN,KAAM,YAGVM,KAAM,WACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,SACdC,KAAM,MACNN,KAAM,UAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,SACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,QACdC,KAAM,OACNN,KAAM,UAGVM,KAAM,WACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,SACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,WACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,iBACNN,KAAM,YAGVM,KAAM,WACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,SACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,gBACNN,KAAM,YAGVM,KAAM,WACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,SACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,WACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,gBACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,iBACNN,KAAM,YAGVM,KAAM,WACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,MACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,MACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,MACNN,KAAM,YAGVM,KAAM,WACNN,KAAM,SAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,OACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,iBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,WACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,mBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,mBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,gBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,UACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,eACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,gBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,mBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,aACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,cACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,mBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,gBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,UACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,aACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,MACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,MACNN,KAAM,YAGVM,KAAM,YACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,MACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,MACNN,KAAM,YAGVM,KAAM,UACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVS,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,OACNN,KAAM,YAGVM,KAAM,YACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,QACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,OACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,iBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,gBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,kBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,iBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,iBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVM,KAAM,iBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,gBACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,iBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,gBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,kBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,iBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,gBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVM,KAAM,iBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,iBACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,kBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,iBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,aACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,cACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,iBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVM,KAAM,2BACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,eACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,iBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,gBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,aACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,cACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,gBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVM,KAAM,2BACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,gBACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,iBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,gBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,aACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,cACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,gBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVM,KAAM,2BACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,gBACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,kBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,iBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,aACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,cACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,eACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVM,KAAM,2BACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,iBACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,iBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,gBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,kBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,iBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVM,KAAM,gBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,YACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,WACNC,QAAS,CACP,CACEF,aAAc,QACdC,KAAM,GACNN,KAAM,UAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,MACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,MACNN,KAAM,YAGVM,KAAM,mBACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVS,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,eACNN,KAAM,WAER,CACEK,aAAc,YACdC,KAAM,gBACNN,KAAM,cAGVM,KAAM,WACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,WACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,iBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,kBACNN,KAAM,YAGVM,KAAM,0BACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,eACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,WACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,eACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,eACNN,KAAM,YAGVM,KAAM,uBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,iBACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,WACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,aACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,WACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,gBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,mBACNC,QAAS,CACP,CACEF,aAAc,YACdC,KAAM,SACNN,KAAM,cAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,wBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,iBACNC,QAAS,CACP,CACEF,aAAc,YACdC,KAAM,SACNN,KAAM,cAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,sBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,eACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,WACNN,KAAM,YAGVM,KAAM,eACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,YACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,WACNN,KAAM,YAGVM,KAAM,sBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,YACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,aACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,6BACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,OACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,MACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,MACNN,KAAM,YAGVM,KAAM,mBACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVS,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,IACNN,KAAM,YAGVM,KAAM,UACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,cACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,eACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,gBACNN,KAAM,WAER,CACEK,aAAc,YACdC,KAAM,eACNN,KAAM,cAGVM,KAAM,WACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,gBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,mBACNN,KAAM,YAGVM,KAAM,yBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,gBACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,gBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,cACNN,KAAM,YAGVM,KAAM,wBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,gBACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,OACNC,QAAS,CACP,CACEF,aAAc,SACdC,KAAM,GACNN,KAAM,WAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,QACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,SACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVM,KAAM,gBACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,OACdC,KAAM,UACNN,KAAM,SAGVM,KAAM,gBACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVM,KAAM,aACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,gBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,WACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,eACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,WACNN,KAAM,YAGVM,KAAM,oBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,iBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,iBACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,cACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,WACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,iBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,WACNN,KAAM,YAGVM,KAAM,qBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,gBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,iBACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,SACNC,QAAS,CACP,CACEF,aAAc,SACdC,KAAM,GACNN,KAAM,WAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,cACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,MACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,MACNN,KAAM,YAGVM,KAAM,WACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVS,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,MACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,MACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,MACNN,KAAM,YAGVM,KAAM,eACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVS,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,SACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,aC3lDGyJ,GAAsB,CACjC,CACEtJ,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,iBACNN,KAAM,WAER,CACE0J,WAAY,CACV,CACErJ,aAAc,SACdC,KAAM,kBACNN,KAAM,UAER,CACEK,aAAc,SACdC,KAAM,gBACNN,KAAM,UAER,CACEK,aAAc,YACdC,KAAM,oBACNN,KAAM,aAER,CACEK,aAAc,YACdC,KAAM,gBACNN,KAAM,aAER,CACEK,aAAc,YACdC,KAAM,eACNN,KAAM,aAER,CACEK,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVK,aAAc,2CACdC,KAAM,aACNN,KAAM,SAER,CACE0J,WAAY,CACV,CACErJ,aAAc,OACdC,KAAM,mBACNN,KAAM,QAER,CACEK,aAAc,OACdC,KAAM,mBACNN,KAAM,QAER,CACEK,aAAc,OACdC,KAAM,mBACNN,KAAM,QAER,CACEK,aAAc,OACdC,KAAM,qBACNN,KAAM,QAER,CACEK,aAAc,OACdC,KAAM,kBACNN,KAAM,QAER,CACEK,aAAc,OACdC,KAAM,eACNN,KAAM,SAGVK,aAAc,8BACdC,KAAM,eACNN,KAAM,UAGVQ,gBAAiB,aACjBR,KAAM,eAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,QACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,WACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,SACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,SACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,aACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,SACdC,KAAM,MACNN,KAAM,UAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,SACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,QACdC,KAAM,OACNN,KAAM,UAGVM,KAAM,UACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,SACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,WACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,iBACNN,KAAM,YAGVM,KAAM,UACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,SACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,gBACNN,KAAM,YAGVM,KAAM,UACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,QACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,OACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,oBACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,gBACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,WACNN,KAAM,YAGVM,KAAM,uBACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,OACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,KACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,WACNN,KAAM,SAER,CACEG,OAAQ,GACRG,KAAM,WACNC,QAAS,CACP,CACEF,aAAc,QACdC,KAAM,GACNN,KAAM,UAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,wCACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,yCACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,OACNC,QAAS,CACP,CACEF,aAAc,SACdC,KAAM,GACNN,KAAM,WAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,2BACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,QACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVM,KAAM,YACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,gBACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,UACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,WACNC,QAAS,CACP,CACEF,aAAc,qBACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,QACNC,QAAS,CACP,CACEF,aAAc,kBACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVM,KAAM,YACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,SACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,uBACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,WACNN,KAAM,YAGVM,KAAM,sBACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,QACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,qBACNN,KAAM,YAGVM,KAAM,iBACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,gBACNN,KAAM,YAGVM,KAAM,aACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,gBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,sCACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,gCACNN,KAAM,YAGVM,KAAM,aACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,WACNC,QAAS,CACP,CACEF,aAAc,QACdC,KAAM,GACNN,KAAM,UAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,mBACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,eACNN,KAAM,WAER,CACEK,aAAc,YACdC,KAAM,gBACNN,KAAM,cAGVM,KAAM,WACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,WACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,iBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,kBACNN,KAAM,YAGVM,KAAM,0BACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,eACNN,KAAM,YAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,WACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,eACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,eACNN,KAAM,YAGVM,KAAM,uBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,iBACNN,KAAM,YAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,6BACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,gBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,wBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,0BACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,6BACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,gBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,aACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,WACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,iCACdC,KAAM,aACNN,KAAM,UAGVM,KAAM,gBACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,mBACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,eACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,gBACNN,KAAM,WAER,CACEK,aAAc,YACdC,KAAM,eACNN,KAAM,cAGVM,KAAM,WACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,gBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,mBACNN,KAAM,YAGVM,KAAM,yBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,gBACNN,KAAM,YAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,gBACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,cACNN,KAAM,YAGVM,KAAM,wBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,gBACNN,KAAM,YAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,iCACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,uBACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,OACNC,QAAS,CACP,CACEF,aAAc,SACdC,KAAM,GACNN,KAAM,WAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,WACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,OACNN,KAAM,WAER,CACEK,aAAc,OACdC,KAAM,cACNN,KAAM,QAER,CACEK,aAAc,UACdC,KAAM,cACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,SACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,cACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,OACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,uBACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,KACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,uBACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,cACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,WACNN,KAAM,YAGVM,KAAM,qCACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,eACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,SACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,mBACNN,KAAM,QAER,CACEK,aAAc,OACdC,KAAM,mBACNN,KAAM,QAER,CACEK,aAAc,OACdC,KAAM,mBACNN,KAAM,QAER,CACEK,aAAc,OACdC,KAAM,qBACNN,KAAM,QAER,CACEK,aAAc,OACdC,KAAM,kBACNN,KAAM,QAER,CACEK,aAAc,OACdC,KAAM,eACNN,KAAM,SAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,SACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,WACNN,KAAM,YAGVM,KAAM,gBACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,OACdC,KAAM,aACNN,KAAM,SAGVM,KAAM,gBACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVM,KAAM,aACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,SACNC,QAAS,CACP,CACEF,aAAc,SACdC,KAAM,GACNN,KAAM,WAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,cACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,YACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,WACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,SACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,YACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,eACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,QACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,YACNN,KAAM,YAGVM,KAAM,eACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,YACdC,KAAM,aACNN,KAAM,aAER,CACEK,aAAc,UACdC,KAAM,aACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,WACNN,KAAM,YAGVM,KAAM,yBACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,WACNN,KAAM,YAGVM,KAAM,6BACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,aC1uCG2J,GAAwB,CACnC,CACExJ,OAAQ,CACN,CACEE,aAAc,oBACdC,KAAM,SACNN,KAAM,aAER,CACEK,aAAc,SACdC,KAAM,OACNN,KAAM,UAER,CACEK,aAAc,SACdC,KAAM,SACNN,KAAM,WAGVQ,gBAAiB,aACjBR,KAAM,eAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,QACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,WACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,YACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,gBACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,WACNN,KAAM,YAGVM,KAAM,uBACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,MACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,MACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,SACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,SACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,aACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,aACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,cACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,WACNN,KAAM,YAGVM,KAAM,UACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,OACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,KACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,WACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,YACNN,KAAM,SAER,CACEG,OAAQ,GACRG,KAAM,cACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,kBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,iBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,QACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVM,KAAM,YACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,UACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVM,KAAM,YACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,cACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,WACNC,QAAS,CACP,CACEF,aAAc,QACdC,KAAM,GACNN,KAAM,UAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,kBACNN,KAAM,YAGVM,KAAM,oBACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,YACdC,KAAM,UACNN,KAAM,aAER,CACEK,aAAc,YACdC,KAAM,aACNN,KAAM,cAGVM,KAAM,UACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,aACNN,KAAM,YAGVQ,gBAAiB,UACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,UACNC,QAAS,CACP,CACEF,aAAc,oBACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,MACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,kBACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,wBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,kBACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,uBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,kBACdC,KAAM,MACNN,KAAM,WAER,CACEK,aAAc,kBACdC,KAAM,MACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,YACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,YACNC,QAAS,CACP,CACEF,aAAc,oBACdC,KAAM,GACNN,KAAM,cAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,aACNN,KAAM,YAGVM,KAAM,oBACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,kBACdC,KAAM,GACNN,KAAM,YAGVM,KAAM,UACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,OACNC,QAAS,CACP,CACEF,aAAc,SACdC,KAAM,GACNN,KAAM,WAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,QACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,oBACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,kBACdC,KAAM,QACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,cACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,kBACdC,KAAM,MACNN,KAAM,WAER,CACEK,aAAc,kBACdC,KAAM,MACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,SACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,YACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,WACNN,KAAM,YAGVM,KAAM,OACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVQ,gBAAiB,UACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,SACNC,QAAS,CACP,CACEF,aAAc,SACdC,KAAM,GACNN,KAAM,WAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVM,KAAM,SACNC,QAAS,CACP,CACEF,aAAc,kBACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,cACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,YACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,WACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,SACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,YACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVM,KAAM,eACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,WACNN,KAAM,YAGVM,KAAM,oBACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,kBACdC,KAAM,GACNN,KAAM,YAGVM,KAAM,6BACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,SACdC,KAAM,OACNN,KAAM,WAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,kBACdC,KAAM,GACNN,KAAM,YAGVM,KAAM,4BACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,SACdC,KAAM,OACNN,KAAM,WAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,kBACdC,KAAM,GACNN,KAAM,YAGVM,KAAM,UACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,YACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,SACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,SACNN,KAAM,WAER,CACEK,aAAc,YACdC,KAAM,aACNN,KAAM,cAGVM,KAAM,WACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,aCxyBG4J,GAAsB,CACjC,CACE1J,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,QACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,WACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,SACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,KACNN,KAAM,YAGVM,KAAM,OACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,SACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVM,KAAM,OACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,SACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,YACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,YACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,aACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,aACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,KACNN,KAAM,YAGVM,KAAM,OACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,WACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,WACNN,KAAM,YAGVM,KAAM,OACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTC,aAAc,UACdC,KAAM,OACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,KACNN,KAAM,WAER,CACEI,SAAS,EACTC,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,WACNN,KAAM,SAER,CACEG,OAAQ,GACRG,KAAM,mBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,oBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,kBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,QACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVM,KAAM,YACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,UACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,YACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,KACNN,KAAM,YAGVM,KAAM,OACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,UACNN,KAAM,YAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,WACNC,QAAS,CACP,CACEF,aAAc,QACdC,KAAM,GACNN,KAAM,UAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,UACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,cACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,WACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,WACNN,KAAM,WAER,CACEK,aAAc,SACdC,KAAM,qBACNN,KAAM,WAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,GACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVM,KAAM,aACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,QACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,KACNN,KAAM,YAGVM,KAAM,OACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,YACNN,KAAM,YAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,OACNC,QAAS,CACP,CACEF,aAAc,SACdC,KAAM,GACNN,KAAM,WAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,SACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,QACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,UACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,QACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,WACNN,KAAM,WAER,CACEK,aAAc,QACdC,KAAM,IACNN,KAAM,SAER,CACEK,aAAc,UACdC,KAAM,IACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,IACNN,KAAM,YAGVM,KAAM,SACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,uBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,uBACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,KACNN,KAAM,YAGVM,KAAM,OACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,aACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,aACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,KACNN,KAAM,WAER,CACEK,aAAc,QACdC,KAAM,OACNN,KAAM,UAGVM,KAAM,OACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,SACNC,QAAS,CACP,CACEF,aAAc,SACdC,KAAM,GACNN,KAAM,WAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,OACNC,QAAS,GACTC,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,SACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,SACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,GACRG,KAAM,cACNC,QAAS,CACP,CACEF,aAAc,UACdC,KAAM,GACNN,KAAM,YAGVQ,gBAAiB,OACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,KACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,WACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVQ,gBAAiB,aACjBR,KAAM,YAER,CACEG,OAAQ,CACN,CACEE,aAAc,UACdC,KAAM,OACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,KACNN,KAAM,WAER,CACEK,aAAc,UACdC,KAAM,QACNN,KAAM,YAGVM,KAAM,eACNC,QAAS,CACP,CACEF,aAAc,OACdC,KAAM,GACNN,KAAM,SAGVQ,gBAAiB,aACjBR,KAAM,a,qBCtoBJ6J,GAAyC,CAC7CC,KAAM,EACNC,IAAK,IACLC,KAAM,IACNC,KAAM,EACNC,IAAK,GACLC,KAAM,IACNC,KAAM,IACNC,IAAK,IACLC,IAAK,GACLC,KAAM,GACNC,IAAK,KACLC,IAAK,GACLC,KAAM,EACN,yBAA0B,KAGtBC,GAA0C,CAC9CC,KAAM,kBACNd,KAAM,aACNE,KAAM,WACNC,KAAM,YACNC,IAAK,WACLC,KAAM,UACNC,KAAM,4BACNC,IAAK,QACLC,IAAK,kBACLC,KAAM,eACNC,IAAK,gBACLC,IAAK,YACLC,KAAM,WACN,yBAA0B,mCAGfG,GAAe,uCAAG,WAAO5B,GAAP,mBAAArI,EAAA,yDACvBkK,EADuB,iBACF7B,EADE,SAEvB8B,ElB9BkBC,KkB4BK,SAKrBC,EAAQN,GAAgB1B,GALH,sBAOnB,IAAIiC,MAAJ,gCAAmCjC,IAPhB,uBAUdD,GAAA,sBACX,gCAAApI,EAAA,6DACQuK,EAAS,IAAIC,KACG,GAFxB,SAGuBC,QAAQC,KAAK,CAChCH,EAAOI,OAAOC,MAAM,CAClBC,IAAK,CAACR,GACNS,cAAe,CAAC,SAElB,IAAIL,SAAQ,SAACM,EAAGC,GAAJ,OAAeC,YAAW,kBAAMD,EAAO,IAAIV,MAAM,sBAAqBY,UARtF,cAGQ9M,EAHR,OAUQwM,EAAQxM,EAAE6I,KAAKoD,GAAOc,IAV9B,kBAWSP,GAXT,2CAaAV,EACAC,GAzByB,iFA4B3BiB,QAAQC,MAAR,MA5B2B,kBA6BpBpC,GAAeZ,IAAW,GA7BN,0DAAH,sDCzBfiD,GAA0B,8BAAC,eRcU,CAChDnK,QAAS,GACTzB,KAAM,GACN2I,OAAQ,GACRC,SAAU,IQlB2B,IAErCsC,MAAO,EACPW,YAAa,EACbC,UAAW,EACXC,YAAa,MAGFC,GAAmB,uCAAG,WACjC/K,EACAW,EACAvB,GAHiC,SAAAC,EAAA,2DAMzBsB,EANyB,cAO1BvF,EAAayM,KAPa,SAS1BzM,EAAa4P,WATa,SAW1B5P,EAAa6P,UAXa,SAa1B7P,EAAa8P,aAba,SAe1B9P,EAAa+P,YAfa,SAiB1B/P,EAAagQ,uBAjBa,0CAQtBC,GAAerL,IARO,gCAUtBsL,GAAatL,EAAcZ,IAVL,gCAYtBmM,GAAavL,EAAcZ,IAZL,gCActBoM,GAAaxL,EAAcZ,IAdL,gCAgBtBqM,GAAczL,EAAcZ,IAhBN,gCAkBtBsM,GAAuB1L,EAAcZ,IAlBf,aAoBvB,IAAIuK,MAAJ,sBAAyBhJ,EAAzB,eApBuB,4CAAH,0DAwB1BgL,GAAmB,uCAAG,WAC1B3L,EACA4L,EACAxM,EACAyM,GAJ0B,2BAAAxM,EAAA,sEAMekI,GAAavH,EAAcZ,GAN1C,uBAMlBL,EANkB,EAMlBA,KAAM2I,EANY,EAMZA,OAAQC,EANI,EAMJA,SANI,SAON2B,GAAgB5B,GAPV,cAOpBuC,EAPoB,iBAQJ3G,GAAatD,EAAc4L,EAAqBxM,GAR5C,eAQpB0M,EARoB,OAUpBC,EAAgBC,SAASC,uBAAYH,EAAsBnE,GAAW,IAVlD,kBAYnB,CACLnH,QAASR,EACTjB,OACA2I,SACAoE,QAASC,EACTpE,WACAhL,MAAOsN,EAAQ8B,EACfF,WAnBwB,4CAAH,4DAuBnBK,GAAoB,uCAAG,WAC3BC,EACAP,EACAxM,EACAgN,GAJ2B,SAAA/M,EAAA,+EAM3ByK,QAAQuC,IACNF,EAAeG,KAAI,SAAC3L,EAAO4L,GAAR,OACjBZ,GAAoBhL,EAAOiL,EAAqBxM,EAAkBgN,EAAQG,SARnD,2CAAH,4DAYpBC,GAAe,SAAC1B,GAAD,OAAqCA,EAAY2B,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,EAAEhQ,QAAO,IAE9FiQ,GAAa,uCAAG,WACpB5M,EACAZ,EACAyN,EACAC,GAJoB,uCAAAzN,EAAA,6DAMdmB,EAAUgH,4BAAkBxH,GAC5BiB,EAAW,IAAImB,IAAS5B,EAAS6H,GAAqBjJ,GAPxC,SAQgB6B,EAAS8L,SARzB,cAQdC,EARc,gBASgB/L,EAASgM,SATzB,cASdC,EATc,iBAUWjM,EAAS0G,WAVpB,eAUdA,EAVc,iBAYiB1G,EAAS2J,cAZ1B,eAYdA,EAZc,OAcduC,EAAoBC,WAAWnB,uBAAYrB,EAAajD,IAd1C,UAgBYuE,GAAqB,CAACc,EAAeE,GAAgB1M,EAASpB,EAAkB,CAC9G,GACA,KAlBkB,eAgBdiO,EAhBc,SAoBiBA,EAAkBf,KAAI,SAACK,GAAD,OAAOA,EAAEjF,UApBhD,mBAoBb4F,EApBa,KAoBCC,EApBD,KAqBd1C,EAAY2B,GAAaa,GArBX,kBAuBb,CACL7M,QAASgH,4BAAkBxH,GAC3BjB,KAAK,GAAD,OAAK8N,EAAL,YAAmBS,EAAnB,YAAmCC,EAAnC,oBACJ7F,OAAO,GAAD,OAAKoF,EAAL,YAAqBQ,EAArB,YAAqCC,EAArC,OACN5F,WACAsC,MAAOY,EAAYsC,EACnBvC,YAAauC,EACbtC,YACAC,YAAauC,IA/BK,4CAAH,4DAmCb/B,GAAY,uCAAG,WAAOtL,EAAsBZ,GAA7B,SAAAC,EAAA,+EACnBuN,GAAc5M,EAAcZ,EAAkB,YAAa,QADxC,2CAAH,wDAGZmM,GAAY,uCAAG,WAAOvL,EAAsBZ,GAA7B,SAAAC,EAAA,+EACnBuN,GAAc5M,EAAcZ,EAAkB,YAAa,UADxC,2CAAH,wDAGZoM,GAAY,uCAAG,WAAOxL,EAAsBZ,GAA7B,yCAAAC,EAAA,6DACbmB,EAAUgH,4BAAkBxH,GAC5BiB,EAAW,IAAImB,IAAS5B,EAAS4H,GAAuBhJ,GAF3C,SAGoB6B,EAASuM,YAH7B,cAGbC,EAHa,qBAIoBA,EAJpB,GAIZT,EAJY,KAIGE,EAJH,cAKsB3F,GAAa/G,EAASpB,GAL5C,uBAKXL,EALW,EAKXA,KAAM2I,EALK,EAKLA,OAAQC,EALH,EAKGA,SALH,UAOkB1G,EAAS2J,cAP3B,eAObA,EAPa,OASbuC,EAAoBC,WAAWnB,uBAAYrB,EAAajD,IAT3C,UAWauE,GAAqB,CAACc,EAAeE,GAAgB1M,EAASpB,EAAkB,CAC9G,GACA,KAbiB,eAWbiO,EAXa,OAebxC,EAAY2B,GAAaa,GAfZ,kBAiBZ,CACL7M,UACAzB,OACA2I,SACAC,WACAsC,MAAOY,EAAYsC,EACnBvC,YAAauC,EACbtC,YACAC,YAAauC,IAzBI,4CAAH,wDA6BZK,GAA4B,uCAAG,WACnClN,EACApB,GAFmC,uBAAAC,EAAA,6DAI7B4B,EAAW,IAAImB,IAAS5B,EAASwH,GAAuB5I,GAJ3B,SAKI6B,EAAS0M,mBALb,cAK7BxB,EAL6B,gBAMWlL,EAAS2M,6BANpB,cAM7BC,EAN6B,gBAOc/D,QAAQuC,IACvDF,EAAeG,KAAI,SAAC3L,GAAD,OAAWM,EAAS6M,sBAAsBnN,OAR5B,cAO7BoN,EAP6B,OAU7BC,EAAeD,EAAyBzB,KAAI,SAAC2B,GAAD,OAAOA,EAAIJ,KAV1B,kBAY5B3B,GAAqBC,EAAgB3L,EAASpB,EAAkB4O,IAZpC,4CAAH,wDAe5BvC,GAAa,uCAAG,WAAOzL,EAAsBZ,GAA7B,iCAAAC,EAAA,6DACdmB,EAAUgH,4BAAkBxH,GAC5BiB,EAAW,IAAImB,IAAS5B,EAASwH,GAAuB5I,GAF1C,SAIqBmI,GAAa/G,EAASpB,GAJ3C,uBAIZL,EAJY,EAIZA,KAAM2I,EAJM,EAINA,OAAQC,EAJF,EAIEA,SAJF,UAMiB1G,EAAS2J,cAN1B,eAMdA,EANc,OAOduC,EAAoBC,WAAWnB,uBAAYrB,EAAajD,IAP1C,UASY+F,GAA6BlN,EAASpB,GATlD,eASdiO,EATc,OAUdxC,EAAY2B,GAAaa,GAVX,kBAYb,CACL7M,UACAmH,WACA5I,OACA2I,SACAkD,YAAauC,EACbtC,YACAZ,MAAOY,EAAYsC,EACnBrC,YAAauC,IApBK,4CAAH,wDAwBb3B,GAAsB,uCAAG,WAC7B1L,EACAZ,GAF6B,mCAAAC,EAAA,6DAIvBmB,EAAUgH,4BAAkBxH,GAC5BiB,EAAW,IAAImB,IAAS5B,EAAS0H,GAAqB9I,GAL/B,SAOD6B,EAASiN,QAPR,cAOvBA,EAPuB,gBAQY3G,GAAa/G,EAASpB,GARlC,uBAQrBL,EARqB,EAQrBA,KAAM2I,EARe,EAQfA,OAAQC,EARO,EAQPA,SARO,UAUQ1G,EAAS2J,cAVjB,eAUvBA,EAVuB,OAWvBuC,EAAoBC,WAAWnB,uBAAYrB,EAAajD,IAXjC,UAaG+F,GAA6BQ,EAAO9O,GAbvC,eAavBiO,EAbuB,OAcvBxC,EAAY2B,GAAaa,GAdF,kBAgBtB,CACL7M,UACAmH,WACA5I,OACA2I,SACAkD,YAAauC,EACbtC,YACAZ,MAAOY,EAAYsC,EACnBrC,YAAauC,IAxBc,4CAAH,wDA4BtBhC,GAAc,uCAAG,WAAOrL,GAAP,eAAAX,EAAA,sEACCiK,GAAgB,QADjB,mCACmCA,GAAgB,OADnD,yCACfW,EADe,KAC8D,EAD9D,kBAEd,CACLzJ,QAASgH,4BAAkBxH,GAC3BjB,KAAK,gCACL2I,OAAO,gBACPC,SAAU,GACVsC,QACAW,YAAa,IACbC,UAAW,IAASZ,EACpBa,YAAa,KAVM,2CAAH,sD,UCzNPqD,GAAcC,aAAH,6eCFXC,GAAiB,CAC5B,CACEpG,UAAU,EACVrJ,OAAQ,GACRG,KAAM,OACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,WAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,WACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,UAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,eACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,SAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,oBACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,cACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,SAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,QACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,iBACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,UACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,SAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,SACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,WAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,WACNN,KAAM,YAGVM,KAAM,oBACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTE,KAAM,QACNN,KAAM,WAER,CACEI,SAAS,EACTE,KAAM,cACNN,KAAM,YAGVM,KAAM,YACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTE,KAAM,SACNN,KAAM,SAGVM,KAAM,kBACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTE,KAAM,SACNN,KAAM,SAGVM,KAAM,iBACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTE,KAAM,gBACNN,KAAM,YAGVM,KAAM,qBACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTE,KAAM,gBACNN,KAAM,WAER,CACEI,SAAS,EACTE,KAAM,WACNN,KAAM,YAGVM,KAAM,uBACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTE,KAAM,OACNN,KAAM,WAER,CACEI,SAAS,EACTE,KAAM,KACNN,KAAM,WAER,CACEI,SAAS,EACTE,KAAM,QACNN,KAAM,YAGVM,KAAM,WACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTE,KAAM,QACNN,KAAM,WAER,CACEI,SAAS,EACTE,KAAM,UACNN,KAAM,WAER,CACEI,SAAS,EACTE,KAAM,QACNN,KAAM,YAGVM,KAAM,WACNN,KAAM,SAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,kBACNN,KAAM,YAGVM,KAAM,oBACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,SACNN,KAAM,SAGVM,KAAM,kBACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,SACNN,KAAM,SAGVM,KAAM,iBACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,QACNN,KAAM,WAER,CACEM,KAAM,cACNN,KAAM,WAGVM,KAAM,SACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,QACNN,KAAM,YAGVM,KAAM,aACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,OACNN,KAAM,UAER,CACEM,KAAM,SACNN,KAAM,UAER,CACEM,KAAM,WACNN,KAAM,UAGVM,KAAM,aACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,cACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,MACNN,KAAM,YAGVM,KAAM,YACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,KACNN,KAAM,WAER,CACEM,KAAM,QACNN,KAAM,YAGVM,KAAM,WACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,SAGVS,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,QACNN,KAAM,WAER,CACEM,KAAM,UACNN,KAAM,YAGVM,KAAM,YACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,OACNN,KAAM,WAER,CACEM,KAAM,KACNN,KAAM,WAER,CACEM,KAAM,QACNN,KAAM,YAGVM,KAAM,eACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,SAGVS,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,UACNN,KAAM,WAER,CACEM,KAAM,QACNN,KAAM,YAGVM,KAAM,UACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,SAGVS,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,UACNN,KAAM,WAER,CACEM,KAAM,aACNN,KAAM,YAGVM,KAAM,oBACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,SAGVS,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,UACNN,KAAM,WAER,CACEM,KAAM,kBACNN,KAAM,YAGVM,KAAM,oBACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,SAGVS,SAAS,EACTD,gBAAiB,aACjBR,KAAM,aC5gBG6P,GAAwB,CACnC,CACErG,UAAU,EACVrJ,OAAQ,GACRG,KAAM,2BACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,yBACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,eACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,YACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,wBACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,oBACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,QACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,UACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,SAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,QACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,wBACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,YACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,SACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,qBACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,YAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,WACNN,KAAM,YAGVM,KAAM,oBACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTE,KAAM,QACNN,KAAM,WAER,CACEI,SAAS,EACTE,KAAM,eACNN,KAAM,WAER,CACEI,SAAS,EACTE,KAAM,MACNN,KAAM,WAER,CACEI,SAAS,EACTE,KAAM,4BACNN,KAAM,UAER,CACEI,SAAS,EACTE,KAAM,eACNN,KAAM,YAGVM,KAAM,YACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTE,KAAM,gBACNN,KAAM,YAGVM,KAAM,qBACNN,KAAM,SAER,CACEE,WAAW,EACXC,OAAQ,CACN,CACEC,SAAS,EACTE,KAAM,gBACNN,KAAM,WAER,CACEI,SAAS,EACTE,KAAM,WACNN,KAAM,YAGVM,KAAM,uBACNN,KAAM,SAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,SACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,aACNN,KAAM,YAGVM,KAAM,eACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,gBACNN,KAAM,YAGVM,KAAM,kBACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,sBACNN,KAAM,YAGVM,KAAM,wBACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,aACNN,KAAM,YAGVM,KAAM,eACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,4BACNN,KAAM,WAER,CACEM,KAAM,yBACNN,KAAM,WAER,CACEM,KAAM,yBACNN,KAAM,YAGVM,KAAM,4BACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,SACNN,KAAM,WAER,CACEM,KAAM,UACNN,KAAM,WAER,CACEM,KAAM,WACNN,KAAM,YAGVM,KAAM,aACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,CACN,CACEG,KAAM,SACNN,KAAM,YAGVM,KAAM,aACNC,QAAS,GACTE,SAAS,EACTD,gBAAiB,aACjBR,KAAM,YAER,CACEwJ,UAAU,EACVrJ,OAAQ,GACRG,KAAM,iBACNC,QAAS,CACP,CACED,KAAM,GACNN,KAAM,SAGVS,SAAS,EACTD,gBAAiB,OACjBR,KAAM,a,SCjYG8P,GAAqB,WAM9B,OAAOC,UAAOC,UAAUC,eAAeC,qBAAqB,YAAa5S,IAOhE6S,GAAkB,uCAAG,WAAO3N,EAAoB4N,GAA3B,6BAAAxP,EAAA,6DAA8CyP,EAA9C,+BAA2DtT,EACrF2F,EAASF,EAASG,QAAQyN,KADA,kBAEzB5N,EAAS8N,YAAY5N,EAAQ2N,EAAY,WAFhB,2CAAH,wDCPlBE,GAAoB,uCAAG,WAClCC,EACAC,EACAC,EACAxH,EACAvI,GALkC,iBAAAC,EAAA,sEAON+P,GAAiBF,EAAeC,EAAOxH,EAAUvI,GAP3C,cAO5BiQ,EAP4B,OAQ5BC,EAAY,SAACC,GAAD,OAChBnC,WAAWnB,uBAAYsD,EAASC,aAAc7H,IAAa8H,GAAYzD,SAASuD,EAASG,MAAO,IAAKL,IATrE,kBAU3BJ,EAAgBxC,QAAO,SAACkD,EAAKJ,GAAN,OAAmBI,EAAML,EAAUC,KAAW,IAV1C,2CAAH,8DAapBE,GAAc,SAAC5M,EAAmBwM,GAC7C,GAA6B,IAAzBA,EAAc9N,OAAc,OAAO,EAEvC,IAAIgL,EAAQ8C,EAAcO,WAAU,gBAAcC,EAAd,EAAGhN,UAAH,OAAuBA,EAAYgN,KAIvE,OAHItD,EAAQ,IACVA,EAAQ8C,EAAc9N,QAEjB8N,EAAcS,KAAKC,IAAIxD,EAAQ,EAAG,IAAIyD,QAGlCZ,GAAgB,uCAAG,WAC9BF,EACAC,EACAxH,EACAvI,GAJ8B,SAAAC,EAAA,+EAM9BoI,GAAA,sBACE,oCAAApI,EAAA,6DACQ4Q,EAAS,IAAI7N,IAAS8M,EAAeZ,GAAuBlP,GADpE,SAE0BwP,GAAmBqB,EAAQ,aAFrD,OAaE,IAXMC,EAFR,OAGQC,EAAgCD,EACnC/O,QAAO,SAACQ,GAAD,OAASA,EAAIM,QACpBqK,KAAI,SAAC3K,GAAD,MAAU,CACbkB,UAAWmJ,SAASrK,EAAIM,KAAMmO,aAAaC,WAAY,IACvDL,OAAQ5C,WAAWnB,uBAAYtK,EAAIM,KAAMqO,0BAA2B3I,IACpEwH,MAAOnD,SAASrK,EAAIM,KAAMkN,MAAO,QAE/BE,EAA8B,CAAC,CAAExM,UAAWpH,EAAkBuU,OAAQtU,EAAgByT,MAAO,IAAKoB,OACtGJ,GAEOK,EAAI,EAAGA,EAAInB,EAAc9N,OAAQiP,IACxCnB,EAAcmB,GAAGR,QAAUX,EAAcmB,EAAI,GAAGR,OAdpD,yBAgBSX,GAhBT,2CADF,UAmBK7H,4BAAkB0H,GAnBvB,kBxB3BuBlU,OwBgDrB,SAACyV,GAAD,OAAYA,EAAOlP,OAAS,GAAKkP,EAAOA,EAAOlP,OAAS,GAAG4N,OAASA,MA3BxC,2CAAH,4DCvBhBuB,GAAyB,8BAAC,edkBW,CAChDlQ,QAAS,GACTzB,KAAM,GACN2I,OAAQ,GACRC,SAAU,IctB0B,IAEpCgJ,gBAAgB,WAAD,4BAAE,sBAAAtR,EAAA,+EAAY,GAAZ,2CAAF,kDAAC,MAGLuR,GAAkB,uCAAG,WAChC5Q,EACAW,EACAvB,GAHgC,SAAAC,EAAA,2DAKxBsB,EALwB,cAMzBtF,EAAYwM,KANa,SAQzBxM,EAAYkN,KARa,0CAOrBsI,GAAa7Q,EAAcZ,IAPN,gCASrB0R,GAAa9Q,EAAcZ,IATN,aAWtB,IAAIuK,MAAJ,sBAAyBhJ,EAAzB,eAXsB,2CAAH,0DAezBkQ,GAAY,uCAAG,WAAO7Q,EAAsBZ,GAA7B,iBAAAC,EAAA,sEACKkI,GAAavH,EAAcZ,GADhC,cACb2R,EADa,OAEbJ,EAFa,+BAAAtR,EAAA,MAEK,WAAO4P,GAAP,SAAA5P,EAAA,+EACtB4P,EAAgBxC,QACd,SAACkD,EAAKJ,GAAN,OAAmBI,EAAMvC,WAAWnB,uBAAYsD,EAASC,aAAcuB,EAAUpJ,aACjF,IAHoB,2CAFL,mGAQdoJ,GARc,IASjBJ,qBATiB,2CAAH,wDAaZG,GAAY,uCAAG,WAAO9Q,EAAsBZ,GAA7B,2BAAAC,EAAA,6DACb4B,EAAW,IAAImB,IAASpC,EAAcqO,GAAgBjP,GADzC,SAEKmI,GAAavH,EAAcZ,GAFhC,cAEb2R,EAFa,gBAGiB9P,EAAS+P,iBAH1B,cAGb9B,EAHa,OAIbe,EAAS,IAAI7N,IAAS8M,EAAeZ,GAAuBlP,GAJ/C,UAMO6B,EAAS2J,cANhB,eAMbA,EANa,YAOLoB,SAPK,UAOUiE,EAAOd,QAPjB,2BAObA,GAPa,aAO0B,IAEvCwB,EATa,+BAAAtR,EAAA,MASK,WAAO4P,GAAP,eAAA5P,EAAA,sEACU2P,GAC9BC,EACAC,EACAC,EACA4B,EAAUpJ,SACVvI,GANoB,cAChB6R,EADgB,yBAQfA,EAAoBrG,GARL,2CATL,mGAqBdmG,GArBc,IAsBjBJ,qBAtBiB,4CAAH,wDCXLO,GAbmB,CAC9B,CACEvQ,MAAO,WACPH,QAAS,6CACT2Q,SAAS,GAEX,CACExQ,MAAO,QACPH,QAAS,6CACT2Q,SAAS,I,mCCrBPzU,G,qIAAiB+R,UAAU2C,cAE3BC,GAAcpV,wBASjB,CACDqV,aAAa,WAAD,4BAAE,sBAAAjS,EAAA,gFAAY,GAAZ,2CAAF,kDAAC,GACbkS,OAAO,EACPC,OAAQ,KACRhS,SAAU,KACViS,gBAAiBlD,OAiBb6C,GAAyB,SAAC,GAAkB,IAAhB9U,EAAe,EAAfA,SAChC,EAA8BC,qBAA9B,mBAAOiE,EAAP,KAAgBkR,EAAhB,KACA,EAA4BnV,mBAAwB,MAApD,mBAAOiV,EAAP,KAAeG,EAAf,KACA,EAA8BpV,qBAA9B,mBAAOqV,EAAP,KAAgBC,EAAhB,KACA,EAAgCtV,mBAA0B,MAA1D,mBAAOiD,EAAP,KAAiBsS,EAAjB,KACA,EAA0BvV,mBAA6BgS,MAAhDkD,EAAP,oBACA,EAA4BlV,qBAA5B,mBAAOkH,EAAP,KAAesO,EAAf,KACA,EAA0BxV,oBAAS,GAAnC,mBAAOgV,EAAP,KAAcS,EAAd,KAEMC,EAAeC,uBAAY,SAACC,GAChCR,EAAUQ,GACNA,GAAaA,EAAUpT,MAAM2H,aAAaC,QAAQ,iBAAkBwL,EAAUpT,MAClF,IACMqT,EAAiB,IAAI1V,GAASyV,EAAU3S,SAD7B,CAACT,KAAK,QAAQoB,QAAQ,KAEjCkS,EAAYD,EAAeE,YACjCP,EAAUM,GACVP,EAAYM,KACX,IAEHG,qBAAU,WACR,IA7BiBC,EA6BXC,GA7BWD,EA6Bc,CAC7BhS,QAASkR,EACTF,OAAQ,SAACvD,GAAe,IAAD,GACrB,OAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAGzO,gBAAP,aAAI,EAAakT,iBACfT,EAAahE,IAEb6D,EAAY,MACZH,EAAU,SAjCXgB,aAAQ,2BAFC,CAAEC,YAAY,QAAQC,UAAW,KAEnC,IAEZL,oBAmCAX,EAAWY,KACV,CAACR,IAEJM,qBAAU,WACR,sBAAC,8BAAAlT,EAAA,2DACOyT,EAA2BpM,aAAaK,QAAQ,qBACtB6K,EAFjC,gCAGgCA,EAAQmB,aAAaD,GAHrD,OAGSE,EAHT,OAIGhB,EAASgB,GAJZ,0CAAD,KAOC,CAACpB,IAEJ,IAAMN,EAAY,uCAAG,4BAAAjS,EAAA,yDACduS,EADc,0CACE,GADF,uBAEUA,EAAQmB,eAFlB,2DAGS,GAHT,uBAIGnB,EAAQqB,cAJX,cAIbC,EAJa,OAKnBlB,EAASkB,GACLA,GAASjB,EAAaL,EAAQuB,WAAW3B,QAN1B,kBAOZ0B,GAPY,4CAAH,qDAUlB,OACE,cAAC7B,GAAY3U,SAAb,CACEC,MAAO,CACL6D,UACAgR,SACAI,UACApS,WACAiE,SACA6N,eACAC,QACAE,mBATJ,SAYGnV,KAOQ+U,MChGF+B,GAAgBnX,wBAY1B,CACDoX,QAAS,GACTC,mBAAoB,CAAEnR,OAAQ,KAAMoR,iBAAkB5I,KAA2B6I,gBAAiB9C,MAClG+C,aAAc,aACdC,iBAAkB,aAClBC,mBAAoB,aACpBC,iBAAiB,EACjBC,oBAAqB,aACrBC,mBAAmB,WAAD,4BAAE,sBAAAzU,EAAA,oFAAY0U,GAAZ,2CAAF,kDAAC,GACnBC,eAAgB,GAChBC,cAAe,iBAAM,IACrBC,qBAAsB,OAGXC,GAAkC,SAAC,GAAkB,IAAhB7X,EAAe,EAAfA,SAChD,EAAoC8X,qBAAW/C,IAAvC5N,EAAR,EAAQA,OAAQgO,EAAhB,EAAgBA,gBACVrS,EAAmBqE,GAAUgO,EAGnC,EAAmE4C,YAAalG,GAAa,CAC3FmG,a5BhCyB,M4B+B3B,mBAAOC,EAAP,YAA8BC,EAA9B,EAAqBC,QAA8BC,EAAnD,EAA6CpO,KAI7C,EAA8B/J,mBAAmB,IAAjD,mBAAO8W,EAAP,KAAgBsB,EAAhB,KACA,EAAoDpY,mBAAqB,CACvE4F,OAAQ,KACRoR,iBAAkB5I,KAClB6I,gBAAiB9C,OAHnB,mBAAO4C,EAAP,KAA2BsB,EAA3B,KAMA,EAAwDrY,mBAA8B,MAAtF,mBAAO2X,EAAP,KAA6BW,EAA7B,KACA,EAA4CtY,mBAAsB,IAAlE,mBAAOyX,EAAP,KAAuBc,EAAvB,KACA,EAA8BvY,mBAA8B,IAAIwY,IAAIhN,GAAcuE,KAAI,SAAAnK,GAAM,MAAI,CAACqF,4BAAkBrF,EAAO3B,SAAU2B,EAAOpD,WAApIiW,EAAP,oBACA,EAA8BzY,mBAA8B,IAAIwY,IAAIhN,GAAcuE,KAAI,SAAAnK,GAAM,MAAI,CAACA,EAAOpD,KAAMyI,4BAAkBrF,EAAO3B,eAAhIyU,EAAP,oBAGA,EAA8C1Y,oBAAS,GAAvD,mBAAOqX,EAAP,KAAwBsB,EAAxB,KAIMpB,EAAkB,uCAAG,WAAOqB,EAA6BC,GAApC,SAAA/V,EAAA,gFACxBuU,EAAkByB,EAAcC,GAAeH,EAAeC,IADtC,2CAAH,wDAGlBE,EAAa,uCAAG,WAAOH,EAA6BC,GAApC,iBAAA/V,EAAA,2DAChBiU,EAAmBnR,QAAUgT,GAAiB1R,GAD9B,uBAEZ1B,EAAgBuR,EAAmBnR,OAAOoT,GAC1C/S,EAAe2S,EAAcI,GAHjB,kBAIX/R,GAAQzB,EAAeS,EAAc4S,EAAc3R,IAJxC,qCAMbsQ,GANa,2CAAH,wDAQbsB,EAAW,uCAAG,WAAOF,EAA6BC,GAApC,eAAA/V,EAAA,0DACdiU,EAAmBnR,SAAUsB,GAAW2R,EAAa9Q,SADvC,uBAEVvC,EAAgBuR,EAAmBnR,OAAOoT,GAChD9K,QAAQ9I,IAAIwT,GAHI,kBAKRA,EACJzP,GAAoB3D,EAAeoT,EAAcI,GAAIH,EAAc3R,GACnEkB,GAA0B5C,EAAeqT,EAAc3R,IAP3C,qCAUXsQ,GAVW,2CAAH,wDAaXN,EAAY,uCAAG,WAAOtR,GAAP,qBAAA9C,EAAA,yDACb0C,EAAgByF,4BAAkBrF,EAAOoT,IACzCC,EAAezN,GAAc0N,MAAK,SAAAvT,GAAM,OAAIsF,4BAAkBtF,EAAO1B,WAAauB,KAFrE,sBAIX,IAAI4H,MAAJ,gDAAmD5H,IAJxC,uBAMegJ,GAAoB5I,EAAOwB,aAAc6R,EAAa7R,aAAcvE,GANnF,cAMbsW,EANa,gBAOc9E,GAAmBzO,EAAO2F,YAAa0N,EAAa1N,YAAa1I,GAP/E,OAObuW,EAPa,OAQnBd,EAAwBW,GACxBZ,EAAsB,CACpBzS,SACAoR,iBAAkBmC,EAClBlC,gBAAiBmC,IAZA,4CAAH,sDAeZjC,EAAgB,uCAAG,WAAO6B,GAAP,eAAAlW,EAAA,2DACjB8C,EAASkR,EAAQoC,MAAK,SAACG,GAAD,OAAOpO,4BAAkBoO,EAAEL,MAAQ/N,4BAAkB+N,OAD1D,gCAEL9B,EAAatR,GAFR,2CAAH,sDAIhBwR,EAAkB,uCAAG,WAAO5U,GAAP,eAAAM,EAAA,2DACnBwW,EAAWZ,EAAoBnO,IAAI/H,IADhB,gCAEL2U,EAAiBmC,GAFZ,2CAAH,sDA8DxB,OAxDAtD,qBAAU,WACR,IAAMrI,EAAMnC,GAAcuE,KAAI,SAAAnK,GAAM,OAAIA,EAAO3B,QAAQsV,iBACvDvB,EAAW,CAAEwB,UAAW,CAAE7L,WACzB,IAEHqI,qBAAU,WAER,GAAImC,GAAcA,EAAWrB,QAAS,CACpC,IAAM2C,EAAiB,YAAItB,EAAWrB,SAAS/G,KAAI,SAACnK,GAAD,mBAAC,eAAiBA,GAAlB,IAA0B8T,OAAQ9T,EAAO+T,YAAYD,YAElG/L,EAAMnC,GAAcuE,KAAI,SAAAnK,GAAM,OAAIA,EAAO3B,QAAQsV,iBACvDE,EAAeG,MAAK,SAAC9W,EAAG+W,GAAJ,OAAUlM,EAAImM,QAAQhX,EAAEkW,IAAMrL,EAAImM,QAAQD,EAAEb,OAChEZ,EAAWqB,GAEV,sBAAC,wCAAA3W,EAAA,sEAGQiX,EAAwB,IAAIvB,IAChChN,GAAcuE,KAAI,gBAAG9L,EAAH,EAAGA,QAASmD,EAAZ,EAAYA,aAAcmE,EAA1B,EAA0BA,YAA1B,MAA4C,CAACN,4BAAkBhH,GAAU,CAAEmD,eAAcmE,oBAEvGyO,EAAeP,EAAe1J,KAClC,gBAAGiJ,EAAH,EAAGA,GAAI5R,EAAP,EAAOA,aAAcmE,EAArB,EAAqBA,YAArB,mBAAC,eAA4CwO,EAAsBxP,IAAIU,4BAAkB+N,KAAzF,IAAgG3J,oBAAqBjI,EAAc6S,mBAAoB1O,OAGnJ2O,EAAkB,IAAIC,IAAIV,EAAeW,SAAQ,kBAAmC,CAAnC,EAAGhT,aAAH,EAAiBmE,aAA8CwE,IAAI9E,yBAV5H,SAY6BsC,QAAQuC,IAAIkK,EAAajK,KAAI,gBAAGxE,EAAH,EAAGA,YAAa0O,EAAhB,EAAgBA,mBAAhB,OAAyC5F,GAAmB4F,EAAoB1O,EAAa1I,OAZvJ,cAYQwX,EAZR,gBAa8B9M,QAAQuC,IAAIkK,EAAajK,KAAI,gBAAG3I,EAAH,EAAGA,aAAciI,EAAjB,EAAiBA,oBAAjB,OAA2Cb,GAAoBa,EAAqBjI,EAAcvE,OAb7J,cAaQyX,EAbR,iBAgBU/M,QAAQgN,WACZ5F,GACG/P,QAAO,gBAAGgQ,EAAH,EAAGA,QAAS3Q,EAAZ,EAAYA,QAAZ,OAA0B2Q,IAAYsF,EAAgBM,IAAIvP,4BAAkBhH,OACnF8L,KAAI,gBAAG9L,EAAH,EAAGA,QAAH,OAAiB+G,GAAa/G,EAASpB,OAnBpD,QAeQ4X,EAfR,OAsBK7V,QAAO,kBAA2B,cAA3B,EAAG8U,UACV3J,KAAI,SAAC2K,GAAD,OAAaA,EAA6Cta,SAI3Dua,EAAoBF,EAAsBzG,OAAOsG,GAAetG,OAAOqG,GAC7E9B,EAAkBoC,GA5BpB,kDA8BEzM,QAAQC,MAAR,MA9BF,yDAAD,MAkCF,CAACgK,IAEJnC,qBAAU,WACJc,EAAQ9R,OAAS,GACnBkS,EAAaJ,EAAQoC,MAAK,SAAAtT,GAAM,aAAIA,EAAOoT,MAAP,UAAcjC,EAAmBnR,cAAjC,aAAc,EAA2BoT,QAAOlC,EAAQ,MAE7F,CAACA,IAEAmB,EAAsB,cAACtW,EAAD,yBAGxB,cAACkV,GAAc1W,SAAf,CACEC,MAAO,CACL0W,UACAC,qBACAG,eACAC,mBACAC,qBACAC,kBACAC,oBAtHsB,kBAAMqB,GAAoBtB,IAuHhDE,qBACAE,iBACAC,cAxEgB,SAACsB,GAAD,OAAgBP,EAAoBlO,IAAIU,4BAAkB+N,KAAQ,IAyElFrB,wBAZJ,SAeG5X,K,SCrLM6a,GAA8B,SAAC,GAAD,IAAGhG,EAAH,EAAGA,QAASiG,EAAZ,EAAYA,OAAQC,EAApB,EAAoBA,QAApB,OACzC,cAAC,KAAD,CAAQta,UAAU,SAASua,SAAUnG,EAASoG,SAAUH,EAAxD,SACE,eAACI,GAAD,CAAiBza,UAAU,OAA3B,UACE,cAAC0a,GAAD,CAAiB1a,UAAYoU,EAAwB,gBAAd,YAAvC,SAAuEkG,EAAQ,KAC/E,sBACEta,UAAS,mFACNoU,EAAwC,WAA9B,+BAGf,cAACuG,GAAD,CAAiB3a,UAAYoU,EAA4B,YAAlB,gBAAvC,SAAuEkG,EAAQ,WAK/EG,GAAkBha,IAAOa,KAAV,8EAAGb,CAAH,QACf,+PAGAia,GAAkBja,IAAOa,KAAV,8EAAGb,CAAH,QACf,6GAGAka,GAAkBla,IAAOa,KAAV,8EAAGb,CAAH,QACf,yFChCOma,GAAkBvJ,aAAH,iaCUfwJ,GAAe3b,wBASzB,CACD4b,OAAQ,GACR1C,cAAe,KACf2C,YAAa,aACbC,gBAAiB,aACjBC,YAAa,KACbC,kBAAmB,KACnBC,yBAA0B,KAC1BC,0BAA2B,OAGhBC,GAAiC,SAAC,GAAkB,IAAhB9b,EAAe,EAAfA,SAC/C,EAAmC8X,qBAAW/C,IAAtC7Q,EAAR,EAAQA,QAASiD,EAAjB,EAAiBA,OAAQ8N,EAAzB,EAAyBA,MACa8G,EAAqBjE,qBAAWhB,IAA9DE,mBAAsBnR,OAC9B,EAAgEkS,YAAasD,GAAiB,CAC5FrD,a/BnByB,M+BkB3B,mBAAOgE,EAAP,YAA6BC,EAA7B,EAAoB9D,QAA6B+D,EAAjD,EAA2ClS,KAI3C,EAA4B/J,mBAAkB,IAA9C,mBAAOsb,EAAP,KAAeY,EAAf,KACA,EAA0Clc,mBAAuB,MAAjE,mBAAO4Y,EAAP,KAAsBuD,EAAtB,KACA,EAAsCnc,mBAAsB,MAA5D,mBAAOyb,EAAP,KAAoBW,EAApB,KAEMb,EAAc,SAACjY,GAAD,OAAkB6Y,EAAiB7Y,IAEjDoY,EAAoBzX,GAAWiD,GAAU0R,EAC3C,SAACnV,EAAsBC,GAAvB,OAA6C6D,GAASqR,EAAcI,GAAIvV,EAAcQ,EAASP,EAAQwD,IACvG,KAEEyU,EAA2B1X,GAAWiD,GAAU4U,EAClD,SAACrX,GAAD,OAAiCiD,GAAgBoU,EAAe9C,GAAI/U,EAASQ,EAASyC,IACtF,KAEE0U,EAA4B3X,GAAWiD,GAAU0R,EACnD,SAACnV,GAAD,OAA0BwE,GAAiB2Q,EAAcI,GAAIvV,EAAcQ,EAASiD,IACpF,KA+BJ,OA7BA8O,qBAAU,WACJ/R,GAAS8X,EAAU,CAAEvC,UAAW,CAAER,GAAI/U,EAAQsV,mBACjD,CAACtV,EAAS8X,IAEb/F,qBAAU,WACR,GAAIiG,GAAaA,EAAUI,KAAM,CAC/B,IAAMC,EAAaL,EAAUI,KAAKf,OAClCY,EAAUI,GACNA,EAAWtX,OAAS,IAAM4T,EAC5B2C,EAAYe,EAAW,IACdA,EAAWtX,OAAS,EAC7BmX,EAAiBG,EAAWpD,MAAK,SAAC5V,GAAD,OAAWA,EAAM0V,MAAN,OAAaJ,QAAb,IAAaA,OAAb,EAAaA,EAAeI,QAAOsD,EAAW,IAE1FH,EAAiB,WAGnBD,EAAU,IACVC,EAAiB,QAElB,CAACF,EAAWrD,IAEf5C,qBAAU,WACR,GAAI4C,GAAiBkD,EAAgB,CACnC,IAAQ1U,EAAiB0U,EAAjB1U,aACFmV,EAAM,UAAM3D,EAAcI,GAApB,YAA0B8C,EAAe9C,GAAzC,YAA+C5R,GAC3DgV,EAAexD,EAAc4D,MAAMtD,MAAK,SAACuD,GAAD,OAAUA,EAAKzD,KAAOuD,MAAW,SAE1E,CAAC3D,EAAekD,IAEfE,IAAkB/X,GAAW+Q,EAAe,cAACrT,EAAD,yBAG9C,cAAC0Z,GAAalb,SAAd,CACEC,MAAO,CACLkb,SACA1C,gBACA2C,cACAC,gBAlDkB,SAACxC,GAAD,OAAgBmD,EAAiBb,EAAOpC,MAAK,SAAA5V,GAAK,OAAIA,EAAM0V,KAAOA,MAAOJ,IAmD5F6C,cACAC,oBACAC,2BACAC,6BATJ,SAYG7b,KC/FM2c,GAAgBhd,wBAG1B,CACDid,aAAc9U,IAAUC,KAAK,KAC7B8U,oBAAqB,eAGVC,GAAkC,SAAC,GAAkB,IAAhB9c,EAAe,EAAfA,SAChD,EAAwCC,mBAAoB6H,IAAUC,KAAK,MAA3E,mBAAO6U,EAAP,KAAqBG,EAArB,KACQ5V,EAAW2Q,qBAAW/C,IAAtB5N,OAC8B4U,EAAqBjE,qBAAWhB,IAA9DE,mBAAsBnR,OAExBmX,EAAkBpH,sBAAW,sBAAC,8BAAA7S,EAAA,0DAC9BgZ,IAAkB5U,EADY,wBAExBE,EAAiB0U,EAAjB1U,aAFwB,cAIRL,GAJQ,KAIKK,EAJL,SAIyBF,EAAO2B,aAJhC,+BAI8C3B,EAJ9C,kDAIxBqI,EAJwB,yBAKvBA,GALuB,yCAO9BrB,QAAQC,MAAR,MAP8B,kBAQvBtG,IAAUC,KAAK,MARQ,iCAW3BD,IAAUC,KAAK,MAXY,0DAYjC,QAACgU,QAAD,IAACA,OAAD,EAACA,EAAgB1U,aAAcF,IAE5B0V,EAAmB,uCAAG,4BAAA9Z,EAAA,sEACJia,IADI,OACpBxN,EADoB,OAE1BuN,EAAgBvN,GAFU,2CAAH,qDAkBzB,OAbAyG,qBAAU,WACR,IAAIgH,GAAU,EAOd,OANA,sBAAC,4BAAAla,EAAA,sEACqBia,IADrB,OACO3c,EADP,OAEK4c,GAAW5c,GACb0c,EAAgB1c,GAHnB,0CAAD,GAMO,WACL4c,GAAU,KAEX,CAACD,IAEG,cAACL,GAAcvc,SAAf,CAAwBC,MAAO,CAAEuc,eAAcC,uBAA/C,SAAuE7c,KCxB1Ekd,GAAe,kBAAM1J,KAAK2J,MAAMjT,KAAKkT,MAAQ,MAuB7CC,GAAoB,SAACxX,GACzB,IAAMuX,EAAMF,KAENI,EADsBzX,EAApB8M,gBACiC3C,KACvC,SAACiD,GAAD,OAAcvD,SAASuD,EAASG,MAAO,IAAM1D,SAASuD,EAASsK,SAAU,OAE3E,OAAO/J,KAAKC,IAAL,MAAAD,KAAI,YAAQ8J,EAAiBtN,KAAI,SAACwN,GAAD,OAAaA,EAAUJ,MAApD,QAA0D,MAG1DK,GAAgB,SAAC5X,GAC5B,IAAQ6X,EAAgB7X,EAAhB6X,YACFC,EAAiBN,GAAkBxX,GACzC,OAAO2N,KAAKC,IAAID,KAAKoK,IAAID,EAAgBjO,SAASgO,EAAa,KAAMhf,IAGjEmf,GAAwB,SAAChY,EAAgBoR,GAC7C,IAAQ6G,EAAejY,EAAfiY,WACAzS,EAAa4L,EAAb5L,SAER,OAD2ByF,WAAWnB,uBAAYmO,EAAYzS,IAClC4L,EAAiBtJ,OAGlCoQ,GAAc,uCAAG,WAC5BlY,EACAoR,EACAC,GAH4B,SAAAnU,EAAA,+EAK5BoI,GAAA,sBACE,sBAAApI,EAAA,kEACYsa,GAAkBxX,GAD9B,KAEgBgY,GAAsBhY,EAAQoR,GAF9C,SAGsBC,EAAgB7C,gBAAgBxO,EAAO8M,iBAH7D,+BAIoB8K,GAAc5X,GAAUnH,EAJ5C,mBACE6e,SADF,KAEES,aAFF,KAGEC,aAHF,KAIEC,iBAJF,kDADF,UAOKhT,4BAAkBrF,EAAOoT,IAP9B,UjCpEuBkF,MiC+DK,2CAAH,0DAgBrBC,GAAqB,SAACvY,EAAgBU,GAC1C,IAAQuX,EAAmEjY,EAAnEiY,WAA6BO,EAAsCxY,EAAvDyY,gBAAwCC,EAAe1Y,EAAf0Y,WACtDC,EAAiB9O,SAAS6O,EAAY,IACtCE,EAA0BjL,KAAKC,IAAIlN,EAAYiY,EAAgB,GACrE,OAAO1W,IAAUC,KAAKsW,GAAuBK,IAAI5W,IAAUC,KAAK+V,GAAYa,IAAIF,KAG5EG,GAAoB,SAAClC,EAAYnW,GACrC,IAAQ5C,EAAqD+Y,EAArD/Y,OAAoBkb,EAAiCnC,EAA7CoC,WAA8BP,EAAe7B,EAAf6B,WACxCC,EAAiB9O,SAAS6O,EAAY,IACtCE,EAA0BjL,KAAKC,IAAIlN,EAAYiY,EAAgB,GACrE,OAAO1W,IAAUC,KAAK8W,GAAkBH,IAAI5W,IAAUC,KAAKpE,GAAQgb,IAAIF,KAMnEM,GAAW,uCAAG,WAAOlZ,EAAgBmZ,EAAalc,GAApC,eAAAC,EAAA,6DACZ0C,EAAgByF,4BAAkBrF,EAAOoT,IAD7B,SAEJ3S,GAAyBb,EAAeuZ,EAAKlc,GAFzC,mCAGVuD,GAA0BZ,EAAe3C,GAH/B,iDAE4DsF,IAF5D,4DAAH,0DAYJ6W,GAAW,uCAAG,WACzBpZ,EACA6W,EACAwC,EACA3B,EACAza,GALyB,yBAAAC,EAAA,6DAOnBqa,EAAMF,KACNiC,EAAgB/B,EAAMG,EARH,SASFwB,GAAYlZ,EAAQsZ,EAAerc,GATjC,UASnBsc,EATmB,OAUnBC,EAAgCvX,IAAUC,KAAKmX,GAAkBP,IAAIpB,GACrE+B,EAA+BlB,GAAmBvY,EAAQsZ,GAAeT,IAAIW,GAC7EE,EAA8BX,GAAkBlC,EAAMyC,GAAeT,IAAIW,IAC3EC,EAA6BtX,SAbR,0CAayB,GAbzB,iCAevB0H,SAAS0P,EAAST,IAAIY,GAA6BxL,WAAY,IAC/DrE,SAAS4P,EAA6BvL,WAAY,KAhB3B,4CAAH,8DAoBXyL,GAAwB,uCAAG,WACtC3Z,EACA6W,EACA+C,EACAlC,EACAza,GALsC,SAAAC,EAAA,+EAMnCkc,GAAYpZ,EAAQ6W,EAAM5U,IAAUC,KAAK,KAAKK,IAAIqX,GAAiBlC,EAAUza,IAN1C,2CAAH,8DAQxB4c,GAAY,uCAAG,WAC1B7Z,EACA+D,EACA2T,EACAza,GAJ0B,uBAAAC,EAAA,6DAMpBqa,EAAMF,KACNiC,EAAgB/B,EAAMG,EAPF,SAQHwB,GAAYlZ,EAAQsZ,EAAerc,GARhC,UAQpBsc,EARoB,OASpBO,EAAsB7X,IAAUC,KAAK6B,GAAO+U,IAAIpB,KAChD+B,EAA+BlB,GAAmBvY,EAAQsZ,GAAeT,IAAIiB,IAClD3X,SAXP,yCAWwB,GAXxB,gCAaxB0H,SAAS0P,EAAST,IAAIgB,GAAqB5L,WAAY,IAAMrE,SAAS4P,EAA6BvL,WAAY,KAbvF,4CAAH,4DAiBnB6L,GAAe,SAACC,EAAgBC,EAAiBC,GAAlC,OAAsD,SAAC,EAAID,EAAUD,EAAWE,GAAU,GAWlGC,GAAU,uCAAG,WACxBna,EACA6W,EACAzF,EACAC,EACAgI,EACApc,GANwB,qCAAAC,EAAA,6DAQhB2a,EAAgB7X,EAAhB6X,YACUuC,EAAmDhJ,EAA7D5L,SAAuC6U,EAAsBjJ,EAA7BtJ,MACtBwS,EAAmDjJ,EAA7D7L,SAAuC+U,EAAsBlJ,EAA9B9L,OAVf,SAWO4B,GAAgBoT,GAXvB,cAWlBC,EAXkB,OAYlBC,EAAa7C,GAAc5X,GAZT,SAaJ6W,EAChBuC,GAAYpZ,EAAQ6W,EAAMwC,EAAkBxP,SAASgO,EAAa,IAAK5a,GACvE4c,GAAa7Z,EAAQqZ,EAAkBxP,SAASgO,EAAa,IAAK5a,GAf9C,cAalByd,EAbkB,OAiBlBC,EAAe1Y,IAAUC,KAAKmX,GACjCR,IAAIhC,EAAOA,EAAK/Y,OAAS,KACzBoQ,WACG8L,EAAS/O,WAAWnB,uBAAY6Q,EAAcP,IAAyBC,EACvEJ,EAAUhP,WAAWnB,uBAAY6D,KAAK2J,MAAMoD,GAAOJ,IAAwBE,EAC3EN,EAAUnhB,EAAc0hB,EAtBN,kBAuBjBV,GAAaC,EAAQC,EAASC,IAvBb,4CAAH,gEA6BjBU,GAAU,uCAAG,WACjB5a,EACAoR,EACAC,EACApU,GAJiB,SAAAC,EAAA,+EAMjBoI,GAAA,sBACE,8CAAApI,EAAA,yDACU2a,EAAgB7X,EAAhB6X,YACOwC,EAAsBjJ,EAA7BtJ,MACUwS,EAAmDjJ,EAA7D7L,SAA6D6L,EAA9B9L,OAHzC,yCAIiC,GAJjC,uBAKiC4B,GAAgB,QALjD,cAKQqT,EALR,OAOQR,EAAS,IAETjW,EAAQ9B,IAAUC,KAAKyL,KAAK2J,MAAM0C,EAASK,IAC3CI,EAAa7C,GAAc5X,GAVnC,UAWqC6Z,GAAa7Z,EAAQ+D,EAAO8F,SAASgO,EAAa,IAAK5a,GAX5F,WAY+B,KADvB4d,EAXR,kDAYyC,GAZzC,eAcQZ,EAAUhP,WAAWnB,uBAAY6D,KAAK2J,MAAMuD,GAAuBP,IAAwBE,EAC3FN,EAAUnhB,EAAc0hB,EAfhC,kBAgBSV,GAAaC,EAAQC,EAASC,IAhBvC,4CADF,UAmBK7U,4BAAkBrF,EAAOoT,IAnB9B,YjCvMuBkF,MiCiMN,2CAAH,4DAuCVwC,GAAoB,uCAAG,WAAO9a,EAAgBtC,EAAcmZ,EAAY5Z,GAAjD,uCAAAC,EAAA,yDACnB6d,EAAiC/a,EAAjC+a,aAAcC,EAAmBhb,EAAnBgb,eAChBpb,EAAgByF,4BAAkBrF,EAAOoT,IACzC/S,EAAegF,4BAAkB3H,EAAM0V,IAEvCmE,EAAMF,KACN4D,EAAgB,EAChBC,EAAgBrR,SAASmR,EAAgB,IAAMnR,SAASkR,EAAc,IACtEtC,EAAkBF,GAAmBvY,EAAQuX,GAC7C4D,EAAiBpC,GAAkBlC,EAAMU,IAC3CkB,EAAgBtW,WAAYgZ,EAAehZ,SAVpB,0CAUqC8Y,GAVrC,yBAYUza,GAA0BZ,EAAe3C,GAZnD,aAYrBme,EAZqB,QAaAjZ,SAbA,0CAaiB8Y,GAbjB,oBAeJpR,SAfI,UAgBlBtJ,GAAsBF,EAAcT,EAAe3C,GAhBjC,2BAgBoDiR,WADzEmN,GAfqB,aAiBzB,IAEIC,EACJzR,SAASuR,EAAuBtC,IAAIqC,GAAgBjN,WAAY,IAAMrE,SAAS4O,EAAgBvK,WAAY,IACvGqN,EAAWF,EAAiBC,EArBP,kBAuBpBL,EAAgBM,GAAYL,EAAgBD,IAvBxB,4CAAH,4DA0BbO,GAAY,uCAAG,WAC1Bxb,EACAtC,EACAmZ,EACAzF,EACAC,EACApU,GAN0B,2BAAAC,EAAA,yDAQrBQ,GAAUmZ,EARW,oDA9OsB,CAChD4E,IAAK,EACLC,kBAAmB,EACnBC,cAAe,IA2OW,iBAWXf,GAAW5a,EAAQoR,EAAkBC,EAAiBpU,GAX3C,gCAWtBwe,IAXsB,gEAcpBpb,EAAegF,4BAAkB3H,EAAM0V,IACvCxT,EAAgByF,4BAAkBrF,EAAOoT,IAC7BkH,EAAwBjJ,EAAlC7L,SACA1H,EAAW+Y,EAAX/Y,OAjBkB,UAkBGyC,GAAsBF,EAAcT,EAAe3C,GAlBtD,WAkBpBoe,EAlBoB,OAmBpBO,EAA0B3Q,WAAWnB,uBAAYuR,EAAgBf,KAC3DrY,IAAUC,KAAKpE,GAAQqE,SApBT,kCAqBhByY,GAAW5a,EAAQoR,EAAkBC,EAAiBpU,GArBtC,6DAsBhBkd,GAAWna,EAAQ6W,EAAMzF,EAAkBC,EAAiB,EAAGpU,GAtB/C,mCAoBpBwe,EApBoB,UAwBxBA,EAxBwB,UAyBCX,GAAqB9a,EAAQtC,EAAOmZ,EAAM5Z,GAzB3C,gCA0BT2e,EA1BS,mBAwBxBH,IAxBwB,KAyBxBC,kBAzBwB,KA0BxBC,cA1BwB,mDAAH,gEA8BnBE,GAAoB,uCAAG,WAC3BjN,EACAvO,EACApD,GAH2B,yBAAAC,EAAA,6DAKrBW,EAAewH,4BAAkBuJ,EAAUvQ,SALtB,SAMC8C,GAAatD,EAAcwC,EAAcpD,GAN1C,cAMrB6e,EANqB,gBAOClb,GAAiBP,EAAcxC,EAAcZ,GAP9C,cAOrB8e,EAPqB,OAQrBC,EAAwBF,EAAcvZ,IAAIwZ,GAC1CpS,EAAUsB,WAAWnB,uBAAYgS,EAAelN,EAAUpJ,WAC1DlD,EAAkB2I,WAAWnB,uBAAYkS,EAAuBpN,EAAUpJ,WAVrD,6CAatBoJ,GAbsB,IAczBvQ,QAASR,EACTie,gBACAnS,UACArH,kBACA0Z,2BAlByB,4CAAH,0DAsBbC,GAAa,uCAAG,WAC3B7K,EACAC,EACAQ,EACAnU,EACAmZ,EACA5Z,GAN2B,6BAAAC,EAAA,yDAQtBQ,EARsB,yCArRuB,CAClD0V,GAAI,GACJ8I,oBAAqB,EACrBC,mBAAoB,EACpBC,mBAAoB,GACpBC,aAAc,IAgRa,cASrBhc,EAAegF,4BAAkB3H,EAAM0V,IAEvCkJ,EAAa,IAAI/H,IAAY,CAACnD,EAAiB/S,QAASgT,EAAgBhT,SAAS8L,IAAI9E,sBAXhE,SAYWwW,GAAqBzK,EAAkB/Q,EAAcpD,GAZhE,cAYrBsf,EAZqB,gBAaUV,GAAqBxK,EAAiBhR,EAAcpD,GAb9D,cAarBuf,EAbqB,iBAgBnB7U,QAAQgN,WACZ9C,EACG1H,KAAI,SAACyE,GAAD,mBAAC,eAAoBA,GAArB,IAAgCvQ,QAASgH,4BAAkBuJ,EAAUvQ,cACzEW,QAAO,YAAkB,IAAfX,EAAc,EAAdA,QACHoe,EAAcH,EAAW1H,IAAIvW,GAEnC,OADKoe,GAAaH,EAAWzD,IAAIxa,IACzBoe,KAETtS,KAAI,SAACyE,GAAD,OAAeiN,GAAqBjN,EAAWvO,EAAcpD,OAxB7C,eAerByf,EAfqB,OA2BxB1d,QAAO,kBAA2B,cAA3B,EAAG8U,UACV3J,KAAI,SAAC2K,GAAD,OAAaA,EAAqDta,SAEnE4hB,EAAqB,CAACG,EAAyBC,GAClDpO,OAAOsO,GACP1I,MAAK,SAAC9W,EAAG+W,GAAJ,OAAW/W,EAAEqI,OAAS0O,EAAE1O,QAAU,EAAI,KAExCzH,EAAS+Y,EAAOA,EAAK/Y,OAAS,IAC9Bue,EAAepR,WAAWnB,uBAAYhM,EAAQsT,EAAiB5L,WAnC1C,kBAqCpB,CACL4N,GAAI/S,EACJ6b,oBAAqBK,EAAwB5S,QAC7CwS,mBAAoBK,EAAuB7S,QAC3CyS,qBACAC,iBA1CyB,4CAAH,gECnTbM,GAAe7iB,wBASzB,CACD8iB,UDOgD,CAChDnB,IAAK,EACLC,kBAAmB,EACnBC,cAAe,GCTfkB,YDYoD,CACpDnF,SAAU,EACVS,aAAc,EACdC,aAAc,EACdC,iBAAkB,GCflByE,WDkBkD,CAClD1J,GAAI,GACJ8I,oBAAqB,EACrBC,mBAAoB,EACpBC,mBAAoB,GACpBC,aAAc,GCtBdU,0BAA0B,WAAD,4BAAE,sBAAA7f,EAAA,+EAAY,GAAZ,2CAAF,kDAAC,GAC1B8f,+BAA+B,WAAD,4BAAE,sBAAA9f,EAAA,+EAAY,GAAZ,2CAAF,kDAAC,GAC/B+f,mCAAmC,WAAD,4BAAE,sBAAA/f,EAAA,+EAAY,GAAZ,2CAAF,kDAAC,GACnCggB,6BAA6B,WAAD,4BAAE,sBAAAhgB,EAAA,+EAAY,GAAZ,2CAAF,kDAAC,GAC7BigB,kBAAmB,eAGRC,GAAiC,SAAC,GAAkB,IAAhBjjB,EAAe,EAAfA,SAC/C,EAAkCC,mBDJc,CAChDqhB,IAAK,EACLC,kBAAmB,EACnBC,cAAe,ICCf,mBAAOiB,EAAP,KAAkBS,EAAlB,KACA,EAAsCjjB,mBDCc,CACpDsd,SAAU,EACVS,aAAc,EACdC,aAAc,EACdC,iBAAkB,ICLlB,mBAAOwE,EAAP,KAAoBS,EAApB,KACA,EAAoCljB,mBDOc,CAClDgZ,GAAI,GACJ8I,oBAAqB,EACrBC,mBAAoB,EACpBC,mBAAoB,GACpBC,aAAc,ICZd,mBAAOS,EAAP,KAAmBS,EAAnB,KAEA,EAAoCtL,qBAAW/C,IAAvC5N,EAAR,EAAQA,OAAQgO,EAAhB,EAAgBA,gBAChB,EAA+C2C,qBAAWhB,IAAlDE,EAAR,EAAQA,mBAAoBU,EAA5B,EAA4BA,eAC5B,EAAuCI,qBAAWwD,IAA1CzC,EAAR,EAAQA,cAAe6C,EAAvB,EAAuBA,YAGjBkH,EAAyB,uCAAG,WAAOS,GAAP,yBAAAtgB,EAAA,yDAChBgZ,EAAoC/E,EAA5CnR,OAAwBqR,EAAoBF,EAApBE,gBACxB7L,EAAa6L,EAAb7L,WACJ0Q,GAAkBlD,GAAiB1R,GAAUkE,GAHjB,uBAIxBnF,EAAegF,4BAAkB2N,EAAcI,IAC/CxT,EAAgByF,4BAAkB6Q,EAAe9C,IALzB,SAMAzS,GAAsBN,EAAcT,EAAe4d,EAAelc,GANlE,cAMxBmc,EANwB,yBAOvBxS,WAAWnB,uBAAY2T,EAAiBjY,KAPjB,gCASzB,GATyB,4CAAH,sDAYzBwX,EAA8B,uCAAG,WAAOU,GAAP,mBAAAxgB,EAAA,yDACrBgZ,EAAsD/E,EAA9DnR,OAAwBoR,EAAsCD,EAAtCC,iBAAkBC,EAAoBF,EAApBE,iBAC9C6E,EAFiC,yCAG5BiE,GAAWjE,EAAgBL,EAAazE,EAAkBC,EAAiBqM,EAAapc,GAAUgO,IAHtE,gCAK9B,GAL8B,2CAAH,sDAQ9B2N,EAAkC,uCAAG,WAAOS,GAAP,qBAAAxgB,EAAA,yDACzBgZ,EAAoC/E,EAA5CnR,OAAwBqR,EAAoBF,EAApBE,iBAC5B6E,EAFqC,mBAG/B1Q,EAAa6L,EAAb7L,UACJqX,EAAYnF,SAJuB,gCAKjB7B,EAChBuD,GAAYlD,EAAgBL,EAAa6H,EAAab,EAAYnF,SAAUpW,GAAUgO,GACtFuK,GAAa3D,EAAgBwH,EAAab,EAAYnF,SAAUpW,GAAUgO,GAPzC,cAK/BoL,EAL+B,yBAQ9BzP,WAAWnB,uBAAY6D,KAAK2J,MAAMoD,GAAOlV,KARX,gCAWlC,GAXkC,2CAAH,sDAclC0X,EAA4B,uCAAG,WAAOM,GAAP,uBAAAtgB,EAAA,yDACnBgZ,EAAoC/E,EAA5CnR,OAAwBqR,EAAoBF,EAApBE,iBAC5B6E,EAF+B,oBAGzB1Q,EAAa6L,EAAb7L,UACJqQ,EAJ6B,iCAKLuD,GAAYlD,EAAgBL,EAAa,IAAK/c,EAAcwI,GAAUgO,GALjE,cAKzBqO,EALyB,gBAMChE,GAAyBzD,EAAgBL,EAAa2H,EAAe1kB,EAAcwI,GAAUgO,GAN9F,cAMzBsO,EANyB,yBAOxB3S,WAAWnB,uBAAY6D,KAAK2J,MAAMqG,EAAcC,GAAoBpY,KAP5C,iCAU5B,GAV4B,4CAAH,sDAa5B2X,EAAiB,uCAAG,gCAAAjgB,EAAA,yDACRgZ,EAAsD/E,EAA9DnR,OAAwBoR,EAAsCD,EAAtCC,iBAAkBC,EAAoBF,EAApBE,kBAC9C6E,GAAkB9E,EAAiB/S,SAAWgT,EAAgBhT,SAF1C,4BAGtBkf,EAHsB,SAGFtB,GAAc7K,EAAkBC,EAAiBQ,EAAgBmB,EAAe6C,EAAavU,GAAUgO,GAHrG,6EAAH,qDA6BvB,OAtBAc,qBAAU,WACR,IAAIgH,GAAU,EAkBd,OAjBA,sBAAC,sCAAAla,EAAA,kEAEmBgZ,EAAsD/E,EAA9DnR,OAAwBoR,EAAsCD,EAAtCC,iBAAkBC,EAAoBF,EAApBE,kBAC9C6E,GAAkB9E,EAAiB/S,SAAWgT,EAAgBhT,SAHrE,iCAIkC6Z,GAAehC,EAAgB9E,EAAkBC,GAJnF,cAIWwM,EAJX,gBAKgCrC,GAAatF,EAAgBlD,EAAe6C,EAAazE,EAAkBC,EAAiB/P,GAAUgO,GALtI,cAKWwO,EALX,iBAMiC7B,GAAc7K,EAAkBC,EAAiBQ,EAAgBmB,EAAe6C,EAAavU,GAAUgO,GANxI,QAMWyO,EANX,OAOS3G,IACFkG,EAAeO,GACfR,EAAaS,GACbP,EAAcQ,IAVrB,0DAcGzV,QAAQC,MAAR,MAdH,yDAAD,GAiBO,WAAQ6O,GAAU,KACxB,CAACjG,EAAoB6B,EAAe6C,IAGrC,cAAC8G,GAAapiB,SAAd,CACEC,MAAO,CACLoiB,YACAC,cACAC,aACAC,4BACAC,iCACAC,qCACAC,+BACAC,qBATJ,SAYGhjB,K,qBChIM6jB,GAAc,SAACC,EAAWC,GACrC,IAAMC,EAAkBC,KAAQH,GAAGI,OAAOH,GAC1C,MAAmB,QAAZC,EAAoBC,KAAQ,GAAGC,OAAOH,GAAKC,GAGvCG,GAAqB,SAAC9jB,GAAiC,IAAlBgL,EAAiB,uDAAN,EAC3D,GAAiB,IAAbA,EAAgB,OAAOhL,EAC3B,IAAM+jB,EAAQ/jB,EAAMgkB,MAAM,KAC1B,GAAID,EAAMnf,OAAS,EAAG,CACpB,GAAImf,EAAM,GAAGnf,QAAUoG,EAAU,OAAOhL,EACxC,IAAMikB,EAAkBjZ,EAAW+Y,EAAM,GAAGnf,OAC5C,MAAM,GAAN,OAAU5E,GAAV,OAAkBkkB,MAAMD,GAAiB9jB,KAAK,KAAKgkB,KAAK,KAE1D,MAAM,GAAN,OAAUnkB,EAAV,YAAmBkkB,MAAMlZ,GAAU7K,KAAK,KAAKgkB,KAAK,MCZvCC,GAAe,SAAC9gB,GAAD,OAA2BA,GAAU,KCOpD+gB,GAAiC,SAACtjB,GAC7C,IAAQ6Z,EAAkC7Z,EAAlC6Z,SAAU0J,EAAwBvjB,EAAxBujB,UAAWC,EAAaxjB,EAAbwjB,SA8B7B,OACE,eAACC,GAAD,WACE,cAACC,GAAD,2BAAW1jB,GAAX,IAAkB6Z,SAfG,SAAC8J,GACxB,IAAMC,EAAU,IAAIC,OAAJ,uCACR5kB,EAAU0kB,EAAEG,cAAZ7kB,MACJ4a,GAAY+J,EAAQG,KAAK9kB,IAlBL,SAACA,GACzB,GAAIA,EAAO,CACT,IAAM+jB,EAAQ/jB,EAAMgkB,MAAM,KAC1B,QAAOD,EAAMnf,OAAS,IAAImf,EAAM,GAAGnf,QAAU0f,EAE/C,OAAO,EAagCS,CAAkB/kB,IAVvC,SAACA,GACnB,OAAIA,GACKglB,sBAAWhlB,EAAOskB,GAAWW,IAAIV,GAQyBW,CAAYllB,IAC7E4a,EAAS5a,OAYT,cAAC,GAAD,CAAQmlB,QARG,WACTvK,GACFA,EAAStL,uBAAYiV,EAAUD,KAM/B,qBAKAE,GAAY3jB,IAAOK,IAAV,2EAAGL,CAAH,QACT,sOAGA4jB,GAAQ5jB,IAAOukB,MAAV,uEAAGvkB,CAAH,wIASL,yIACA,kEAGAwkB,GAASxkB,IAAOykB,OAAV,wEAAGzkB,CAAH,QACN,uUCnDO0kB,GAAoB,SAACC,GAChC,MAA4C5lB,mBAAyB,CAAE6lB,MAAOrnB,EAAQsnB,UAAtF,mBAAOC,EAAP,KAAuBC,EAAvB,KAEAhQ,qBAAU,WACP,sBAAC,8BAAAlT,EAAA,yDACQkF,EAAa+d,EAAb/d,SADR,UAGMA,EAHN,gCAI0BA,EAASiB,OAJnC,OAIUxE,EAJV,OAKIuhB,GAAkB,SAACC,GAAD,mBAAC,eAAkBA,GAAnB,IAA4BxhB,UAASohB,MAAOrnB,EAAQ0nB,WAL1E,uDAQEF,GAAkB,SAACC,GAAD,mBAAC,eAAkBA,GAAnB,IAA4BJ,MAAOrnB,EAAQ2nB,YAR/D,wDAAD,KAWA,CAACJ,EAAe/d,WAEnB,IAAMoe,EAAQ,uCAAG,WAAO3hB,GAAP,eAAA3B,EAAA,+EAEU8iB,EAAOnhB,GAFjB,OAEPuD,EAFO,OAIXge,EADEhe,EACgB,SAACie,GAAD,mBAAC,eAAkBA,GAAnB,IAA4Bje,WAAU6d,MAAOrnB,EAAQ6nB,aAErD,SAACJ,GAAD,mBAAC,eAAkBA,GAAnB,IAA4BJ,MAAOrnB,EAAQ2nB,WANlD,gDASbH,GAAkB,SAACC,GAAD,mBAAC,eAAkBA,GAAnB,IAA4BJ,MAAOrnB,EAAQ2nB,YAThD,yDAAH,sDAiBd,OAAO,aACLC,WACAE,QANc,WACdN,EAAkB,CAAEH,MAAOrnB,EAAQsnB,YAMhCC,IC9CDQ,GAAe7mB,wBAElB,CACD8mB,IAAK,OAoFMC,GAA8CC,OAAOC,QAzC/B,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,KAAMC,EAAoD,EAApDA,QAASC,EAA2C,EAA3CA,aAAc/mB,EAA6B,EAA7BA,SAAUgnB,EAAmB,EAAnBA,aACrEP,EAAG,OAAGO,QAAH,IAAGA,IAAgBC,iBAAO,MAEnC,OACE,cAACT,GAAapmB,SAAd,CAAuBC,MAAO,CAAEomB,OAAhC,SACE,cAAC,KAAD,CAAYS,QAAM,EAACC,KAAMN,EAAMO,GAAIC,WAAnC,SACE,cAAC,KAAD,CACED,GAAG,MACH3mB,UAAU,qCACVqmB,QAASC,EAAe,aAAWD,EACnCE,aAAcP,EAJhB,SAME,eAAC,GAAD,WACE,cAAC,KAAOnlB,QAAR,CAAgBb,UAAU,sCAE1B,sBACEA,UAAU,qCACV6mB,cAAY,OAFd,oBAMA,cAAC,KAAWC,MAAZ,CACEH,GAAIC,WACJG,MAAM,wBACNC,UAAU,qBACVC,QAAQ,wBACRC,MAAM,uBACNC,UAAU,wBACVC,QAAQ,qBAPV,SASE,cAACC,GAAD,UACG9nB,iBAUmE,CAAE+nB,MAjF9D,SAAC,GAAD,IAAG/nB,EAAH,EAAGA,SAAH,OACtB,cAAC,KAAO+nB,MAAR,CACEX,GAAG,KACH3mB,UAAU,8CAFZ,SAIGT,KA4EwFgoB,KAxEtE,SAAC,GAAD,IAAGhoB,EAAH,EAAGA,SAAH,OACrB,cAACwmB,GAAayB,SAAd,UACG,gBAAGxB,EAAH,EAAGA,IAAH,OACC,cAACyB,GAAD,UACE,cAACC,GAAD,CAAS1B,IAAKA,EAAd,SACGzmB,UAmEwFooB,OA5D1E,SAAC,GAAD,IAAGpoB,EAAH,EAAGA,SAAH,OACvB,cAACqoB,GAAD,UACGroB,OA4DC6kB,GAAY3jB,IAAOK,IAAV,sEAAGL,CAAH,QACT,+EAGA4mB,GAAmB5mB,IAAOK,IAAV,6EAAGL,CAAH,QAChB,m5BAGAgnB,GAAmBhnB,IAAOK,IAAV,6EAAGL,CAAH,QAChB,sBAGAinB,GAAUjnB,IAAOC,EAAV,oEAAGD,CAAH,QACP,4CAGAmnB,GAAkBnnB,IAAOK,IAAV,4EAAGL,CAAH,QACf,2DC7GOonB,GAAmB,kBAC9B,cAACC,GAAD,CAAgBC,UAAQ,EAACtmB,WAAS,EAAlC,yBAKIqmB,GAAiBrnB,YAAOe,GAAV,mFAAGf,CAAH,QACd,yMCNOunB,GAAiC,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAC5C,mBAAGC,IAAI,aAAaloB,UAAU,YAAYmoB,KAAI,UAAK5pB,EAAL,YAAiC0pB,GAAUG,OAAO,SAAhG,wBCGWC,GAAmC,SAAC,GAA6D,IAAD,IAA1DC,eAAkBjD,EAAwC,EAAxCA,MAAO7d,EAAiC,EAAjCA,SAAY+gB,EAAqB,EAArBA,eAyBtF,OAxBqB,WACnB,OAAOlD,GACL,KAAKrnB,EAAQsnB,QACX,OAAO,8EACT,KAAKtnB,EAAQ6nB,UACX,OACE,6FAC4D,IAD5D,WAEU,cAAC,GAAD,CAAeoC,OAAM,OAAEzgB,QAAF,IAAEA,OAAF,EAAEA,EAAUghB,UAG/C,KAAKxqB,EAAQ0nB,MACX,OACE,qCACG6C,EAAgB,IACjB,4CAAc,cAAC,GAAD,CAAeN,OAAM,OAAEzgB,QAAF,IAAEA,OAAF,EAAEA,EAAUghB,aAGrD,KAAKxqB,EAAQ2nB,OACX,OAAO,2DACT,QACE,OAAO,8BAGN8C,ICnBIC,GAAiC,SAAC,GAA2D,IAAzDtD,EAAwD,EAAxDA,OAAQuD,EAAgD,EAAhDA,iBAAkBvC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,QAAS9mB,EAAe,EAAfA,SAClF+oB,EAAiBnD,GAAkBC,GACjCC,EAA6BiD,EAA7BjD,MAAOO,EAAsB0C,EAAtB1C,SAAUE,EAAYwC,EAAZxC,QACzB,EAA4CtmB,mBAAoB,MAAhE,mBAAO+oB,EAAP,KAAuBK,EAAvB,KAEApT,qBAAU,WACJ4Q,IACFN,IACA8C,EAAkBD,GAAoB,MACtC/C,OAED,CAACQ,IAEJ,IAAMyC,EAAe,iBAAM,CAAC7qB,EAAQsnB,QAAStnB,EAAQ6nB,WAAWiD,SAASzD,IAEzE,OACE,eAACY,GAAD,CAAOI,QAASA,EAASD,KAAMA,EAAME,aAAcuC,IAAnD,UACE,cAAC5C,GAAMqB,MAAP,qCAGA,eAACrB,GAAMsB,KAAP,WACE,cAAC,GAAD,CAAiBgB,eAAgBA,EAAgBD,eAAgBA,IAChE/oB,KAEH,cAAC0mB,GAAM0B,OAAP,UACGkB,IACC,cAAC,GAAD,IAEA,cAACrnB,EAAD,CAAaujB,QAASsB,EAAtB,2BCnCG0C,GAA2C,SAAC,GAAD,IAAGhE,EAAH,EAAGA,QAASiE,EAAZ,EAAYA,YAAajB,EAAzB,EAAyBA,SAAzB,OACpD,cAAC,GAAD,CAAQA,SAAUA,EAAUhD,QAASA,EAArC,SACGiE,KAID/D,GAASxkB,IAAOykB,OAAV,sFAAGzkB,CAAH,gBACN,gQACA,+PACA,uNCLOwoB,GAA+B,SAAC,GAAwE,IAAtE5Q,EAAqE,EAArEA,aAAc6Q,EAAuD,EAAvDA,cAAete,EAAwC,EAAxCA,SAAUD,EAA8B,EAA9BA,OAAQkM,EAAsB,EAAtBA,gBACtFsS,EAAsB,SAACC,GAAD,OTRF,SAAClmB,EAAsB0H,GAAvB,OAC1BwY,GAAY/S,WAAWnB,uBAAYhM,EAAQ0H,IAAY,WSOJye,CAAaD,EAAKxe,IACrE,OACE,cAAC0e,GAAD,UACGjR,EAAa9Q,SACZ,eAACgiB,GAAD,WAAO1S,EAAkB,SAAW,SAApC,aAAwDsS,EAAoBD,GAA5E,KAA8Fve,EAA9F,OAEA,eAAC4e,GAAD,kBAAW1S,EAAkB,SAAW,QAAxC,aAA2DsS,EAAoBD,EAAcvhB,IAAI0Q,IAAjG,KAAmH1N,EAAnH,UAMF4e,GAAO9oB,IAAOa,KAAV,oEAAGb,CAAH,QACJ,+GAGA6oB,GAAU7oB,IAAOK,IAAV,uEAAGL,CAAH,QACP,kBC/BS,OAA0B,yCCA1B,OAA0B,iCCc5B+oB,GAA2B,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,WAAYC,EAAzB,EAAyBA,gBAAzB,OACtC,eAAC,KAAD,CAAS3pB,UAAS,wCAAmC0pB,GAArD,UACE,cAAC,KAAQzE,OAAT,CAAgBjlB,UAAU,OAA1B,SACE,qBAAK4pB,IAAKC,GAAMC,IAAI,WAEtB,cAAC,KAAD,CACEnD,GAAIC,WACJG,MAAM,mCACNC,UAAU,0BACVC,QAAQ,4BACRC,MAAM,kCACNC,UAAU,4BACVC,QAAQ,0BAPV,SASE,cAAC,KAAQ2C,MAAT,CAAe/pB,UAAS,8DAAyD2pB,GAAjF,SACE,cAACK,GAAD,UACE,cAACC,GAAD,UACGR,EAASla,KAAI,gBAAG2a,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACZ,eAAC,GAAD,WACE,cAAC,GAAD,UAAQD,IACR,cAAC,GAAD,UAAOC,MAFKD,kBAYtBF,GAAavpB,IAAOK,IAAV,sEAAGL,CAAH,QACV,wfAGAwpB,GAAaxpB,IAAOK,IAAV,sEAAGL,CAAH,QACV,sJAGAinB,GAAUjnB,IAAOK,IAAV,mEAAGL,CAAH,QACP,iBAGA6mB,GAAQ7mB,IAAOC,EAAV,iEAAGD,CAAH,YACPQ,EACE,qGAGAsmB,GAAO9mB,IAAOC,EAAV,gEAAGD,CAAH,YACNS,EACE,0FC/COkpB,GAAoC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAClD,EAA8B7qB,mBAAiB,QAA/C,mBAAO4H,EAAP,KAAgBkjB,EAAhB,KACiD3f,EAAe0M,qBAAWhB,IAAnEE,mBAAsBE,gBAAmB9L,OACjD,EAAkF0M,qBAAW0K,IAArFM,EAAR,EAAQA,mCAAmD5E,EAA3D,EAA4CwE,YAAexE,iBAU3D,OARAjI,qBAAU,WACR,sBAAC,sBAAAlT,EAAA,8DACCgoB,GACED,EAAgB9iB,SAFnB,qBAE8B,OAF9B,mCAEuCmc,GAFvC,iBAEmErB,EAAmCgI,GAFtG,uEAE0H,GAF1H,4EAAD,KAKC,CAACA,IAGF,eAACE,GAAD,WACE,cAACC,GAAD,IACA,cAACC,GAAD,CAAMb,IAAKc,GAAcZ,IAAI,mBAC7B,eAACa,GAAD,WACE,eAACtpB,EAAD,oCAEE,cAAC,GAAD,CACEqoB,WAAW,yCACXC,gBAAgB,mDAChBF,SAAU,CAAC,CAAES,MAAO,oBAAqBC,KjDoDnD,mFiDjDM,eAAC5oB,EAAD,WACG6F,EADH,IACauD,EAAQ,IACnB,+BACG0f,EAAgBphB,GAAG,IAAMwU,EAAmB,EAA5C,aAAsDA,EAAtD,eAA6EA,EAAmB,EAAI,IAAM,IAAO,eAQxH8M,GAA4B9pB,IAAOK,IAAV,8FAAGL,CAAH,QACzB,0YAGA+pB,GAAa/pB,IAAOK,IAAV,+EAAGL,CAAH,QACV,+KAGAgqB,GAAOhqB,IAAOmqB,IAAV,yEAAGnqB,CAAH,YACJ,mDACA,8CAGAkqB,GAAuBlqB,IAAOK,IAAV,yFAAGL,CAAH,QACpB,8ECnES,OAA0B,oCCQ5BoqB,GAAwC,SAAC,GAAD,IAAG9F,EAAH,EAAGA,QAAH,OACnD,eAAC+F,GAAD,WACE,cAAC,GAAD,IACA,eAACC,GAAD,WACE,eAAC,GAAD,WACE,cAACC,GAAD,CAAKpB,IAAKqB,GAASnB,IAAI,YACvB,cAAC,GAAD,8CAEF,cAACoB,GAAD,UACE,cAAC,GAAD,CAAQnG,QAASA,EAAjB,8BAMFgG,GAAUtqB,IAAOK,IAAV,oFAAGL,CAAH,QACP,mDAGAqqB,GAAgCrqB,IAAOK,IAAV,0GAAGL,CAAH,QAC7B,yYAGA+pB,GAAa/pB,IAAOK,IAAV,uFAAGL,CAAH,QACV,gLAGAuqB,GAAMvqB,IAAOmqB,IAAV,gFAAGnqB,CAAH,YACH,qGACA,mFAGAinB,GAAUjnB,IAAOa,KAAV,oFAAGb,CAAH,QACP,mHAGAyqB,GAAgBzqB,IAAOK,IAAV,0FAAGL,CAAH,QACb,gBAGAwkB,GAASxkB,IAAOykB,OAAV,mFAAGzkB,CAAH,YACN,qOACA,0EAGAgnB,GAAmBhnB,IAAOK,IAAV,6FAAGL,CAAH,QAChB,mDCvCO0qB,GAAkC,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,UAAWf,EAAsB,EAAtBA,gBAC3D,EAKIhT,qBAAWhB,IAJbE,mBAC6BoJ,EAF/B,EAEIlJ,gBAAmB9L,OACS0gB,EAHhC,EAGI7U,iBAAoB7L,OAGhBwX,EAA8B9K,qBAAW0K,IAAzCI,0BAER,EAAwC3iB,mBAAiB,QAAzD,mBAAOiT,EAAP,KAAqB6Y,EAArB,KAQA,OANA9V,qBAAU,WACR,sBAAC,sBAAAlT,EAAA,kEACCgpB,EADD,KACiB5H,GADjB,iBAC6CvB,EAA0BkI,GADvE,uEAC2F,IAD3F,wDAAD,KAGC,CAACA,IAGF,eAAC,GAAD,WACE,cAACkB,GAAD,UACE,eAAC,GAAD,WACE,cAACC,GAAD,gCAGA,eAACC,GAAD,WACE,cAACC,GAAD,oBAAYhI,GAAmBM,GAAaoH,GAAW9X,WAAY,GAAnE,OACA,+BAAO+X,YAIb,cAACE,GAAD,UACE,eAAC,GAAD,WACE,cAACC,GAAD,8BAGA,eAACC,GAAD,WACE,cAACC,GAAD,oBAAYjZ,EAAZ,OACA,+BAAOkN,gBAQbyE,GAAY3jB,IAAOK,IAAV,gFAAGL,CAAH,QACT,4HAGA8qB,GAAc9qB,IAAOK,IAAV,kFAAGL,CAAH,QACX,yYAGA+qB,GAAQ/qB,YAAOY,GAAV,4EAAGZ,CAAH,QACL,+HAGAgrB,GAAQhrB,YAAOc,GAAV,4EAAGd,CAAH,QACL,+IAGAirB,GAASjrB,IAAOa,KAAV,6EAAGb,CAAH,QACN,yBAGAsqB,GAAUtqB,IAAOK,IAAV,8EAAGL,CAAH,QACP,gGChEOkrB,GAAuC,SAAC,GAAmD,IAAjDtB,EAAgD,EAAhDA,gBAAiBjE,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASuF,EAAgB,EAAhBA,UAC7EtJ,EAAiCjL,qBAAW0K,IAA5CO,6BACyC3X,EAAe0M,qBAAWhB,IAAnEE,mBAAsBE,gBAAmB9L,OACjD,EAAwBnL,mBAAiB,QAAzC,mBAAOqsB,EAAP,KAAaC,EAAb,KAQA,OANAtW,qBAAU,WACR,sBAAC,sBAAAlT,EAAA,kEACCwpB,EADD,KACS1I,GADT,SAC2Bd,EAA6B+H,GADxD,sCAC0E,WAD1E,wDAAD,KAGC,CAACA,IAGF,eAACpE,GAAD,CAAOI,QAASA,EAASD,KAAMA,EAA/B,UACE,cAACH,GAAMqB,MAAP,4BAGA,eAACrB,GAAMsB,KAAP,uDAC4C,IAD5C,0CAE0C,IACxC,8BACGsE,EAAM,IACNlhB,KACE,IANP,aASA,eAACsb,GAAM0B,OAAP,WACE,cAACnmB,EAAD,CAAaxB,UAAU,OAAO+kB,QAASsB,EAAvC,sBACA,cAAC0F,GAAD,CAAehH,QAAS6G,EAAxB,oCAMFG,GAAgBtrB,YAAOe,GAAV,qFAAGf,CAAH,QACb,uMC7BOurB,GAAkC,SAAC,GAAqJ,IAAnJ5F,EAAkJ,EAAlJA,KAAMC,EAA4I,EAA5IA,QAAS5f,EAAmI,EAAnIA,QAASwlB,EAA0H,EAA1HA,sBAAuBC,EAAmG,EAAnGA,gBAAiBC,EAAkF,EAAlFA,eAAgBC,EAAkE,EAAlEA,yBAA0BC,EAAwC,EAAxCA,wBAAyB9sB,EAAe,EAAfA,SAC7K+sB,EAAwBnH,GAAkB1e,GAC1C8lB,EAA4BpH,GAAkB+G,GAC9CM,EAA6BrH,GAAkBgH,GACrD,EAAkD3sB,oBAAkB,GAApE,mBAAOitB,EAAP,KAA0BC,EAA1B,KAEAlX,qBAAU,WACJ4Q,IACFsG,GAAqB,GACrBJ,EAAsBxG,UACtByG,EAA0BzG,UAC1B0G,EAA2B1G,UAC3BwG,EAAsB1G,cAEvB,CAACQ,IAEJ5Q,qBAAU,WACR,IAAemX,EAA0CL,EAAjDjH,MAA8BuH,EAAmBN,EAA5BroB,QACzB0oB,IAAiB3uB,EAAQ0nB,OAASkH,IAAmBH,IACvDF,EAA0B3G,WAC1B4G,EAA2B5G,SAASgH,GACpCF,GAAqB,MAEtB,CAACJ,IAEJ,IAYMzD,EAAe,WACnB,IAAMgE,EAAmB,IAAIlT,IAAI,CAAC3b,EAAQsnB,QAAStnB,EAAQ6nB,YACrDiH,EAAoBD,EAAiB7S,IAAIsS,EAAsBjH,OAC/D0H,EAAsBT,EAAsBjH,QAAUrnB,EAAQ0nB,OAAU,CAAC6G,EAA2BC,GAA4BpoB,QAAO,gBAAGihB,EAAH,EAAGA,MAAH,OAAewH,EAAiB7S,IAAIqL,MAAQ7gB,OAAS,EAClM,OAAOsoB,GAAqBC,GAG9B,OACE,eAAC9G,GAAD,CAAOI,QAASA,EAASD,KAAMA,EAAME,aAAcuC,IAAnD,UACE,cAAC5C,GAAMqB,MAAP,qCAGA,eAACrB,GAAMsB,KAAP,WAvBE+E,EAAsBjH,QAAUrnB,EAAQ0nB,MACnC,cAAC,GAAD,CAAiB4C,eAAgBgE,EAAuB/D,eAAgB0D,IAE/E,sBAAKjsB,UAAU,0BAAf,UACE,8BAAK,cAAC,GAAD,CAAiBsoB,eAAgBgE,EAAuB/D,eAAgB0D,MAC7E,8BAAMG,EAAyBG,KAC/B,8BAAMF,EAAwBG,QAmB7BjtB,KAEH,cAAC0mB,GAAM0B,OAAP,UACGkB,IACC,cAAC,GAAD,IAEA,cAACrnB,EAAD,CAAaujB,QAASsB,EAAtB,2BCrEG2G,GAAqC,SAAC,GAA6D,IAAD,IAA1D1E,eAAkBjD,EAAwC,EAAxCA,MAAO7d,EAAiC,EAAjCA,SAAYmD,EAAqB,EAArBA,OAAQzH,EAAa,EAAbA,OA6BhG,OA5BqB,WACnB,OAAQmiB,GACN,KAAKrnB,EAAQsnB,QACX,OAAO,gDAAmB3a,EAAnB,yBACT,KAAK3M,EAAQ6nB,UACX,OACE,gDACelb,EADf,sBAC0C,IAD1C,WAEU,cAAC,GAAD,CAAesd,OAAM,OAAEzgB,QAAF,IAAEA,OAAF,EAAEA,EAAUghB,UAG/C,KAAKxqB,EAAQ0nB,MACX,OACE,0DACwB,8BAAIxiB,EAAJ,IAAayH,KADrC,mCACiF,IADjF,WAEU,cAAC,GAAD,CAAesd,OAAM,OAAEzgB,QAAF,IAAEA,OAAF,EAAEA,EAAUghB,UAG/C,KAAKxqB,EAAQ2nB,OACX,OACE,6CACW,8BAAIziB,EAAJ,IAAayH,KADxB,6CAIJ,QACE,OAAO,8BAGN8d,ICXIwE,GAAkB,WAC7B,MAAkCztB,mBAAS,IAA3C,mBAAO4rB,EAAP,KAAkB8B,EAAlB,KACA,EAA8C1tB,mBAAS6H,IAAUC,KAAK,MAAtE,mBAAO+iB,EAAP,KAAwB8C,EAAxB,KACA,EAAmI9V,qBAAWhB,IAA9I,IAAQE,mBAA8B+E,EAAtC,EAA8BlW,OAAwBoR,EAAtD,EAAsDA,iBAAkBC,EAAxE,EAAwEA,gBAAmBM,EAA3F,EAA2FA,mBAAoBF,EAA/G,EAA+GA,gBAC7F2I,EAAmFhJ,EAA7F5L,SAAwCygB,EAAqD7U,EAA7D7L,OAAqCkE,EAAwB2H,EAAjC/S,QAClDic,EAAgFjJ,EAA1F7L,SAAuC+U,EAAmDlJ,EAA3D9L,OAC/BjE,GAD0F+P,EAAhChT,QAC/C4T,qBAAW/C,IAAtB5N,QACR,EAA+G2Q,qBAAWwD,IAAlHzC,EAAR,EAAQA,cAAe6C,EAAvB,EAAuBA,YAAaC,EAApC,EAAoCA,kBAAmBC,EAAvD,EAAuDA,yBACvD,GADA,EAAiFC,0BACnC/D,qBAAW6E,KAAjDC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,oBACdmG,EAAsBlL,qBAAW0K,IAAjCQ,kBACR,EAAkClL,qBAAW/C,IAArCC,EAAR,EAAQA,aAAc9Q,EAAtB,EAAsBA,QAChB2pB,EAAqB/lB,IAAUC,KAAK2T,EAAcA,EAAY/X,OAAS,KAC7E,EAA8D1D,oBAAkB,GAAhF,mBAAO6tB,EAAP,KAAgCC,EAAhC,KACA,EAAgE9tB,mBAAoB6H,IAAUC,KAAK,MAAnG,mBAAOimB,EAAP,KAAiCC,EAAjC,KACA,EAA4EhuB,mBAAoB6H,IAAUC,KAAK,MAA/G,mBAAOmmB,EAAP,KAAuCC,EAAvC,KAEA,EAAsCluB,oBAAkB,GAAxD,mBAAOmuB,GAAP,KAAoBC,GAApB,KAEMC,GAAqB,WACzBX,EAAa,IACbC,EAAmB9lB,IAAUC,KAAK,OAGpCkO,qBAAU,WACRqY,OACC,CAAChX,IAEJ,IAmBMiX,GAAiB,WACrBF,IAAe,GACfC,KACAzR,IACAmG,KAGI2J,GAAe,uCAAG,gCAAA5pB,EAAA,kFAGZyrB,EAHY,gCAKRvmB,EAAqBumB,EAArBvmB,SAAUtE,EAAW6qB,EAAX7qB,OAClBwK,QAAQ9I,IAAI1B,EAAOoQ,YACnBoa,EAAkCxqB,GAPlB,kBAQTsE,GARS,oCAWX0T,EAXW,wBAYpBwS,EAAkCrD,GAZd,kBAabnP,EAAkBrM,EAAqBwb,IAb1B,sCAefrT,GAfe,4CAAH,qDAkBfmV,GAAc,uCAAG,WAAOloB,GAAP,yBAAA3B,EAAA,kFAGXyrB,EAHW,+BAKPvmB,EAAqBumB,EAArBvmB,SAAUtE,EAAW6qB,EAAX7qB,OAClBsqB,EAA4BtqB,GANb,kBAORsE,GAPQ,mCAUVvD,IAAWkX,EAVD,kCAWFA,EAAyBlX,GAXvB,aAWb8pB,EAXa,gCAaTvmB,EAAsBumB,EAAtBvmB,SAAUJ,EAAY2mB,EAAZ3mB,QAClBomB,EAA4BpmB,GAdX,kBAeVI,GAfU,sCAkBdwP,GAlBc,4CAAH,sDA6BpB,OACE,eAACgX,GAAD,WACE,cAAC,GAAD,CACE3V,aAAcgS,EACdnB,cAAerS,EAAkBsF,EAAeiR,EAChDxiB,SAAU4U,EACV7U,OAAQ0gB,EACRxU,gBAAiBA,IAEnB,cAAC,GAAD,CACEoX,YAAY,eACZruB,MAAOwrB,EACP5Q,SAzEiB,SAAC5a,GACtBstB,EAAattB,GACT0b,GAAkB5U,GACpBymB,EAAmBvI,sBAAWZ,GAAapkB,GAAO0T,WAAYkM,KAuE5D0E,UAAW1E,EACX2E,SAAUtN,EAAkBsF,EAAeiR,IAE5CvW,EACC,cAAC,GAAD,CAAkBwT,gBAAiBA,IAEnC,cAAC,GAAD,CAAgBe,UAAWA,EAAWf,gBAAiBA,KAEvD5mB,GAAW,cAAC,GAAD,CAAsBshB,QAASxQ,IAC5C,cAAC,GAAD,CACEwT,UAAWtkB,GAAW4mB,EAAgB9iB,SACtCwd,QAjG0B,YAC7BlO,EAAkB+W,GAAiBN,IAA4B,IAiG5DtE,YAAanS,EAAe,qBAE5BA,GACA,cAAC,GAAD,CACEwT,gBAAiBA,EACjBjE,KAAMiH,EACNhH,QAAS,kBAAMiH,GAA2B,IAC1C1B,UArGqB,WAC3B0B,GAA2B,GAI3B/f,YAAW,kBAAMqgB,IAAe,KAAO,QAmGpC/W,EACC,cAAC,GAAD,CACEuO,OAAQ,kBAAMrO,EAAmBqB,EAAeiS,IAChD1B,iBAAkB,wDAA0B,8BAAIyC,EAAJ,IAAgBC,KAA1C,OAClBjF,KAAMuH,GACNtH,QAASyH,KAGX,cAAC,GAAD,CACE1H,KAAMuH,GACNlnB,QAAS,kBAAMsQ,EAAmBqB,EAAeiS,IACjD4B,sBAAuB,0DAA4B,8BAAIb,EAAJ,IAAgBC,KAA5C,OACvBhF,QAASyH,GACT5B,gBAAiBA,GACjBE,yBAzDyB,SAAC9D,GAAD,OAC/B,cAAC,GAAD,CAAmBA,eAAgBA,EAAgB3d,OAAQ0gB,EAAoBnoB,OAAQgM,uBAAYue,EAAgCjO,MAyD7H2M,eAAgBA,GAChBE,wBAvDwB,SAAC/D,GAAD,OAC9B,cAAC,GAAD,CAAmBA,eAAgBA,EAAgB3d,OAAQgV,EAAmBzc,OAAQgM,uBAAYqe,EAA0B7N,YA6D1HsO,GAA2BvtB,IAAOK,IAAV,gGAAGL,CAAH,QACxB,kG,SC7KOytB,GAAkC,SAAC,GAAsE,IAApElsB,EAAmE,EAAnEA,KAAamsB,EAAsD,EAA7DvuB,MAAoBwuB,EAAyC,EAAzCA,MAAO7uB,EAAkC,EAAlCA,SAAU+H,EAAwB,EAAxBA,KAAM+mB,EAAkB,EAAlBA,YACjG,EAAoC7uB,mBAAiB6uB,EAAcA,EAAYF,GAAf,UAAiCA,IAAjG,mBAAOG,EAAP,KAAmBC,EAAnB,KAUA,OARAC,qBAAU,CACRC,IAAKN,EACL7mB,KAAM,CAAEmnB,IAAKnnB,GAAQ,GACrBkT,SAAU,YAAgB,IAAb5a,EAAY,EAAZA,MACX2uB,EAAcF,EAAcA,EAAYzuB,EAAM6uB,KAArB,UAA+B7uB,EAAM6uB,SAKhE,eAACC,GAAD,WACE,cAACC,GAAD,UAAsB3sB,IACtB,cAAC4sB,GAAD,UACE,eAACC,GAAD,WACE,cAAC,YAASvtB,KAAV,UACGgtB,IAEF,IACD,eAACQ,GAAD,WACGV,EACA7uB,cAQPmvB,GAA0BjuB,IAAOK,IAAV,0FAAGL,CAAH,YACvB,gBACA,ySAGAkuB,GAAsBluB,IAAOa,KAAV,sFAAGb,CAAH,YACrBQ,EACE,0DAGA2tB,GAA+BnuB,IAAOK,IAAV,+FAAGL,CAAH,QAC5B,sCAGAouB,GAAsBpuB,IAAOa,KAAV,sFAAGb,CAAH,QACrBQ,GAGE6tB,GAAsBruB,IAAOa,KAAV,sFAAGb,CAAH,QACrBS,GC/CS6tB,GAA8B,SAAC,GAA+E,IAA7ErF,EAA4E,EAA5EA,WAAY1nB,EAAgE,EAAhEA,KAAMosB,EAA0D,EAA1DA,MAAOY,EAAmD,EAAnDA,MAAcb,EAAqC,EAA5CvuB,MAAoB0H,EAAwB,EAAxBA,KAAM+mB,EAAkB,EAAlBA,YACtG,EAAoC7uB,mBAAiB6uB,EAAYF,IAAjE,mBAAOG,EAAP,KAAmBC,EAAnB,KAUA,OARAC,qBAAU,CACRC,IAAKN,EACL7mB,KAAM,CAAEmnB,IAAKnnB,GAAQ,GACrBkT,SAAU,YAAgB,IAAb5a,EAAY,EAAZA,MACX2uB,EAAcF,EAAYzuB,EAAM6uB,SAKlC,eAACQ,GAAD,WACE,cAACC,GAAD,CAAYlvB,UAAW0pB,EAAvB,SACG1nB,IAEH,cAACmtB,GAAD,UACE,eAACC,GAAD,WACE,cAAC,YAAS9tB,KAAV,UAAgBgtB,IACfU,EACD,cAACK,GAAD,UAAcjB,aAOlBa,GAAkBxuB,IAAOK,IAAV,8EAAGL,CAAH,YACf,iCACA,uHAGAyuB,GAAazuB,IAAOa,KAAV,yEAAGb,CAAH,gBACZQ,EACE,yDACA,+GAGAkuB,GAAuB1uB,IAAOK,IAAV,mFAAGL,CAAH,YACpB,iBACA,yVAGA2uB,GAAc3uB,IAAOa,KAAV,0EAAGb,CAAH,YACX,iFACFQ,GAGEouB,GAAc5uB,IAAOa,KAAV,0EAAGb,CAAH,QACbS,GC/CSouB,GAAU,WACrB,MAIIjY,qBAAW0K,IAJf,IACEC,UAAanB,EADf,EACeA,IAAKC,EADpB,EACoBA,kBAAmBC,EADvC,EACuCA,cACvBU,EAFhB,EAEES,WAAcT,aACC3E,EAHjB,EAGEmF,YAAenF,SAEjB,EAKIzF,qBAAWhB,IAJbE,mBAC6BoJ,EAF/B,EAEIlJ,gBAAmB9L,OACQ8U,EAH/B,EAGIjJ,iBAAoBtJ,MAIlBqiB,EAAqBpa,uBACzB,iBAAM,CACJ,CACE+U,MAAO,MACPC,KAAM1I,EAAe,E3D4C3B,0Q2D5CqD7iB,EAAqB,CAAEC,KAAMukB,GAAYtG,EAAW7e,EAAY,UAEjH,CACEisB,MAAO,oBACPC,KAAMrrB,EAA0B,CAAED,KAAMukB,GAAYtG,EAAW7e,EAAY,OAAQc,WAAYqkB,GAAYtC,EAAmB,UAEhI,CACEoJ,MAAO,kBACPC,K3D6CN,2G2D1CE,CAAC1I,IAGH,OACE,eAAC+N,GAAD,WACE,eAAC,GAAD,uBACW,cAAC,GAAD,CAAS9F,WAAW,yCAAyCC,gBAAgB,mBAAmBF,SAAU8F,SAErH,eAACE,GAAD,WACE,cAAC,GAAD,CACE/F,WAAW,UACX1nB,KAAK,MACLpC,MAAOmT,KAAKoK,IAAI0D,EAAK,KACrBuN,MAAM,IACNC,YAAa,SAACI,GAAD,OAASrL,GAAYqL,EAAK,SAASiB,MAAM,EAAGjB,EAAM,KAAO,GAAK,MAE7E,cAAC,GAAD,CACEzsB,KAAK,oBACLpC,MAAOkhB,EACPsN,MAAM,IACNC,YAAa,SAACI,GAAD,OAASrL,GAAYqL,EAAK,UAEzC,cAAC,GAAD,CACEzsB,KAAK,kBACLpC,MAAOmhB,EACPiO,MAAM,IACNZ,MAAOzO,EACP0O,YAAa,SAACI,GAAD,OAASrL,GAAYqL,EAAK,gBAG3C,cAACkB,GAAD,UACE,cAAC,GAAD,CACE3tB,KAAK,eACLpC,MAAO6hB,EAAehC,EACtB2O,MAAM,MACNC,YAAa,SAACI,GAAD,OAASrL,GAAYqL,EAAK,mBAO3Ce,GAAmB/uB,IAAOK,IAAV,gFAAGL,CAAH,QAChB,oMAGAgvB,GAAiBhvB,IAAOK,IAAV,8EAAGL,CAAH,QACd,+GAGAmvB,GAASnvB,IAAOovB,GAAV,sEAAGpvB,CAAH,YACRQ,EACE,2LAGA0uB,GAAuBlvB,IAAOK,IAAV,oFAAGL,CAAH,YACpB,mBACA,iDC7FOqvB,GAAc,WACzB,MAAiEzY,qBAAW0K,IAApEE,YAAenF,EAAvB,EAAuBA,SAAUS,EAAjC,EAAiCA,aAAcC,EAA/C,EAA+CA,aAEE7S,EAAe0M,qBAAWhB,IAAnEE,mBAAsBE,gBAAmB9L,OAEjD,OACE,eAAC,GAAD,WACE,cAAC,GAAD,2BACA,cAAC,GAAD,UACE,cAAC,GAAD,CACE3I,KAAK,mBACLpC,MAAOkd,EAAW7e,EAClBmwB,MAAM,YACNC,YAAa,SAACI,GAAD,OAASrL,GAAYqL,EAAK,YAG3C,cAAC,GAAD,UACE,cAAC,GAAD,CACEzsB,KAAK,iBACLpC,MAAO2d,EACP6Q,MAAM,MACNC,YAAa,SAACI,GAAD,OAASrL,GAAYqL,EAAK,eAG3C,cAAC,GAAD,UACE,cAAC,GAAD,CACEzsB,KAAK,gBACLpC,MAAO4d,EACP4Q,MAAOzjB,EACP0jB,YAAa,SAACI,GAAD,OAASrL,GAAYqL,EAAK,mBAO3CkB,GAAuBlvB,IAAOK,IAAV,wFAAGL,CAAH,QACpB,uFAGAmvB,GAASnvB,IAAOovB,GAAV,0EAAGpvB,CAAH,gBACRQ,EACE,sIACA,uDAGAytB,GAA0BjuB,IAAOK,IAAV,2FAAGL,CAAH,YACvB,mBACA,qDCrDOsvB,GAAkB,kBAC7B,eAAC,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,QAIEJ,GAAuBlvB,IAAOK,IAAV,wFAAGL,CAAH,YACpB,6FACA,gDCLOuvB,GAAuB,WAClC,MAAiD3Y,qBAAWhB,IAApDQ,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,oBAEzB,OACE,eAAC,GAAD,WACE,cAACjW,EAAD,UACE,cAAC,GAAD,MAEF,eAACA,EAAD,WACE,cAACovB,GAAD,UACE,cAAC,GAAD,CAAY7b,QAASyC,EAAiBwD,OAAQvD,EAAqBwD,QAAS,CAAC,QAAS,eAExF,cAAC,GAAD,WAMF8J,GAAY3jB,IAAOK,IAAV,qFAAGL,CAAH,YACT,2IACA,+CAGAwvB,GAAkBxvB,IAAOK,IAAV,2FAAGL,CAAH,QACf,mBCTOyvB,GAAyB,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAK1CC,EAAOD,EAAW7gB,KAJC,SAAC+gB,GAAD,OACvBH,EAAQ5gB,KAAI,gBAAGghB,EAAH,EAAGA,UAAH,OAAmBrK,OAAOsK,yBAAyBF,EAAQC,GAAaD,EAAOC,GAAa,SAKpGE,EAAoB,SAACC,GACzB,OAAOA,GACL,KAAKlyB,EAAMmyB,OAAQ,MAAO,cAC1B,KAAKnyB,EAAMoyB,KAAM,MAAO,YACxB,KAAKpyB,EAAMqyB,MAAO,MAAO,aACzB,QAAS,MAAO,KAIdC,EAAkB,SAACC,EAAmBC,GAApB,OACP,IAAdD,EAAmB,OAAYA,IAAcC,EAAU,GAAK,SAAW,IAE1E,OACE,eAACC,GAAD,WACE,cAACC,GAAD,UACE,6BACGf,EAAQ5gB,KAAI,WAAwCwhB,GAAxC,IAAG7G,EAAH,EAAGA,MAAO7gB,EAAV,EAAUA,IAAKqnB,EAAf,EAAeA,UAAWS,EAA1B,EAA0BA,WAA1B,OACX,cAACC,GAAD,CAEEpxB,UAAS,UAAKywB,EAAkBC,GAAalyB,EAAMoyB,MAA1C,YAAmDO,EAAnD,YAAiEL,EAAgBC,EAAWZ,EAAQ3rB,SAF/G,SAIG0lB,GAHI7gB,UAQb,cAACgoB,GAAD,UACGhB,EAAK9gB,KAAI,SAAC+hB,EAAKC,GAAN,OACR,qCACE,cAACC,GAAD,UACGF,EAAI/hB,KAAI,SAACkiB,EAAMV,GAAP,OACP,cAACW,GAAD,CAEE1xB,UAAS,UAAKywB,EAAkBN,EAAQY,GAAWL,WAAalyB,EAAMoyB,MAA7D,YAAsEE,EAAgBC,EAAWZ,EAAQ3rB,SAFpH,SAIGitB,GAJH,UACUrB,EAAWmB,GAAWloB,IADhC,YACuC8mB,EAAQY,GAAW1nB,UAH/C+mB,EAAWmB,GAAWloB,KAUpCkoB,IAAclB,EAAK7rB,OAAS,GAAK,cAACmtB,GAAD,gBAQxCV,GAAexwB,IAAOmxB,MAAV,0EAAGnxB,CAAH,mBAEZ,uOAGA+wB,GAAW/wB,IAAOoxB,GAAV,sEAAGpxB,CAAH,QACR,yHAGAywB,GAAYzwB,IAAOqxB,MAAV,uEAAGrxB,CAAH,MAET4wB,GAAY5wB,IAAOsxB,MAAV,uEAAGtxB,CAAH,MAET2wB,GAAa3wB,IAAOuxB,GAAV,wEAAGvxB,CAAH,QACV,gOAGAkxB,GAASlxB,IAAOoxB,GAAV,oEAAGpxB,CAAH,QACN,iBAGAixB,GAAUjxB,IAAOwxB,GAAV,qEAAGxxB,CAAH,YACP,uCACA,oICxFOyxB,GAAmB,WAC9B,MAAkE7a,qBAAW0K,IAAvDP,EAAtB,EAAQU,WAAcV,mBAAsBe,EAA5C,EAA4CA,kBACpCrH,EAAsB7D,qBAAWwD,IAAjCK,kBAGR,EAAwC1b,qBAAxC,mBAAO2yB,EAAP,KAAqBC,EAArB,KACA,EAAkC5yB,oBAAkB,GAApD,mBAAO6yB,EAAP,KAAkBC,EAAlB,KACQlW,EAAwB/E,qBAAW6E,IAAnCE,oBAOFgJ,EAAM,uCAAG,8BAAA9iB,EAAA,0DACT6vB,IAAgBjX,EADP,uBAEHzX,EAAmC0uB,EAAnC1uB,QAAS2d,EAA0B+Q,EAA1B/Q,sBAFN,kBAGJlG,EAAkBzX,EAAS2d,IAHvB,qCAKNpK,GALM,2CAAH,qDAcNmZ,EAAoB,CACxB,CACEjG,MAAO,QACPqG,UAAW,QACXlnB,IAAK,QACL8nB,WAAY,kBAEd,CACEjH,MAAO,UACPqG,UAAW,UACXlnB,IAAK,WAEP,CACE6gB,MAAO,WACPqG,UAAW,WACXlnB,IAAK,YAEP,CACE6gB,MAAO,SACPqG,UAAW,SACXlnB,IAAK,SACLqnB,UAAWlyB,EAAMmyB,SAIfP,EAAa5O,EAChBjS,KAAI,SAACgjB,GAAD,MACF,CACClpB,IAAKkpB,EAAkB5nB,OACvB/G,MAAO,cAAC4uB,GAAD,UAAeD,EAAkB5nB,SACxCoE,QAASqU,GAAYmP,EAAkBxjB,QAAS,QAChD0jB,SAAUrP,GAAYmP,EAAkB7qB,gBAAiB,QACzDgrB,OACE,cAACC,GAAD,CACE5K,SAAUwK,EAAkBnR,sBAAsB7Z,SAClDwd,QAAS,kBArDjBqN,EAqDuCG,QApDvCD,GAAa,IAkDP,SAIE,cAACM,GAAD,6BAMV,OACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAOzC,QAASA,EAASC,WAAYA,IACrC,cAAC,GAAD,CACEhK,KAAMiM,EACNjN,OAAQA,EACRuD,iBAAkB,2DAA6B,qCAAIwJ,QAAJ,IAAIA,OAAJ,EAAIA,EAAczqB,gBAAlB,WAAoCyqB,QAApC,IAAoCA,OAApC,EAAoCA,EAAcxnB,UAA/E,OAClB0b,QAxDU,WACdiM,GAAa,GACb/P,IACAnG,WA2DEgI,GAAY3jB,IAAOK,IAAV,kFAAGL,CAAH,QACT,iBAGAmyB,GAAanyB,IAAOa,KAAV,mFAAGb,CAAH,QACV,+KAGAkyB,GAAelyB,IAAOykB,OAAV,qFAAGzkB,CAAH,gBACZ,sNACA,wNACA,kEAGA+xB,GAAe/xB,IAAOK,IAAV,qFAAGL,CAAH,QACdW,GC3GSyxB,GAAsB,kBACjC,cAAC,GAAD,UACE,eAAChyB,EAAD,WACE,cAAC,GAAD,8BACA,cAAC,GAAD,UAKAymB,GAAQ7mB,YAAOY,GAAV,iFAAGZ,CAAH,QACL,+FAGA2jB,GAAY3jB,IAAOK,IAAV,qFAAGL,CAAH,YACT,sGACA,+CCdO8mB,GAAO,WAElB,OADiBlQ,qBAAWpY,GAApBE,OACQpB,EAAK8B,OAAS,cAAC,GAAD,IAA0B,cAAC,GAAD,M,StDP9C0K,K,eAAAA,E,mBAAAA,E,gBAAAA,E,gBAAAA,E,4BAAAA,E,eAAAA,E,sBAAAA,E,qBAAAA,E,4BAAAA,E,iBAAAA,Q,KuDOL,ICSKuoB,GDTCC,GAAqB,WAChC,IEN0BC,EFM1B,EAAkC3b,qBAAW/C,IAArCC,EAAR,EAAQA,aAAc9Q,EAAtB,EAAsBA,QAEtB,OACE,8BACE,cAAC,GAAD,CAAQshB,QAASxQ,EAAjB,SACE,cAAC/T,EAAD,CAAWyyB,eAAe,MAAMryB,MAAO2J,GAAY2oB,MAAnD,SACGzvB,GEZiBuvB,EFYKvvB,EEbd,SAACuvB,GAAD,gBAAqBA,EAAKtD,MAAM,EAAG,GAAnC,cAA2CsD,EAAKtD,MAAMsD,EAAKxuB,OAAS,IAC1C2uB,CAAW1oB,4BAAkBuoB,KFY9B,iBAOtC/N,GAASxkB,IAAOykB,OAAV,iFAAGzkB,CAAH,gBACN,yNACA,wHACA,8FGdO2yB,GAAgC,SAAC,GAAD,IAAGhf,EAAH,EAAGA,QAASiG,EAAZ,EAAYA,OAAQC,EAApB,EAAoBA,QAApB,OAC3C,cAAC,KAAO+Y,MAAR,UACE,sBAAKrzB,UAAU,oBAAf,UACE,cAACszB,GAAD,CAAatzB,UAAU,OAAvB,SAA+Bsa,EAAQ,KACvC,cAACiZ,GAAD,CAASvzB,UAAWoU,EAAU,aAAe,gBAAiBmG,QAASnG,EAASoG,SAAUH,EAA1F,SACE,sBACEra,UAAS,UACPoU,EAAU,gBAAkB,gBADrB,2GAKb,cAACkf,GAAD,CAAatzB,UAAU,OAAvB,SAA+Bsa,EAAQ,WAKvCgZ,GAAc7yB,YAAO+yB,KAAOhI,OAAjB,4EAAG/qB,CAAH,YACbM,EACE,2CAGAwyB,GAAU9yB,YAAO+yB,MAAV,wEAAG/yB,CAAH,YACP,gRACA,kEC1BOmvB,GAAS,WACpB,MAA6BvY,qBAAWpY,GAAhCE,EAAR,EAAQA,KAAME,EAAd,EAAcA,WACd,OACE,eAAC,GAAD,WACE,cAACo0B,GAAD,UACE,cAACC,GAAD,UAAU,mBAAGvL,KAAK,mCAAR,wBAEZ,cAACwL,GAAD,UACE,cAAC,GAAD,CAAcvf,QAASjV,IAASpB,EAAK8B,OAAQwa,OAAQhb,EAAYib,QAAS,CAAC,cAAe,kBAE5F,cAACsZ,GAAD,UACE,cAAC,GAAD,UAMFxP,GAAY3jB,IAAOK,IAAV,wEAAGL,CAAH,QACT,iRAGAizB,GAAWjzB,IAAOa,KAAV,uEAAGb,CAAH,4CAER,iFACA,mDAGAgzB,GAAgBhzB,IAAOK,IAAV,4EAAGL,CAAH,YACb,8BACA,oDAGAkzB,GAAkBlzB,IAAOK,IAAV,8EAAGL,CAAH,YACf,yMACA,2MAEAmzB,GAAiBnzB,IAAOK,IAAV,6EAAGL,CAAH,YACd,2CACA,+E,oBCzCOoM,GAAS,IAAIgnB,KAAa,CACrCC,IxE+DmC,2DwE9DnCC,MAAO,IAAIC,Q,SJUDlB,K,gBAAAA,E,kBAAAA,E,qBAAAA,Q,KKjBG,WAA0B,uCCA1B,OAA0B,4CCe5BmB,GAA4B,SAAC,GAAsD,IA2BrEC,EA3BiB5Z,EAAmD,EAAnDA,QAAS6Z,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,eAAgB5Z,EAAe,EAAfA,SACxE6Z,EAAgB,SAACC,GAAD,OACpB,mCACGA,EAAK/kB,KAAI,SAACglB,GAAD,OACR,cAAC,KAAQC,OAAT,CAEEx0B,UAAW,gBAAGy0B,EAAH,EAAGA,OAAH,gBACNA,EAAS,eAAiB,YADpB,wFAIX70B,MAAO20B,EANT,SAQG,gBAAGG,EAAH,EAAGA,SAAH,OACC,qCACE,sBAAM10B,UAAS,UAAK00B,EAAW,cAAgB,cAAhC,mBAAf,SAAgFH,IAC/EG,EACC,sBAAM10B,UAAS,kEAAf,SACE,cAAC,GAAD,CAAK4pB,IAAK+K,GAAW7K,IAAI,eAEzB,UAdHyK,SAkCb,OACE,cAAC,KAAD,CAAS30B,MAAOw0B,EAAgB5Z,SAAUA,EAA1C,SACE,eAACoa,GAAD,WACE,eAAC,KAAQ3P,OAAT,CAAgBjlB,UAAU,0MAA1B,UACE,sBAAMA,UAAU,iBAAhB,SAAkCo0B,IAClC,sBAAMp0B,UAAU,wEAAhB,SACE,cAAC,GAAD,CAAK4pB,IAAKiL,GAAW/K,IAAI,oBAG7B,cAAC,KAAD,CAAYnD,GAAIC,WAAUM,MAAM,kCAAkCC,UAAU,cAAcC,QAAQ,YAAlG,SACE,cAAC,KAAQ0N,QAAT,CAAiB90B,UAAU,mKAA3B,SACGm0B,GAvBcD,EAuBcC,EAtBrC,mCACGD,EAAO3kB,KAAI,gBAAGwlB,EAAH,EAAGA,MAAgBT,EAAnB,EAAUha,QAAV,OACV,qCACE,cAAC,KAAQka,OAAT,CAAgBzM,UAAQ,EAAa/nB,UAAU,6CAA6CJ,MAAOm1B,EAAnG,SACE,+BAAOA,KADqBA,GAG7BV,EAAcC,YAgB6BD,EAAc/Z,GAAW,cAQzE0Q,GAAMvqB,IAAOmqB,IAAV,gEAAGnqB,CAAH,QACH,gHAGAm0B,GAAiBn0B,IAAOK,IAAV,2EAAGL,CAAH,QACd,yDCtEOu0B,GAAc,WACzB,MAAuG3d,qBAAWhB,IAA1GC,EAAR,EAAQA,QAASM,EAAjB,EAAiBA,mBAAkD0E,EAAnE,EAAqC/E,mBAAsBnR,OAA0B8R,EAArF,EAAqFA,cAG/Eid,EAQG,CACL,CACEY,MAAO,iBACPza,QAVkBhE,EACnBlS,QAAO,qBAAG8U,SAAwB4Z,GAAamC,YAC/C1lB,KAAI,gBAAGiJ,EAAH,EAAGA,GAAH,OAAYtB,EAAcsB,OAU/B,CACEuc,MAAO,mBACPza,QAXoBhE,EACrBlS,QAAO,qBAAG8U,SAAwB4Z,GAAamC,YAC/C1lB,KAAI,gBAAGiJ,EAAH,EAAGA,GAAH,OAAYtB,EAAcsB,QAcnC,OACE,mCACGlC,EAAQ9R,OAAS,GAChB,eAAC0wB,GAAD,WACE,cAACC,GAAD,UACE,cAAC,GAAD,uBAEF,cAAC,GAAD,CACEhB,UAAWA,EACXC,eAAgBld,EAAcoE,EAAiBA,EAAe9C,GAAKlC,EAAQ,GAAGkC,IAC9EgC,SAhCiB,SAAC4a,GAAD,OAAwBxe,EAAmBwe,YAwClEF,GAAuBz0B,IAAOK,IAAV,wFAAGL,CAAH,YACpB,6CACA,+LAGA00B,GAAU10B,IAAOK,IAAV,2EAAGL,CAAH,QACP,sCAGA+qB,GAAQ/qB,IAAOa,KAAV,yEAAGb,CAAH,YACPQ,EACE,0BC7DS,OAA0B,sCCU5Bo0B,GAA8B,SAAC,GAAD,IAAG3L,EAAH,EAAGA,WAAYV,EAAf,EAAeA,YAAajE,EAA5B,EAA4BA,QAASxlB,EAArC,EAAqCA,SAArC,OACzC,eAAC,GAAD,CAAQS,UAAW0pB,EAAY3E,QAASA,EAAxC,UACGiE,EADH,IACiBzpB,MAIb0lB,GAASxkB,IAAOykB,OAAV,yEAAGzkB,CAAH,gBACRS,EACE,0IACA,yCCVOo0B,GAAa,WACxB,MAAmDje,qBAAWwD,IAAtDC,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,gBAAiB5C,EAAjC,EAAiCA,cAKjC,OACE,mCACG0C,EAAOtW,OAAS,GACf,eAAC+wB,GAAD,WACE,eAAC,GAAD,WACE,cAAC,GAAD,uBACA,cAAC,GAAD,CAAY7L,WAAW,eAAeV,YAAY,OAAOjE,QATrC,kBAAMyQ,UAAUC,UAAUC,UAAUtd,EAAgBA,EAAcI,GAAKsC,EAAO,GAAGtC,KASrG,SACE,cAAC,GAAD,CAAKoR,IAAK+L,GAAM7L,IAAI,cAGvBhP,EAAOtW,OAAS,EACf,cAAC,GAAD,CACE8V,QAASQ,EAAOvL,KAAI,SAACzM,GAAD,OAAWA,EAAM0V,MACrC4b,eAAgBhc,EAAgBA,EAAcI,GAAKsC,EAAO,GAAGtC,GAC7DgC,SAhBc,SAACob,GAAD,OAAqB5a,EAAgB4a,MAmBrD,cAACC,GAAD,UAAiBzd,EAAgBA,EAAcI,GAAKsC,EAAO,GAAGtC,WAQpE+c,GAAsB90B,IAAOK,IAAV,kFAAGL,CAAH,YACnB,wFACA,oJAGA00B,GAAU10B,IAAOK,IAAV,sEAAGL,CAAH,QACP,sCAGA+qB,GAAQ/qB,IAAOa,KAAV,oEAAGb,CAAH,YACPQ,EACE,0BAGA+pB,GAAMvqB,IAAOmqB,IAAV,kEAAGnqB,CAAH,YACH,6BACA,0IAGAo1B,GAAiBp1B,IAAOa,KAAV,6EAAGb,CAAH,gBAChBQ,EACAG,EACE,mHCzDO00B,GAAqB,kBAChC,cAAC,GAAD,UACE,eAACC,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,UAKAA,GAASt1B,IAAOK,IAAV,gFAAGL,CAAH,YACN,oDACA,+GAGA2jB,GAAY3jB,IAAOK,IAAV,mFAAGL,CAAH,YACT,oKACA,+CCaSu1B,OAtBf,WACE,OACE,cAACC,EAAA,EAAD,CAAgBppB,OAAQA,GAAxB,SACE,cAAC,EAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,eAAC,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,oBCTHqpB,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,gCAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.5c1f5356.chunk.js","sourcesContent":["const MS_PER_SEC = 1000\r\n\r\nexport const MIN_IN_SEC = 60\r\nexport const HOUR_IN_SEC = 60 * MIN_IN_SEC\r\nexport const DAY_IN_SEC = 24 * HOUR_IN_SEC\r\nexport const WEEK_IN_SEC = 7 * DAY_IN_SEC\r\nexport const MONTH_IN_SEC = 30 * DAY_IN_SEC\r\nexport const YEAR_IN_SEC = 365 * DAY_IN_SEC\r\n\r\nexport const MIN_IN_MS = MIN_IN_SEC * MS_PER_SEC\r\nexport const HOUR_IN_MS = HOUR_IN_SEC * MS_PER_SEC\r\nexport const DAY_IN_MS = DAY_IN_SEC * MS_PER_SEC\r\nexport const WEEK_IN_MS = WEEK_IN_SEC * MS_PER_SEC\r\nexport const MONTH_IN_MS = MONTH_IN_SEC * MS_PER_SEC\r\nexport const YEAR_IN_MS = YEAR_IN_SEC * MS_PER_SEC\r\n\r\n// polling interval for querying subgraph\r\nexport const POLL_INTERVAL = 5 * MS_PER_SEC\r\n\r\n// pseudo permanent cache time\r\nexport const CONST_CACHE_TIME_MS = YEAR_IN_MS\r\n\r\n// geyser stats cache time\r\nexport const GEYSER_STATS_CACHE_TIME_MS = MIN_IN_MS\r\n\r\nexport const MOCK_ERC_20_ADDRESS = '0xf1e559da04648bb4395831d28d66dfC856781a14'\r\n\r\n// app mode\r\nexport enum Mode {\r\n  VAULTS,\r\n  GEYSERS,\r\n}\r\n\r\n// transaction state\r\nexport enum TxState {\r\n  PENDING,\r\n  SUBMITTED,\r\n  MINED,\r\n  FAILED,\r\n}\r\n\r\nexport const EXTERNAL_LINKS: Record<string, string> = {\r\n  etherscan: 'https://etherscan.io/tx',\r\n}\r\n\r\n// Staking tokens\r\nexport enum StakingToken {\r\n  // for testing\r\n  MOCK,\r\n\r\n  // for mainnet\r\n  UNISWAP_V2,\r\n  SUSHISWAP,\r\n  MOONISWAP_V1,\r\n  BALANCER_V1,\r\n  BALANCER_SMART_POOL_V1,\r\n}\r\n\r\n// Reward tokens\r\nexport enum RewardToken {\r\n  // for testing\r\n  MOCK,\r\n\r\n  // for mainnet\r\n  AMPL,\r\n}\r\n\r\n// subgraph endpoint\r\n// const GEYSER_SUBGRAPH_NAME = 'aalavandhan/amplgeyserv2beta'\r\nexport const GEYSER_SUBGRAPH_ENDPOINT = `http://13.250.45.177:8000/subgraphs/name/meter/geyser-V2`\r\n\r\n// ufragments deploy block number\r\nexport const UFRG_INIT_BLOCK = 7947823\r\n\r\nexport const AMPL_LAUNCH_DATE = 1561687200\r\nexport const INITIAL_SUPPLY = 50000000\r\n\r\n// tooltip messages\r\nexport const GET_APY_STAKE_MSG = () =>\r\n  'APY is estimated for your current deposits till the end of this program. The APY metric does not account for gains or losses from holding liquidity tokens, or gains from liquidity mining rewards distributed by the underlying platform for holding liquidity tokens.'\r\n\r\nexport const GET_APY_NO_STAKE_MSG = ({ days = '1' }) =>\r\n  `APY is estimated for an avg deposit (20,000 USD) over the next ${days} days. The APY metric does not account for gains or losses from holding liquidity tokens, or gains from liquidity mining rewards distributed by the underlying platform for holding liquidity tokens.`\r\n\r\nexport const GET_REWARD_MULTIPLIER_MSG = ({ days = '1', multiplier = '1.0' }) =>\r\n  `Deposit liquidity tokens for ${days} days to achieve a ${multiplier}x reward multiplier.`\r\n\r\nexport const GET_CURRENT_REWARDS_MSG = () =>\r\n  'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share.'\r\n\r\nexport const GET_ESTIMATED_REWARDS_MSG = () =>\r\n  'Estimated rewards assume you have achieved the maximum reward multiplier.'\r\n\r\n// alignment\r\nexport enum Align {\r\n  LEFT,\r\n  RIGHT,\r\n  CENTER,\r\n}\r\n\r\n// Alchemy\r\nexport const ALCHEMY_PROJECT_ID = 'geo5oyrZyF7LWPaAt7eoLzxHg76ljgsO'\r\n\r\n// Infura\r\nexport const INFURA_PROJECT_ID = 'dee1a87a734042fcabc2fd116a7b776d'\r\n\r\n// Enable withdrawing whole unlocked balance of staking tokens when unstaking\r\nexport const WITHDRAW_UNLOCKED_STAKING_TOKENS_WHEN_UNSTAKING = false\r\n\r\n// Enable withdrawing whole unlocked balance of reward tokens when unstaking\r\nexport const WITHDRAW_UNLOCKED_REWARD_TOKENS_WHEN_UNSTAKING = false\r\n","import { createContext, useState } from 'react'\r\nimport { Mode } from '../constants'\r\n\r\nexport const AppContext = createContext<{\r\n  mode: Mode\r\n  toggleMode: () => void\r\n}>({\r\n  mode: Mode.GEYSERS,\r\n  toggleMode: () => {},\r\n})\r\n\r\nexport const AppContextProvider: React.FC = ({ children }) => {\r\n  const [appMode, setAppMode] = useState<Mode>(Mode.GEYSERS)\r\n\r\n  const toggleMode = () => setAppMode(appMode === Mode.GEYSERS ? Mode.VAULTS : Mode.GEYSERS)\r\n\r\n  return <AppContext.Provider value={{ mode: appMode, toggleMode }}>{children}</AppContext.Provider>\r\n}\r\n","// put in a component instead of its own asset file, because we need tailwind classes\r\nexport const Spinner = () => (\r\n  <svg fill=\"none\" className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" viewBox=\"0 0 24 24\">\r\n    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\r\n    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\r\n  </svg>\r\n)\r\n","import styled, { css } from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\nimport { Button } from 'components/Button'\r\n\r\nexport const Paragraph = styled.p`\r\n  color: ${(props) => props.color};\r\n  ${tw`text-base font-bold m-auto`}\r\n`\r\n\r\nexport const Overlay = styled.div`\r\n  ${tw`shadow-all w-full rounded-lg my-2`}\r\n  ${tw`sm:my-4`}\r\n`\r\n\r\nexport const ResponsiveHeader = css`\r\n  ${tw`text-base sm:text-lg`}\r\n`\r\n\r\nexport const ResponsiveText = css`\r\n  ${tw`text-sm sm:text-base`}\r\n`\r\n\r\nexport const ResponsiveSubText = css`\r\n  ${tw`text-xs sm:text-xs`}\r\n`\r\n\r\nexport const Centered = styled.div`\r\n  ${tw`h-full w-full m-auto self-center`}\r\n`\r\n\r\nexport const Ellipsis = css`\r\n  ${tw`overflow-ellipsis overflow-hidden`}\r\n`\r\n\r\n// typography\r\n\r\nexport const CardLabel = styled.span`\r\n  ${tw`flex capitalize text-gray font-light`}\r\n`\r\n\r\nexport const CardValue = styled.span`\r\n  ${tw`flex flex-wrap text-xl whitespace-pre-wrap`}\r\n`\r\n\r\nexport const ModalButton = styled(Button)`\r\n  width: 40%;\r\n  ${tw`inline-flex items-center justify-center px-4 py-2 text-sm font-medium border rounded-md`}\r\n  ${tw`focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2`}\r\n`\r\n","import { Spinner } from './Spinner'\r\n\r\ninterface Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  isLoading?: boolean\r\n}\r\n\r\nexport const Button: React.FC<Props> = (props) => {\r\n  const { isLoading, children } = props\r\n  return (\r\n    <button type=\"button\" {...props}>\r\n      {isLoading && <Spinner />}\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n","export const ERC20_ABI = [\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Approval',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'from',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Transfer',\r\n    type: 'event',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'allowance',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'approve',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'account',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'balanceOf',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'totalSupply',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'recipient',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'transfer',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'sender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'recipient',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'transferFrom',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'decimals',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint8',\r\n        name: '',\r\n        type: 'uint8',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'name',\r\n    outputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'symbol',\r\n    outputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n]\r\n","import { TypedDataField } from '@ethersproject/abstract-signer'\r\nimport { BigNumberish, Contract, providers, Signer, Wallet } from 'ethers'\r\nimport { LogDescription, splitSignature } from 'ethers/lib/utils'\r\nimport mainnetConfig from './deployments/mainnet/factories-latest.json'\r\nimport goerliConfig from './deployments/goerli/factories-latest.json'\r\nimport localhostConfig from './deployments/localhost/factories-latest.json'\r\nimport { TransactionReceipt } from '@ethersproject/providers'\r\n\r\nexport const loadNetworkConfig = async (signerOrProvider: Signer | providers.Provider) => {\r\n  const network = await (Signer.isSigner(signerOrProvider)\r\n    ? signerOrProvider.provider?.getNetwork()\r\n    : signerOrProvider.getNetwork())\r\n\r\n      return localhostConfig\r\n    \r\n  \r\n}\r\n\r\nexport const isPermitable = async (tokenAddress: string) => {\r\n  // todo: implement permit token querying\r\n  return true\r\n}\r\n\r\nexport const signPermission = async (\r\n  method: string,\r\n  vault: Contract,\r\n  owner: Wallet,\r\n  delegateAddress: string,\r\n  tokenAddress: string,\r\n  amount: BigNumberish,\r\n  vaultNonce?: BigNumberish,\r\n  chainId?: BigNumberish,\r\n) => {\r\n  // get nonce\r\n  vaultNonce = vaultNonce || (await vault.getNonce())\r\n  // get chainId\r\n  chainId = chainId || (await vault.provider.getNetwork()).chainId\r\n  // craft permission\r\n  const domain = {\r\n    name: 'UniversalVault',\r\n    version: '1.0.0',\r\n    chainId,\r\n    verifyingContract: vault.address,\r\n  }\r\n  const types = {} as Record<string, TypedDataField[]>\r\n  types[method] = [\r\n    { name: 'delegate', type: 'address' },\r\n    { name: 'token', type: 'address' },\r\n    { name: 'amount', type: 'uint256' },\r\n    { name: 'nonce', type: 'uint256' },\r\n  ]\r\n  const value = {\r\n    delegate: delegateAddress,\r\n    token: tokenAddress,\r\n    amount: amount,\r\n    nonce: vaultNonce,\r\n  }\r\n  // sign permission\r\n  // todo: add fallback if wallet does not support eip 712 rpc\r\n  const signedPermission = await owner._signTypedData(domain, types, value)\r\n  // return\r\n  return signedPermission\r\n}\r\n\r\nexport const signPermitEIP2612 = async (\r\n  owner: Wallet,\r\n  token: Contract,\r\n  spenderAddress: string,\r\n  value: BigNumberish,\r\n  deadline: BigNumberish,\r\n  nonce?: BigNumberish,\r\n) => {\r\n  // get nonce\r\n  nonce = nonce || (await token.nonces(owner.address))\r\n  // get domain\r\n  const domainSeparator = await token.DOMAIN_SEPARATOR()\r\n  // get types\r\n  const types = {} as Record<string, TypedDataField[]>\r\n  types['Permit'] = [\r\n    { name: 'owner', type: 'address' },\r\n    { name: 'spender', type: 'address' },\r\n    { name: 'value', type: 'uint256' },\r\n    { name: 'nonce', type: 'uint256' },\r\n    { name: 'deadline', type: 'uint256' },\r\n  ]\r\n  // get values\r\n  const values = {\r\n    owner: owner.address,\r\n    spender: spenderAddress,\r\n    value: value,\r\n    nonce: nonce,\r\n    deadline: deadline,\r\n  }\r\n  // sign permission\r\n  // todo: add fallback if wallet does not support eip 712 rpc\r\n  const signedPermission = await owner._signTypedData(domainSeparator, types, values)\r\n  // split signature\r\n  const sig = splitSignature(signedPermission)\r\n  // return\r\n  return [values.owner, values.spender, values.value, values.deadline, sig.v, sig.r, sig.s]\r\n}\r\n\r\n// utility function to parse an event from a transaction receipt\r\n// useful when we need to get data from a specific transaction (e.g. getting the actual rewards claimed from unstake)\r\nexport const parseEventFromReceipt = (\r\n  receipt: TransactionReceipt,\r\n  contract: Contract,\r\n  event: string,\r\n): LogDescription | null => {\r\n  const filter = contract.filters[event]\r\n  if (!filter) return null\r\n  const eventFilter = filter()\r\n  if (!eventFilter || !eventFilter.topics || eventFilter.topics.length === 0) return null\r\n  const topicHash = eventFilter.topics[0]\r\n  const filteredLogs = receipt.logs.filter((log) => log.topics[0] === topicHash)\r\n  if (filteredLogs.length > 0) {\r\n    return contract.interface.parseLog(filteredLogs[0])\r\n  }\r\n  return null\r\n}","import { BigNumber, BigNumberish, Contract, providers, Signer } from 'ethers'\r\nimport { TransactionReceipt } from '@ethersproject/providers'\r\nimport { loadNetworkConfig, parseEventFromReceipt } from './utils'\r\n\r\nasync function _execGeyserFunction<T>(\r\n  geyserAddress: string,\r\n  signerOrProvider: Signer | providers.Provider,\r\n  fnc: string,\r\n  args: any[] = [],\r\n): Promise<T> {\r\n  const config = await loadNetworkConfig(signerOrProvider)\r\n  const geyser = new Contract(geyserAddress, config.GeyserTemplate.abi, signerOrProvider)\r\n  return geyser[fnc](...args) as Promise<T>\r\n}\r\n\r\nasync function _execVaultFunction<T>(\r\n  vaultAddress: string,\r\n  signerOrProvider: Signer | providers.Provider,\r\n  fnc: string,\r\n  args: any[] = [],\r\n): Promise<T> {\r\n  const config = await loadNetworkConfig(signerOrProvider)\r\n  const vault = new Contract(vaultAddress, config.VaultTemplate.abi, signerOrProvider)\r\n  return vault[fnc](...args) as Promise<T>\r\n}\r\n\r\nexport const getCurrentVaultReward = async (\r\n  vaultAddress: string,\r\n  geyserAddress: string,\r\n  signerOrProvider: Signer | providers.Provider,\r\n) => {\r\n  return _execGeyserFunction<BigNumber>(geyserAddress, signerOrProvider, 'getCurrentVaultReward', [vaultAddress])\r\n}\r\n\r\nexport const getFutureVaultReward = async (\r\n  vaultAddress: string,\r\n  geyserAddress: string,\r\n  timestamp: number,\r\n  signerOrProvider: Signer | providers.Provider,\r\n) => {\r\n  return _execGeyserFunction<BigNumber>(geyserAddress, signerOrProvider, 'getFutureVaultReward', [\r\n    vaultAddress,\r\n    timestamp,\r\n  ])\r\n}\r\n\r\nexport const getCurrentUnlockedRewards = async (\r\n  geyserAddress: string,\r\n  signerOrProvider: Signer | providers.Provider,\r\n) => {\r\n  return _execGeyserFunction<BigNumber>(geyserAddress, signerOrProvider, 'getCurrentUnlockedRewards')\r\n}\r\n\r\nexport const getFutureUnlockedRewards = async (\r\n  geyserAddress: string,\r\n  timestamp: number,\r\n  signerOrProvider: Signer | providers.Provider,\r\n) => {\r\n  return _execGeyserFunction<BigNumber>(geyserAddress, signerOrProvider, 'getFutureUnlockedRewards', [timestamp])\r\n}\r\n\r\nexport const getCurrentStakeReward = async (\r\n  vaultAddress: string,\r\n  geyserAddress: string,\r\n  amount: BigNumberish,\r\n  signerOrProvider: Signer | providers.Provider,\r\n) => {\r\n  return _execGeyserFunction<BigNumber>(geyserAddress, signerOrProvider, 'getCurrentStakeReward', [\r\n    vaultAddress,\r\n    amount,\r\n  ])\r\n}\r\n\r\nexport const getBalanceLocked = async (\r\n  vaultAddress: string,\r\n  tokenAddress: string,\r\n  signerOrProvider: Signer | providers.Provider,\r\n) => {\r\n  return _execVaultFunction<BigNumber>(vaultAddress, signerOrProvider, 'getBalanceLocked', [tokenAddress])\r\n}\r\n\r\nexport const getClaimedRewardsFromUnstake = async (\r\n  receipt: TransactionReceipt,\r\n  geyserAddress: string,\r\n  signerOrProvider: Signer | providers.Provider,\r\n) => {\r\n  const config = await loadNetworkConfig(signerOrProvider)\r\n  const geyser = new Contract(geyserAddress, config.GeyserTemplate.abi, signerOrProvider)\r\n  const eventLog = parseEventFromReceipt(receipt, geyser, 'RewardClaimed')\r\n  if (!eventLog) return null\r\n  return eventLog.args\r\n}\r\n","import { BigNumber, Contract, providers, Signer } from 'ethers'\r\nimport { ERC20_ABI } from './abis'\r\n\r\nfunction _execTokenFunction<T>(\r\n  tokenAddress: string,\r\n  signerOrProvider: Signer | providers.Provider,\r\n  fnc: string,\r\n  args: any[] = [],\r\n): Promise<T> {\r\n \r\n  const token = new Contract(tokenAddress, ERC20_ABI, signerOrProvider)\r\n  return token[fnc](...args) as Promise<T>\r\n}\r\n\r\nexport const ERC20Decimals = async (tokenAddress: string, signerOrProvider: Signer | providers.Provider) => {\r\n  return _execTokenFunction<number>(tokenAddress, signerOrProvider, 'decimals')\r\n}\r\n\r\nexport const ERC20Name = async (tokenAddress: string, signerOrProvider: Signer | providers.Provider) => {\r\n  return _execTokenFunction<string>(tokenAddress, signerOrProvider, 'name')\r\n}\r\n\r\nexport const ERC20Symbol = async (tokenAddress: string, signerOrProvider: Signer | providers.Provider) => {\r\n  return _execTokenFunction<string>(tokenAddress, signerOrProvider, 'symbol')\r\n}\r\n\r\nexport const ERC20Balance = async (\r\n  tokenAddress: string,\r\n  holderAddress: string,\r\n  signerOrProvider: Signer | providers.Provider,\r\n) => {\r\n  return _execTokenFunction<BigNumber>(tokenAddress, signerOrProvider, 'balanceOf', [holderAddress])\r\n}\r\n","import { TransactionResponse, TransactionReceipt } from '@ethersproject/providers'\r\nimport { BigNumber, BigNumberish, Contract, Signer, Wallet } from 'ethers'\r\nimport { randomBytes } from 'ethers/lib/utils'\r\nimport { ERC20_ABI } from './abis'\r\nimport { getBalanceLocked, getClaimedRewardsFromUnstake } from './stats'\r\nimport { ERC20Balance } from './tokens'\r\nimport { isPermitable, loadNetworkConfig, signPermission, signPermitEIP2612 } from './utils'\r\nimport { toChecksumAddress } from 'web3-utils'\r\n\r\n// End to end user flow\r\n// 1) Create vault: `create()`\r\n// 2) Depost staking tokens to vault: `deposit()`\r\n// 3) Stake to geyser: `stake()`\r\n// 4) Unstake from geyser: `unstake()`\r\n// 5) Withdraw from vault: `withdraw()`\r\n\r\n// Note\r\n// - actions 1-3 can be combined into two transactions using `approveCreateDepositStake()`\r\n// - actions 1-3 can be combined into single transaction using `permitCreateDepositStake()` function for permit enabled tokens\r\n// - actions 2-3 can be combined into single transaction using `permitDepositStake()` function for permit enabled tokens\r\n\r\n/// Core Actions ///\r\n\r\nexport const create = async (signer: Signer) => {\r\n  const config = await loadNetworkConfig(signer)\r\n\r\n  const vaultFactory = new Contract(config.VaultFactory.address, config.VaultFactory.abi, signer)\r\n\r\n  const vaultAddress = await vaultFactory.callStatic['create()']()\r\n\r\n  await vaultFactory['create()']()\r\n\r\n  const vault = new Contract(vaultAddress, config.VaultTemplate.abi, signer)\r\n\r\n  return vault\r\n}\r\n\r\nexport const deposit = async (vaultAddress: string, tokenAddress: string, amount: BigNumberish, signer: Signer) => {\r\n  const token = new Contract(tokenAddress, ERC20_ABI, signer)\r\n\r\n  return token.transfer(vaultAddress, amount) as Promise<TransactionResponse>\r\n}\r\n\r\nexport const stake = async (geyserAddress: string, vaultAddress: string, amount: BigNumberish, signer: Wallet) => {\r\n  const config = await loadNetworkConfig(signer)\r\n\r\n  const geyser = new Contract(geyserAddress, config.GeyserTemplate.abi, signer)\r\n  const vault = new Contract(vaultAddress, config.VaultTemplate.abi, signer)\r\n\r\n  const tokenAddress = (await geyser.getGeyserData()).stakingToken\r\n\r\n  const permission = signPermission('Lock', vault, signer, geyser.address, tokenAddress, amount)\r\n\r\n  return geyser.stake(vault.address, amount, permission) as Promise<TransactionResponse>\r\n}\r\n\r\nexport const unstake = async (geyserAddress: string, vaultAddress: string, amount: BigNumberish, signer: Wallet) => {\r\n  const config = await loadNetworkConfig(signer)\r\n\r\n  const geyser = new Contract(geyserAddress, config.GeyserTemplate.abi, signer)\r\n  const vault = new Contract(vaultAddress, config.VaultTemplate.abi, signer)\r\n\r\n  const tokenAddress = (await geyser.getGeyserData()).stakingToken\r\n\r\n  const permission = signPermission('Unlock', vault, signer, geyser.address, tokenAddress, amount)\r\n\r\n  return geyser.unstakeAndClaim(vault.address, amount, permission) as Promise<TransactionResponse>\r\n}\r\n\r\nexport const withdraw = async (\r\n  vaultAddress: string,\r\n  tokenAddress: string,\r\n  recipientAddress: string,\r\n  amount: BigNumberish,\r\n  signer: Signer,\r\n) => {\r\n  const config = await loadNetworkConfig(signer)\r\n\r\n  const vault = new Contract(vaultAddress, config.VaultTemplate.abi, signer)\r\n  const token = new Contract(tokenAddress, ERC20_ABI, signer)\r\n\r\n  return vault.transferERC20(token.address, recipientAddress, amount) as Promise<TransactionResponse>\r\n}\r\n\r\n// The transaction receipt must be the receipt from unstaking\r\nexport const withdrawRewards = async (\r\n  geyserAddress: string,\r\n  recipientAddress: string,\r\n  receipt: TransactionReceipt,\r\n  signer: Signer,\r\n) => {\r\n  const claimedRewards = await getClaimedRewardsFromUnstake(receipt, geyserAddress, signer)\r\n  if (!claimedRewards) return null\r\n  const { vault, token, amount } = claimedRewards\r\n  const rewards = BigNumber.from(amount)\r\n  if (rewards.isZero()) return null\r\n  return {\r\n    response: await withdraw(vault, token, recipientAddress, rewards, signer),\r\n    rewards,\r\n  }\r\n}\r\n\r\nexport const withdrawUnlocked = async (\r\n  vaultAddress: string,\r\n  tokenAddress: string,\r\n  recipientAddress: string,\r\n  signer: Signer,\r\n) => {\r\n  const unlockedBalance = (await ERC20Balance(tokenAddress, vaultAddress, signer)).sub(\r\n    await getBalanceLocked(vaultAddress, tokenAddress, signer),\r\n  )\r\n\r\n  if (unlockedBalance.isZero()) return null\r\n  return {\r\n    response: await withdraw(vaultAddress, tokenAddress, recipientAddress, unlockedBalance, signer),\r\n    amount: unlockedBalance,\r\n  }\r\n}\r\n\r\n/// Combined Actions ///\r\n\r\nexport const approveCreateDepositStake = async (geyserAddress: string, amount: BigNumberish, signer: Wallet) => {\r\n  const config = await loadNetworkConfig(signer)\r\n\r\n  const geyser = new Contract(geyserAddress, config.GeyserTemplate.abi, signer)\r\n  const router = new Contract(config.RouterV1.address, config.RouterV1.abi, signer)\r\n\r\n  const tokenAddress = (await geyser.getGeyserData()).stakingToken\r\n  const token = new Contract(tokenAddress, ERC20_ABI, signer)\r\n  \r\n\r\n  const salt = randomBytes(32)\r\n  const vaultAddress = await router.callStatic.create2Vault(config.VaultFactory.address, salt)\r\n  const vault = new Contract(vaultAddress, config.VaultTemplate.abi, signer)\r\n  const lockPermission = await signPermission('Lock', vault, signer, geyserAddress, token.address, amount, '0')\r\n  const args = [geyserAddress, config.VaultFactory.address, await signer.getAddress(), amount, salt, lockPermission]\r\n\r\n  const allowance = await token.allowance(signer.getAddress(), router.address)\r\n  if (allowance.lt(amount)) {\r\n    await (await token.approve(router.address, amount)).wait()\r\n  }\r\n  return router.create2VaultAndStake(...args) as Promise<TransactionResponse>\r\n}\r\n\r\nexport const approveDepositStake = async (\r\n  geyserAddress: string,\r\n  vaultAddress: string,\r\n  amountToStake: BigNumberish,\r\n  signer: Wallet,\r\n) => {\r\n  const config = await loadNetworkConfig(signer)\r\n  const geyser = new Contract(geyserAddress, config.GeyserTemplate.abi, signer)\r\n  const tokenAddress = (await geyser.getGeyserData()).stakingToken\r\n  const token = new Contract(tokenAddress, ERC20_ABI, signer)\r\n  const vault = new Contract(vaultAddress, config.VaultTemplate.abi, signer)\r\n\r\n  // calculate stakable balance in the vault\r\n  let stakableAmountInVault = (await token.balanceOf(vault.address)).sub(await vault.getBalanceDelegated(token.address, geyser.address))\r\n\r\n  // The remaining amount gets transferred from the user's wallet to the vault\r\n  const remainingAmountToTransfer = BigNumber.from(amountToStake).sub(stakableAmountInVault)\r\n  if(remainingAmountToTransfer.gt(0)){\r\n    await (await token.transfer(vault.address, remainingAmountToTransfer)).wait()\r\n  }\r\n\r\n  const lockPermission = await signPermission('Lock', vault, signer, geyserAddress, token.address, amountToStake)\r\n  const args = [vaultAddress, amountToStake, lockPermission]\r\n\r\n  const r = geyser.stake(...args)\r\n  await (await r).wait()\r\n  return r as Promise<TransactionResponse>\r\n}\r\n\r\nexport const permitCreateDepositStake = async (geyserAddress: string, amount: BigNumberish, signer: Wallet) => {\r\n  const config = await loadNetworkConfig(signer)\r\n\r\n  const geyser = new Contract(geyserAddress, config.GeyserTemplate.abi, signer)\r\n  const router = new Contract(config.RouterV1.address, config.RouterV1.abi, signer)\r\n\r\n  const tokenAddress = (await geyser.getGeyserData()).stakingToken\r\n  const deadline = (await signer.provider.getBlock('latest')).timestamp + 60 * 60 * 24\r\n\r\n  if (!isPermitable(tokenAddress)) {\r\n    throw new Error('Staking token not recognized as having EIP2612 permit() interface')\r\n  }\r\n\r\n  const salt = randomBytes(32)\r\n  const vaultAddress = await router.callStatic.create2Vault(config.VaultFactory.address, salt)\r\n  const vault = new Contract(vaultAddress, config.VaultTemplate.address, signer)\r\n\r\n  const permit = await signPermitEIP2612(signer, tokenAddress, router.address, amount, deadline)\r\n\r\n  const lockPermission = await signPermission('Lock', vault, signer, geyserAddress, tokenAddress, amount, 0)\r\n\r\n  const args = [geyserAddress, config.VaultFactory.address, await signer.getAddress(), salt, permit, lockPermission]\r\n\r\n  return router.create2VaultPermitAndStake(...args) as Promise<TransactionResponse>\r\n}\r\n\r\n// TODO: handle unlocked amounts in the vault, like in approveDepositStake\r\nexport const permitDepositStake = async (\r\n  geyserAddress: string,\r\n  vaultAddress: string,\r\n  amount: BigNumberish,\r\n  signer: Wallet,\r\n) => {\r\n  const config = await loadNetworkConfig(signer)\r\n\r\n  const geyser = new Contract(geyserAddress, config.GeyserTemplate.abi, signer)\r\n  const router = new Contract(config.RouterV1.address, config.RouterV1.abi, signer)\r\n\r\n  const tokenAddress = (await geyser.getGeyserData()).stakingToken\r\n  const deadline = (await signer.provider.getBlock('latest')).timestamp + 60 * 60 * 24\r\n\r\n  if (!isPermitable(tokenAddress)) {\r\n    throw new Error('Staking token not recognized as having EIP2612 permit() interface')\r\n  }\r\n\r\n  const vault = new Contract(vaultAddress, config.VaultTemplate.address, signer)\r\n\r\n  const permit = await signPermitEIP2612(signer, tokenAddress, router.address, amount, deadline)\r\n\r\n  const lockPermission = await signPermission('Lock', vault, signer, geyserAddress, tokenAddress, amount)\r\n\r\n  return router.permitAndStake(geyser.address, vault.address, permit, lockPermission) as Promise<TransactionResponse>\r\n}","export const set = (key: string, value: any, ttl: number) => {\r\n  const data = { value, expiresAt: new Date().getTime() + ttl }\r\n  localStorage.setItem(key, JSON.stringify(data))\r\n}\r\n\r\nexport const get = (key: string): any => {\r\n  const data = localStorage.getItem(key)\r\n  if (data !== null) {\r\n    const { value, expiresAt } = JSON.parse(data)\r\n    if (expiresAt && expiresAt < new Date().getTime()) {\r\n      localStorage.removeItem(key)\r\n    } else {\r\n      return value\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\n// Returns the cached value if it exists and useCache(cachedValue) return true\r\n// Otherwise, compute the value, and cache it\r\nexport async function computeAndCache<T>(\r\n  getValueOperation: () => Promise<T>,\r\n  key: string,\r\n  ttl: number,\r\n  useCache: (cached: T) => boolean = () => true,\r\n): Promise<T> {\r\n  const cachedValue = get(key)\r\n  if (cachedValue && useCache(cachedValue)) return cachedValue\r\n  const value = await getValueOperation()\r\n  set(key, value, ttl)\r\n  return value\r\n}\r\n","import { toChecksumAddress } from 'web3-utils'\r\nimport { ERC20Decimals, ERC20Name, ERC20Symbol } from '../sdk'\r\nimport { SignerOrProvider, TokenInfo } from '../types'\r\nimport * as ls from './cache'\r\nimport { CONST_CACHE_TIME_MS } from '../constants'\r\n\r\nexport const getTokenInfo = async (\r\n  tokenAddress: string,\r\n  signerOrProvider: SignerOrProvider,\r\n  ttl: number = CONST_CACHE_TIME_MS,\r\n): Promise<TokenInfo> => {\r\n  const address = toChecksumAddress(tokenAddress)\r\n  return ls.computeAndCache<TokenInfo>(\r\n    async () => {\r\n      const value: TokenInfo = {\r\n        address,\r\n        name: await ERC20Name(address, signerOrProvider),\r\n        symbol: await ERC20Symbol(address, signerOrProvider),\r\n        decimals: await ERC20Decimals(address, signerOrProvider),\r\n      }\r\n      return value\r\n    },\r\n    `${address}|tokenInfo`,\r\n    ttl,\r\n  )\r\n}\r\n\r\nexport const defaultTokenInfo = (): TokenInfo => ({\r\n  address: '',\r\n  name: '',\r\n  symbol: '',\r\n  decimals: 0,\r\n})\r\n","// https://chir.ag/projects/name-that-color/#2D4A5D\r\nexport enum NamedColors {\r\n  ALTO = '#DDDDDD',\r\n  AMARANTH = '#EE2A4F',\r\n  APPLE = '#2ECC40',\r\n  BLACK = '#000000',\r\n  ELECTRICAL_VIOLET = '#912DFF',\r\n  GRAY = '#808080',\r\n  RADICAL_RED = '#FF2D55',\r\n  RED_ORANGE = '#FF4136',\r\n  SCHOOL_BUS_YELLOW = '#FFDC00',\r\n  WHITE = '#FFFFFF',\r\n}\r\n","import { RewardToken, StakingToken } from '../constants'\r\nimport { GeyserConfig } from '../types'\r\n\r\n/**\r\n *\r\n * `address` should be the actual address to which the geyser contract was deployed\r\n *\r\n */\r\n// const mockGeyserConfigs: GeyserConfig[] = [\r\n//   {\r\n//     name: 'Trinity V1 (Balancer BTC-ETH-AMPL)',\r\n//     address: '0xa85233c63b9ee964add6f2cffe00fd84eb32338f',\r\n//     stakingToken: StakingToken.MOCK,\r\n//     rewardToken: RewardToken.MOCK,\r\n//   },\r\n//   {\r\n//     name: 'Beehive V3 (Uniswap ETH-AMPL)',\r\n//     address: '0x4a679253410272dd5232b3ff7cf5dbb88f295319',\r\n//     stakingToken: StakingToken.MOCK,\r\n//     rewardToken: RewardToken.MOCK,\r\n//   },\r\n// ]\r\n\r\nconst meterGeyserConfig: GeyserConfig[] = [\r\n  {\r\n    name: 'Meter V2 (METER BAL-AMPL)',\r\n    address: '0xcdd632f465008c4f6babe695cdf2fc8326a5d092',\r\n    stakingToken: StakingToken.MOCK,\r\n    rewardToken: RewardToken.MOCK,\r\n  }\r\n]\r\n\r\n\r\n\r\n// const mainnetGeyserConfigs: GeyserConfig[] = [\r\n//   {\r\n//     name: 'Pescadero V2 (Sushiswap ETH-AMPL)',\r\n//     address: '0x56eD0272f99eBD903043399A51794f966D72E526',\r\n//     stakingToken: StakingToken.SUSHISWAP,\r\n//     rewardToken: RewardToken.AMPL,\r\n//     // staking token / pool address: 0xCb2286d9471cc185281c4f763d34A962ED212962\r\n//   },\r\n//   {\r\n//     name: 'Old Faithful V2 (Balancer AMPL-USDC)',\r\n//     address: '0x914A766578C2397da969b3ca088e3e757249A435',\r\n//     stakingToken: StakingToken.BALANCER_SMART_POOL_V1,\r\n//     rewardToken: RewardToken.AMPL,\r\n//     // staking token / pool address: 0x49F2befF98cE62999792Ec98D0eE4Ad790E7786F\r\n//   },\r\n//   {\r\n//     name: 'Trinity V2 (Balancer BTC-ETH-AMPL)',\r\n//     address: '0x0ec93391752ef1A06AA2b83D15c3a5814651C891',\r\n//     stakingToken: StakingToken.BALANCER_V1,\r\n//     rewardToken: RewardToken.AMPL,\r\n//     // staking token / pool address: 0xa751A143f8fe0a108800Bfb915585E4255C2FE80\r\n//   },\r\n//   {\r\n//     name: 'Beehive V4 (Uniswap ETH-AMPL)',\r\n//     address: '0x88F12aE68315A89B885A2f1b0610fE2A9E1720B9',\r\n//     stakingToken: StakingToken.UNISWAP_V2,\r\n//     rewardToken: RewardToken.AMPL,\r\n//     // staking token / pool address: 0xc5be99A02C6857f9Eac67BbCE58DF5572498F40c\r\n//   },\r\n//   {\r\n//     name: 'MTR V2(MTR-MTRG)',\r\n//     address: '0x00cF58729B7657631E7a5592142253c7B06edFc6',\r\n//     stakingToken: StakingToken.UNISWAP_V2,\r\n//     rewardToken: RewardToken.AMPL,\r\n//     // staking token / pool address: 0xc5be99A02C6857f9Eac67BbCE58DF5572498F40c\r\n//   },\r\n// ]\r\n\r\n\r\nexport const geyserConfigs: GeyserConfig[] = meterGeyserConfig\r\n","export const BALANCER_BPOOL_V1_ABI = [\r\n  {\r\n    inputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'src',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'dst',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amt',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Approval',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: true,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'bytes4',\r\n        name: 'sig',\r\n        type: 'bytes4',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'caller',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'bytes',\r\n        name: 'data',\r\n        type: 'bytes',\r\n      },\r\n    ],\r\n    name: 'LOG_CALL',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'caller',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'tokenOut',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountOut',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'LOG_EXIT',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'caller',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'tokenIn',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountIn',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'LOG_JOIN',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'caller',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'tokenIn',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'tokenOut',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountOut',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'LOG_SWAP',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'src',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'dst',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amt',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Transfer',\r\n    type: 'event',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'BONE',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'BPOW_PRECISION',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'EXIT_FEE',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'INIT_POOL_SUPPLY',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'MAX_BOUND_TOKENS',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'MAX_BPOW_BASE',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'MAX_FEE',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'MAX_IN_RATIO',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'MAX_OUT_RATIO',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'MAX_TOTAL_WEIGHT',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'MAX_WEIGHT',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'MIN_BALANCE',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'MIN_BOUND_TOKENS',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'MIN_BPOW_BASE',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'MIN_FEE',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'MIN_WEIGHT',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'src',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'dst',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'allowance',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'dst',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amt',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'approve',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'whom',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'balanceOf',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'token',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'balance',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'denorm',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'bind',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenBalanceIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenWeightIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenBalanceOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenWeightOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'swapFee',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'calcInGivenOut',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountIn',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'pure',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenBalanceIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenWeightIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenBalanceOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenWeightOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'swapFee',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'calcOutGivenIn',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountOut',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'pure',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenBalanceOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenWeightOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'poolSupply',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'totalWeight',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'swapFee',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'calcPoolInGivenSingleOut',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'poolAmountIn',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'pure',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenBalanceIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenWeightIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'poolSupply',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'totalWeight',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'swapFee',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'calcPoolOutGivenSingleIn',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'poolAmountOut',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'pure',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenBalanceIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenWeightIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'poolSupply',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'totalWeight',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'poolAmountOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'swapFee',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'calcSingleInGivenPoolOut',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountIn',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'pure',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenBalanceOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenWeightOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'poolSupply',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'totalWeight',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'poolAmountIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'swapFee',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'calcSingleOutGivenPoolIn',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountOut',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'pure',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenBalanceIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenWeightIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenBalanceOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenWeightOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'swapFee',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'calcSpotPrice',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'spotPrice',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'pure',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'decimals',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint8',\r\n        name: '',\r\n        type: 'uint8',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'dst',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amt',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'decreaseApproval',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'poolAmountIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256[]',\r\n        name: 'minAmountsOut',\r\n        type: 'uint256[]',\r\n      },\r\n    ],\r\n    name: 'exitPool',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'tokenOut',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'maxPoolAmountIn',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'exitswapExternAmountOut',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'poolAmountIn',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'tokenOut',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'poolAmountIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'minAmountOut',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'exitswapPoolAmountIn',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountOut',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: 'finalize',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'token',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'getBalance',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'getColor',\r\n    outputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: '',\r\n        type: 'bytes32',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'getController',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'getCurrentTokens',\r\n    outputs: [\r\n      {\r\n        internalType: 'address[]',\r\n        name: 'tokens',\r\n        type: 'address[]',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'token',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'getDenormalizedWeight',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'getFinalTokens',\r\n    outputs: [\r\n      {\r\n        internalType: 'address[]',\r\n        name: 'tokens',\r\n        type: 'address[]',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'token',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'getNormalizedWeight',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'getNumTokens',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'tokenIn',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'tokenOut',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'getSpotPrice',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'spotPrice',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'tokenIn',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'tokenOut',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'getSpotPriceSansFee',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'spotPrice',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'getSwapFee',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'getTotalDenormalizedWeight',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'token',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'gulp',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'dst',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amt',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'increaseApproval',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 't',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'isBound',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'isFinalized',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'isPublicSwap',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'poolAmountOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256[]',\r\n        name: 'maxAmountsIn',\r\n        type: 'uint256[]',\r\n      },\r\n    ],\r\n    name: 'joinPool',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'tokenIn',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'minPoolAmountOut',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'joinswapExternAmountIn',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'poolAmountOut',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'tokenIn',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'poolAmountOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'maxAmountIn',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'joinswapPoolAmountOut',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountIn',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'name',\r\n    outputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'token',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'balance',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'denorm',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'rebind',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'manager',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'setController',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: 'public_',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    name: 'setPublicSwap',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'swapFee',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'setSwapFee',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'tokenIn',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'tokenOut',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'minAmountOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'maxPrice',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'swapExactAmountIn',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'spotPriceAfter',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'tokenIn',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'maxAmountIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'tokenOut',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'maxPrice',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'swapExactAmountOut',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'spotPriceAfter',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'symbol',\r\n    outputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'totalSupply',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'dst',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amt',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'transfer',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'src',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'dst',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amt',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'transferFrom',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'token',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'unbind',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n]\r\n","export const BALANCER_CRP_V1_ABI = [\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'factoryAddress',\r\n        type: 'address',\r\n      },\r\n      {\r\n        components: [\r\n          {\r\n            internalType: 'string',\r\n            name: 'poolTokenSymbol',\r\n            type: 'string',\r\n          },\r\n          {\r\n            internalType: 'string',\r\n            name: 'poolTokenName',\r\n            type: 'string',\r\n          },\r\n          {\r\n            internalType: 'address[]',\r\n            name: 'constituentTokens',\r\n            type: 'address[]',\r\n          },\r\n          {\r\n            internalType: 'uint256[]',\r\n            name: 'tokenBalances',\r\n            type: 'uint256[]',\r\n          },\r\n          {\r\n            internalType: 'uint256[]',\r\n            name: 'tokenWeights',\r\n            type: 'uint256[]',\r\n          },\r\n          {\r\n            internalType: 'uint256',\r\n            name: 'swapFee',\r\n            type: 'uint256',\r\n          },\r\n        ],\r\n        internalType: 'struct ConfigurableRightsPool.PoolParams',\r\n        name: 'poolParams',\r\n        type: 'tuple',\r\n      },\r\n      {\r\n        components: [\r\n          {\r\n            internalType: 'bool',\r\n            name: 'canPauseSwapping',\r\n            type: 'bool',\r\n          },\r\n          {\r\n            internalType: 'bool',\r\n            name: 'canChangeSwapFee',\r\n            type: 'bool',\r\n          },\r\n          {\r\n            internalType: 'bool',\r\n            name: 'canChangeWeights',\r\n            type: 'bool',\r\n          },\r\n          {\r\n            internalType: 'bool',\r\n            name: 'canAddRemoveTokens',\r\n            type: 'bool',\r\n          },\r\n          {\r\n            internalType: 'bool',\r\n            name: 'canWhitelistLPs',\r\n            type: 'bool',\r\n          },\r\n          {\r\n            internalType: 'bool',\r\n            name: 'canChangeCap',\r\n            type: 'bool',\r\n          },\r\n        ],\r\n        internalType: 'struct RightsManager.Rights',\r\n        name: 'rightsStruct',\r\n        type: 'tuple',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Approval',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'caller',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'oldCap',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'newCap',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'CapChanged',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: true,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'bytes4',\r\n        name: 'sig',\r\n        type: 'bytes4',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'caller',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'bytes',\r\n        name: 'data',\r\n        type: 'bytes',\r\n      },\r\n    ],\r\n    name: 'LogCall',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'caller',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'tokenOut',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountOut',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'LogExit',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'caller',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'tokenIn',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountIn',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'LogJoin',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'token',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'pool',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'caller',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'NewTokenCommitted',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'previousOwner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'newOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'OwnershipTransferred',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'from',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Transfer',\r\n    type: 'event',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'DECIMALS',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint8',\r\n        name: '',\r\n        type: 'uint8',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'DEFAULT_ADD_TOKEN_TIME_LOCK_IN_BLOCKS',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'DEFAULT_MIN_WEIGHT_CHANGE_BLOCK_PERIOD',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'NAME',\r\n    outputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'addTokenTimeLockInBlocks',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'allowance',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'applyAddToken',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'approve',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'bFactory',\r\n    outputs: [\r\n      {\r\n        internalType: 'contract IBFactory',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'bPool',\r\n    outputs: [\r\n      {\r\n        internalType: 'contract IBPool',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'account',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'balanceOf',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'bspCap',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'burnPoolShareFromLib',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'provider',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'canProvideLiquidity',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'token',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'balance',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'denormalizedWeight',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'commitAddToken',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'initialSupply',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'createPool',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'initialSupply',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'minimumWeightChangeBlockPeriodParam',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'addTokenTimeLockInBlocksParam',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'createPool',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'decimals',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint8',\r\n        name: '',\r\n        type: 'uint8',\r\n      },\r\n    ],\r\n    stateMutability: 'pure',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'decreaseApproval',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'poolAmountIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256[]',\r\n        name: 'minAmountsOut',\r\n        type: 'uint256[]',\r\n      },\r\n    ],\r\n    name: 'exitPool',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'tokenOut',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'maxPoolAmountIn',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'exitswapExternAmountOut',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'poolAmountIn',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'tokenOut',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'poolAmountIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'minAmountOut',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'exitswapPoolAmountIn',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountOut',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'getBalancerSafeMathVersion',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'pure',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'getController',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'token',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'getDenormalizedWeight',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'getRightsManagerVersion',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'pure',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'getSmartPoolManagerVersion',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'pure',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'gradualUpdate',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'startBlock',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'endBlock',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'enum RightsManager.Permissions',\r\n        name: 'permission',\r\n        type: 'uint8',\r\n      },\r\n    ],\r\n    name: 'hasPermission',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'increaseApproval',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'isPublicSwap',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'poolAmountOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256[]',\r\n        name: 'maxAmountsIn',\r\n        type: 'uint256[]',\r\n      },\r\n    ],\r\n    name: 'joinPool',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'tokenIn',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountIn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'minPoolAmountOut',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'joinswapExternAmountIn',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'poolAmountOut',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'tokenIn',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'poolAmountOut',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'maxAmountIn',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'joinswapPoolAmountOut',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenAmountIn',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'minimumWeightChangeBlockPeriod',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'mintPoolShareFromLib',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'name',\r\n    outputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'newToken',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'addr',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'bool',\r\n        name: 'isCommitted',\r\n        type: 'bool',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'commitBlock',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'denorm',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'balance',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'pokeWeights',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'from',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'pullPoolShareFromLib',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'pushPoolShareFromLib',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'token',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'removeToken',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'provider',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'removeWhitelistedLiquidityProvider',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'token',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'resyncWeight',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'rights',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: 'canPauseSwapping',\r\n        type: 'bool',\r\n      },\r\n      {\r\n        internalType: 'bool',\r\n        name: 'canChangeSwapFee',\r\n        type: 'bool',\r\n      },\r\n      {\r\n        internalType: 'bool',\r\n        name: 'canChangeWeights',\r\n        type: 'bool',\r\n      },\r\n      {\r\n        internalType: 'bool',\r\n        name: 'canAddRemoveTokens',\r\n        type: 'bool',\r\n      },\r\n      {\r\n        internalType: 'bool',\r\n        name: 'canWhitelistLPs',\r\n        type: 'bool',\r\n      },\r\n      {\r\n        internalType: 'bool',\r\n        name: 'canChangeCap',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'newCap',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'setCap',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'newOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'setController',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: 'publicSwap',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    name: 'setPublicSwap',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'swapFee',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'setSwapFee',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'symbol',\r\n    outputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'totalSupply',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'recipient',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'transfer',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'sender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'recipient',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'transferFrom',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'token',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'newWeight',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'updateWeight',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256[]',\r\n        name: 'newWeights',\r\n        type: 'uint256[]',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'startBlock',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'endBlock',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'updateWeightsGradually',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'provider',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'whitelistLiquidityProvider',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n]\r\n","export const MOONISWAP_V1_PAIR_ABI = [\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'contract IERC20[]',\r\n        name: 'assets',\r\n        type: 'address[]',\r\n      },\r\n      {\r\n        internalType: 'string',\r\n        name: 'name',\r\n        type: 'string',\r\n      },\r\n      {\r\n        internalType: 'string',\r\n        name: 'symbol',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Approval',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'account',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Deposited',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'previousOwner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'newOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'OwnershipTransferred',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'account',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'src',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'dst',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'result',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'srcBalance',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'dstBalance',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'totalSupply',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'address',\r\n        name: 'referral',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'Swapped',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'from',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Transfer',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'account',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Withdrawn',\r\n    type: 'event',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'BASE_SUPPLY',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'FEE_DENOMINATOR',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'REFERRAL_SHARE',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'allowance',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'approve',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'account',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'balanceOf',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'decayPeriod',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'pure',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'decimals',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint8',\r\n        name: '',\r\n        type: 'uint8',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'subtractedValue',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'decreaseAllowance',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256[]',\r\n        name: 'amounts',\r\n        type: 'uint256[]',\r\n      },\r\n      {\r\n        internalType: 'uint256[]',\r\n        name: 'minAmounts',\r\n        type: 'uint256[]',\r\n      },\r\n    ],\r\n    name: 'deposit',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'fairSupply',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'factory',\r\n    outputs: [\r\n      {\r\n        internalType: 'contract IFactory',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'fee',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'contract IERC20',\r\n        name: 'token',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'getBalanceForAddition',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'contract IERC20',\r\n        name: 'token',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'getBalanceForRemoval',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'contract IERC20',\r\n        name: 'src',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'contract IERC20',\r\n        name: 'dst',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'getReturn',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'getTokens',\r\n    outputs: [\r\n      {\r\n        internalType: 'contract IERC20[]',\r\n        name: '',\r\n        type: 'address[]',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'addedValue',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'increaseAllowance',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'contract IERC20',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'isToken',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'name',\r\n    outputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'owner',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'renounceOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'contract IERC20',\r\n        name: 'token',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'rescueFunds',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'contract IERC20',\r\n        name: 'src',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'contract IERC20',\r\n        name: 'dst',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'minReturn',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'referral',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'swap',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'result',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'symbol',\r\n    outputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'tokens',\r\n    outputs: [\r\n      {\r\n        internalType: 'contract IERC20',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'totalSupply',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'recipient',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'transfer',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'sender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'recipient',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'transferFrom',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'newOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'transferOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'contract IERC20',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'virtualBalancesForAddition',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint216',\r\n        name: 'balance',\r\n        type: 'uint216',\r\n      },\r\n      {\r\n        internalType: 'uint40',\r\n        name: 'time',\r\n        type: 'uint40',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'contract IERC20',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'virtualBalancesForRemoval',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint216',\r\n        name: 'balance',\r\n        type: 'uint216',\r\n      },\r\n      {\r\n        internalType: 'uint40',\r\n        name: 'time',\r\n        type: 'uint40',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'contract IERC20',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'volumes',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint128',\r\n        name: 'confirmed',\r\n        type: 'uint128',\r\n      },\r\n      {\r\n        internalType: 'uint128',\r\n        name: 'result',\r\n        type: 'uint128',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256[]',\r\n        name: 'minReturns',\r\n        type: 'uint256[]',\r\n      },\r\n    ],\r\n    name: 'withdraw',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n]\r\n","export const UNISWAP_V2_PAIR_ABI = [\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Approval',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'sender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amount0',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amount1',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'Burn',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'sender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amount0',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amount1',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Mint',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'sender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amount0In',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amount1In',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amount0Out',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'amount1Out',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'Swap',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint112',\r\n        name: 'reserve0',\r\n        type: 'uint112',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint112',\r\n        name: 'reserve1',\r\n        type: 'uint112',\r\n      },\r\n    ],\r\n    name: 'Sync',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'from',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Transfer',\r\n    type: 'event',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'DOMAIN_SEPARATOR',\r\n    outputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: '',\r\n        type: 'bytes32',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'MINIMUM_LIQUIDITY',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'pure',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'PERMIT_TYPEHASH',\r\n    outputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: '',\r\n        type: 'bytes32',\r\n      },\r\n    ],\r\n    stateMutability: 'pure',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'allowance',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'approve',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'balanceOf',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'burn',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount0',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount1',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'decimals',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint8',\r\n        name: '',\r\n        type: 'uint8',\r\n      },\r\n    ],\r\n    stateMutability: 'pure',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'factory',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'getReserves',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint112',\r\n        name: 'reserve0',\r\n        type: 'uint112',\r\n      },\r\n      {\r\n        internalType: 'uint112',\r\n        name: 'reserve1',\r\n        type: 'uint112',\r\n      },\r\n      {\r\n        internalType: 'uint32',\r\n        name: 'blockTimestampLast',\r\n        type: 'uint32',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'initialize',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'kLast',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'mint',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'liquidity',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'name',\r\n    outputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    stateMutability: 'pure',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'nonces',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'deadline',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint8',\r\n        name: 'v',\r\n        type: 'uint8',\r\n      },\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'r',\r\n        type: 'bytes32',\r\n      },\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 's',\r\n        type: 'bytes32',\r\n      },\r\n    ],\r\n    name: 'permit',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'price0CumulativeLast',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'price1CumulativeLast',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'skim',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount0Out',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount1Out',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'bytes',\r\n        name: 'data',\r\n        type: 'bytes',\r\n      },\r\n    ],\r\n    name: 'swap',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'symbol',\r\n    outputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    stateMutability: 'pure',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'sync',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'token0',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'token1',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'totalSupply',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'transfer',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'from',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'transferFrom',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n]\r\n","import CGApi from 'coingecko-api'\r\nimport { HOUR_IN_MS } from '../constants'\r\nimport * as ls from './cache'\r\n\r\nconst DEFAULT_PRICES: Record<string, number> = {\r\n  AMPL: 1.0,\r\n  BTC: 50000.0,\r\n  WETH: 320,\r\n  LINK: 5,\r\n  BAL: 10,\r\n  LEND: 0.33,\r\n  COMP: 100,\r\n  MKR: 350,\r\n  CRV: 0.5,\r\n  BZRX: 0.1,\r\n  YFI: 17000,\r\n  NMR: 25,\r\n  USDC: 1,\r\n  'yDAI+yUSDC+yUSDT+yTUSD': 1.1,\r\n}\r\n\r\nconst SYMBOL_TO_QUERY: Record<string, string> = {\r\n  WBTC: 'wrapped-bitcoin',\r\n  AMPL: 'ampleforth',\r\n  WETH: 'ethereum',\r\n  LINK: 'chainlink',\r\n  BAL: 'balancer',\r\n  LEND: 'ethlend',\r\n  COMP: 'compound-governance-token',\r\n  MKR: 'maker',\r\n  CRV: 'curve-dao-token',\r\n  BZRX: 'bzx-protocol',\r\n  YFI: 'yearn-finance',\r\n  NMR: 'numeraire',\r\n  USDC: 'usd-coin',\r\n  'yDAI+yUSDC+yUSDT+yTUSD': 'curve-fi-ydai-yusdc-yusdt-ytusd',\r\n}\r\n\r\nexport const getCurrentPrice = async (symbol: string) => {\r\n  const cacheKey = `geyser|${symbol}|spot`\r\n  const TTL = HOUR_IN_MS\r\n\r\n  try {\r\n    const query = SYMBOL_TO_QUERY[symbol]\r\n    if (!query) {\r\n      throw new Error(`Can't fetch price for ${symbol}`)\r\n    }\r\n\r\n    return await ls.computeAndCache<number>(\r\n      async () => {\r\n        const client = new CGApi()\r\n        const reqTimeoutSec = 10\r\n        const p: any = await Promise.race([\r\n          client.simple.price({\r\n            ids: [query],\r\n            vs_currencies: ['usd'],\r\n          }),\r\n          new Promise((_, reject) => setTimeout(() => reject(new Error('request timeout')), reqTimeoutSec * 1000)),\r\n        ])\r\n        const price = p.data[query].usd\r\n        return price as number\r\n      },\r\n      cacheKey,\r\n      TTL,\r\n    )\r\n  } catch (e) {\r\n    console.error(e)\r\n    return DEFAULT_PRICES[symbol] || 0\r\n  }\r\n}\r\n","import { BigNumber, Contract } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport { toChecksumAddress } from 'web3-utils'\r\nimport { StakingToken } from '../constants'\r\nimport { ERC20Balance } from '../sdk'\r\nimport { SignerOrProvider, StakingTokenInfo, TokenComposition } from '../types'\r\nimport { BALANCER_BPOOL_V1_ABI } from './abis/BalancerBPoolV1'\r\nimport { BALANCER_CRP_V1_ABI } from './abis/BalancerCRPV1'\r\nimport { MOONISWAP_V1_PAIR_ABI } from './abis/MooniswapV1Pair'\r\nimport { UNISWAP_V2_PAIR_ABI } from './abis/UniswapV2Pair'\r\nimport { getCurrentPrice } from './price'\r\nimport { defaultTokenInfo, getTokenInfo } from './token'\r\n\r\nexport const defaultStakingTokenInfo = (): StakingTokenInfo => ({\r\n  ...defaultTokenInfo(),\r\n  price: 0,\r\n  totalSupply: 0,\r\n  marketCap: 0,\r\n  composition: [],\r\n})\r\n\r\nexport const getStakingTokenInfo = async (\r\n  tokenAddress: string,\r\n  token: StakingToken,\r\n  signerOrProvider: SignerOrProvider,\r\n): Promise<StakingTokenInfo> => {\r\n  \r\n  switch (token) {\r\n    case StakingToken.MOCK:\r\n      return getMockLPToken(tokenAddress)\r\n    case StakingToken.UNISWAP_V2:\r\n      return getUniswapV2(tokenAddress, signerOrProvider)\r\n    case StakingToken.SUSHISWAP:\r\n      return getSushiswap(tokenAddress, signerOrProvider)\r\n    case StakingToken.MOONISWAP_V1:\r\n      return getMooniswap(tokenAddress, signerOrProvider)\r\n    case StakingToken.BALANCER_V1:\r\n      return getBalancerV1(tokenAddress, signerOrProvider)\r\n    case StakingToken.BALANCER_SMART_POOL_V1:\r\n      return getBalancerSmartPoolV1(tokenAddress, signerOrProvider)\r\n    default:\r\n      throw new Error(`Handler for ${token} not found`)\r\n  }\r\n}\r\n\r\nconst getTokenComposition = async (\r\n  tokenAddress: string,\r\n  stakingTokenAddress: string,\r\n  signerOrProvider: SignerOrProvider,\r\n  weight: number,\r\n): Promise<TokenComposition> => {\r\n  const { name, symbol, decimals } = await getTokenInfo(tokenAddress, signerOrProvider)\r\n  const price = await getCurrentPrice(symbol)\r\n  const balance = await ERC20Balance(tokenAddress, stakingTokenAddress, signerOrProvider)\r\n\r\n  const balanceNumber = parseInt(formatUnits(balance as BigNumber, decimals), 10)\r\n\r\n  return {\r\n    address: tokenAddress,\r\n    name,\r\n    symbol,\r\n    balance: balanceNumber,\r\n    decimals,\r\n    value: price * balanceNumber,\r\n    weight,\r\n  }\r\n}\r\n\r\nconst getTokenCompositions = async (\r\n  tokenAddresses: string[],\r\n  stakingTokenAddress: string,\r\n  signerOrProvider: SignerOrProvider,\r\n  weights: number[],\r\n): Promise<TokenComposition[]> =>\r\n  Promise.all(\r\n    tokenAddresses.map((token, index) =>\r\n      getTokenComposition(token, stakingTokenAddress, signerOrProvider, weights[index]),\r\n    ),\r\n  )\r\n\r\nconst getMarketCap = (composition: TokenComposition[]) => composition.reduce((m, c) => m + c.value, 0)\r\n\r\nconst uniswapV2Pair = async (\r\n  tokenAddress: string,\r\n  signerOrProvider: SignerOrProvider,\r\n  namePrefix: string,\r\n  symbolPrefix: string,\r\n): Promise<StakingTokenInfo> => {\r\n  const address = toChecksumAddress(tokenAddress)\r\n  const contract = new Contract(address, UNISWAP_V2_PAIR_ABI, signerOrProvider)\r\n  const token0Address: string = await contract.token0()\r\n  const token1Address: string = await contract.token1()\r\n  const decimals: number = await contract.decimals()\r\n\r\n  const totalSupply: BigNumber = await contract.totalSupply()\r\n\r\n  const totalSupplyNumber = parseFloat(formatUnits(totalSupply, decimals))\r\n\r\n  const tokenCompositions = await getTokenCompositions([token0Address, token1Address], address, signerOrProvider, [\r\n    0.5,\r\n    0.5,\r\n  ])\r\n  const [token0Symbol, token1Symbol] = tokenCompositions.map((c) => c.symbol)\r\n  const marketCap = getMarketCap(tokenCompositions)\r\n\r\n  return {\r\n    address: toChecksumAddress(tokenAddress),\r\n    name: `${namePrefix}-${token0Symbol}-${token1Symbol} Liquidity Token`,\r\n    symbol: `${symbolPrefix}-${token0Symbol}-${token1Symbol}-V2`,\r\n    decimals,\r\n    price: marketCap / totalSupplyNumber,\r\n    totalSupply: totalSupplyNumber,\r\n    marketCap,\r\n    composition: tokenCompositions,\r\n  }\r\n}\r\n\r\nconst getUniswapV2 = async (tokenAddress: string, signerOrProvider: SignerOrProvider) =>\r\n  uniswapV2Pair(tokenAddress, signerOrProvider, 'UniswapV2', 'UNI')\r\n\r\nconst getSushiswap = async (tokenAddress: string, signerOrProvider: SignerOrProvider) =>\r\n  uniswapV2Pair(tokenAddress, signerOrProvider, 'Sushiswap', 'SUSHI')\r\n\r\nconst getMooniswap = async (tokenAddress: string, signerOrProvider: SignerOrProvider): Promise<StakingTokenInfo> => {\r\n  const address = toChecksumAddress(tokenAddress)\r\n  const contract = new Contract(address, MOONISWAP_V1_PAIR_ABI, signerOrProvider)\r\n  const tokens: [string, string] = await contract.getTokens()\r\n  const [token0Address, token1Address] = tokens\r\n  const { name, symbol, decimals } = await getTokenInfo(address, signerOrProvider)\r\n\r\n  const totalSupply: BigNumber = await contract.totalSupply()\r\n\r\n  const totalSupplyNumber = parseFloat(formatUnits(totalSupply, decimals))\r\n\r\n  const tokenCompositions = await getTokenCompositions([token0Address, token1Address], address, signerOrProvider, [\r\n    0.5,\r\n    0.5,\r\n  ])\r\n  const marketCap = getMarketCap(tokenCompositions)\r\n\r\n  return {\r\n    address,\r\n    name,\r\n    symbol,\r\n    decimals,\r\n    price: marketCap / totalSupplyNumber,\r\n    totalSupply: totalSupplyNumber,\r\n    marketCap,\r\n    composition: tokenCompositions,\r\n  }\r\n}\r\n\r\nconst getBalancerTokenCompositions = async (\r\n  address: string,\r\n  signerOrProvider: SignerOrProvider,\r\n): Promise<TokenComposition[]> => {\r\n  const contract = new Contract(address, BALANCER_BPOOL_V1_ABI, signerOrProvider)\r\n  const tokenAddresses: string[] = await contract.getCurrentTokens()\r\n  const totalDenormalizedWeight: number = await contract.getTotalDenormalizedWeight()\r\n  const tokenDenormalizedWeights: number[] = await Promise.all(\r\n    tokenAddresses.map((token) => contract.getDenormalizedWeight(token)),\r\n  )\r\n  const tokenWeights = tokenDenormalizedWeights.map((w) => w / totalDenormalizedWeight)\r\n\r\n  return getTokenCompositions(tokenAddresses, address, signerOrProvider, tokenWeights)\r\n}\r\n\r\nconst getBalancerV1 = async (tokenAddress: string, signerOrProvider: SignerOrProvider): Promise<StakingTokenInfo> => {\r\n  const address = toChecksumAddress(tokenAddress)\r\n  const contract = new Contract(address, BALANCER_BPOOL_V1_ABI, signerOrProvider)\r\n\r\n  const { name, symbol, decimals } = await getTokenInfo(address, signerOrProvider)\r\n\r\n  const totalSupply: BigNumber = await contract.totalSupply()\r\n  const totalSupplyNumber = parseFloat(formatUnits(totalSupply, decimals))\r\n\r\n  const tokenCompositions = await getBalancerTokenCompositions(address, signerOrProvider)\r\n  const marketCap = getMarketCap(tokenCompositions)\r\n\r\n  return {\r\n    address,\r\n    decimals,\r\n    name,\r\n    symbol,\r\n    totalSupply: totalSupplyNumber,\r\n    marketCap,\r\n    price: marketCap / totalSupplyNumber,\r\n    composition: tokenCompositions,\r\n  }\r\n}\r\n\r\nconst getBalancerSmartPoolV1 = async (\r\n  tokenAddress: string,\r\n  signerOrProvider: SignerOrProvider,\r\n): Promise<StakingTokenInfo> => {\r\n  const address = toChecksumAddress(tokenAddress)\r\n  const contract = new Contract(address, BALANCER_CRP_V1_ABI, signerOrProvider)\r\n\r\n  const bPool: string = await contract.bPool()\r\n  const { name, symbol, decimals } = await getTokenInfo(address, signerOrProvider)\r\n\r\n  const totalSupply: BigNumber = await contract.totalSupply()\r\n  const totalSupplyNumber = parseFloat(formatUnits(totalSupply, decimals))\r\n\r\n  const tokenCompositions = await getBalancerTokenCompositions(bPool, signerOrProvider)\r\n  const marketCap = getMarketCap(tokenCompositions)\r\n\r\n  return {\r\n    address,\r\n    decimals,\r\n    name,\r\n    symbol,\r\n    totalSupply: totalSupplyNumber,\r\n    marketCap,\r\n    price: marketCap / totalSupplyNumber,\r\n    composition: tokenCompositions,\r\n  }\r\n}\r\n\r\nconst getMockLPToken = async (tokenAddress: string): Promise<StakingTokenInfo> => {\r\n  const price = ((await getCurrentPrice('AMPL')) + (await getCurrentPrice('BAL'))) / 2\r\n  return {\r\n    address: toChecksumAddress(tokenAddress),\r\n    name: `MOCK-AMPL-BAL Liquidity Token`,\r\n    symbol: `MOCK-AMPL-BAL`,\r\n    decimals: 18,\r\n    price,\r\n    totalSupply: 100000,\r\n    marketCap: 100000 * price,\r\n    composition: [],\r\n  }\r\n}\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const GET_GEYSERS = gql`\r\n  query getGeysers($ids: [ID!]!) {\r\n    geysers(first: 1000, where: { id_in: $ids }) {\r\n      id\r\n      rewardToken\r\n      stakingToken\r\n      totalStake\r\n      totalStakeUnits\r\n      scalingFloor\r\n      scalingCeiling\r\n      scalingTime\r\n      unlockedReward\r\n      rewardSchedules(first: 1000) {\r\n        id\r\n        duration\r\n        start\r\n        rewardAmount\r\n      }\r\n      lastUpdate\r\n      powerSwitch {\r\n        id\r\n        status\r\n      }\r\n    }\r\n  }\r\n`\r\n","export const UFRAGMENTS_ABI = [\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'name',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'decimals',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint8',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'rebasePaused',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: 'renounceOwnership',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'tokenPaused',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'owner',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'monetaryPolicy',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'isOwner',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'symbol',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: 'newOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'transferOwnership',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: 'epoch',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: 'totalSupply',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'LogRebase',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        name: 'paused',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    name: 'LogRebasePaused',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        name: 'paused',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    name: 'LogTokenPaused',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: 'previousOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'OwnershipRenounced',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: 'previousOwner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: 'newOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'OwnershipTransferred',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: 'from',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Transfer',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: 'owner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Approval',\r\n    type: 'event',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: 'monetaryPolicy_',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'setMonetaryPolicy',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: 'paused',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    name: 'setRebasePaused',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: 'paused',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    name: 'setTokenPaused',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: 'epoch',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        name: 'supplyDelta',\r\n        type: 'int256',\r\n      },\r\n    ],\r\n    name: 'rebase',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: 'owner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'initialize',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: 'name',\r\n        type: 'string',\r\n      },\r\n      {\r\n        name: 'symbol',\r\n        type: 'string',\r\n      },\r\n      {\r\n        name: 'decimals',\r\n        type: 'uint8',\r\n      },\r\n    ],\r\n    name: 'initialize',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'totalSupply',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: 'who',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'balanceOf',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n      {\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'transfer',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: 'owner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'allowance',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: 'from',\r\n        type: 'address',\r\n      },\r\n      {\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n      {\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'transferFrom',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        name: 'value',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'approve',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        name: 'addedValue',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'increaseAllowance',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: 'spender',\r\n        type: 'address',\r\n      },\r\n      {\r\n        name: 'subtractedValue',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'decreaseAllowance',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n]\r\n","export const UFRAGMENTS_POLICY_ABI = [\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'minRebaseTimeIntervalSec',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'lastRebaseTimestampSec',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'marketOracle',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'rebaseLag',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'rebaseWindowOffsetSec',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: 'renounceOwnership',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'owner',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'isOwner',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'epoch',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'rebaseWindowLengthSec',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'cpiOracle',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'uFrags',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'deviationThreshold',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: 'newOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'transferOwnership',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: 'epoch',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: 'exchangeRate',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: 'cpi',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: 'requestedSupplyAdjustment',\r\n        type: 'int256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        name: 'timestampSec',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'LogRebase',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: 'previousOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'OwnershipRenounced',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        name: 'previousOwner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        name: 'newOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'OwnershipTransferred',\r\n    type: 'event',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: 'rebase',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: 'cpiOracle_',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'setCpiOracle',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: 'marketOracle_',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'setMarketOracle',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: 'deviationThreshold_',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'setDeviationThreshold',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: 'rebaseLag_',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'setRebaseLag',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: 'minRebaseTimeIntervalSec_',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        name: 'rebaseWindowOffsetSec_',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        name: 'rebaseWindowLengthSec_',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'setRebaseTimingParameters',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: 'owner_',\r\n        type: 'address',\r\n      },\r\n      {\r\n        name: 'uFrags_',\r\n        type: 'address',\r\n      },\r\n      {\r\n        name: 'baseCpi_',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'initialize',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [\r\n      {\r\n        name: 'sender',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'initialize',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'inRebaseWindow',\r\n    outputs: [\r\n      {\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n]\r\n","import { Contract, ethers } from 'ethers'\r\nimport { ALCHEMY_PROJECT_ID, INFURA_PROJECT_ID, UFRG_INIT_BLOCK } from '../constants'\r\n\r\nexport const getDefaultProvider = () => {\r\n  if (process.env.NODE_ENV === 'development') {\r\n    return new ethers.providers.JsonRpcProvider('http://localhost:8545', { name: 'localhost', chainId: 1337 })\r\n  }\r\n\r\n  if(INFURA_PROJECT_ID){\r\n    return ethers.providers.InfuraProvider.getWebSocketProvider(\"homestead\", INFURA_PROJECT_ID);\r\n    // return ethers.getDefaultProvider(undefined, { infura: INFURA_PROJECT_ID });\r\n  }\r\n\r\n  return new ethers.providers.AlchemyProvider(\"homestead\", ALCHEMY_PROJECT_ID);\r\n}\r\n\r\nexport const loadHistoricalLogs = async (contract: Contract, eventName: string, startBlock = UFRG_INIT_BLOCK) => {\r\n  const filter = contract.filters[eventName]()\r\n  return contract.queryFilter(filter, startBlock, 'latest')\r\n}\r\n","import { Contract } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport { toChecksumAddress } from 'web3-utils'\r\nimport { AMPL_LAUNCH_DATE, DAY_IN_MS, INITIAL_SUPPLY } from '../constants'\r\nimport { RewardSchedule, SignerOrProvider, SupplyInfo } from '../types'\r\nimport { UFRAGMENTS_POLICY_ABI } from './abis/UFragmentsPolicy'\r\nimport { loadHistoricalLogs } from './eth'\r\nimport * as ls from './cache'\r\n\r\nexport const getTotalRewardShares = async (\r\n  rewardSchedules: RewardSchedule[],\r\n  policyAddress: string,\r\n  epoch: number,\r\n  decimals: number,\r\n  signerOrProvider: SignerOrProvider,\r\n) => {\r\n  const supplyHistory = await getSupplyHistory(policyAddress, epoch, decimals, signerOrProvider)\r\n  const getShares = (schedule: RewardSchedule) =>\r\n    parseFloat(formatUnits(schedule.rewardAmount, decimals)) / getSupplyOn(parseInt(schedule.start, 10), supplyHistory)\r\n  return rewardSchedules.reduce((acc, schedule) => acc + getShares(schedule), 0)\r\n}\r\n\r\nexport const getSupplyOn = (timestamp: number, supplyHistory: SupplyInfo[]) => {\r\n  if (supplyHistory.length === 0) return 0\r\n\r\n  let index = supplyHistory.findIndex(({ timestamp: ts }) => timestamp < ts)\r\n  if (index < 0) {\r\n    index = supplyHistory.length\r\n  }\r\n  return supplyHistory[Math.max(index - 1, 0)].supply\r\n}\r\n\r\nexport const getSupplyHistory = async (\r\n  policyAddress: string,\r\n  epoch: number,\r\n  decimals: number,\r\n  signerOrProvider: SignerOrProvider,\r\n) =>\r\n  ls.computeAndCache<SupplyInfo[]>(\r\n    async () => {\r\n      const policy = new Contract(policyAddress, UFRAGMENTS_POLICY_ABI, signerOrProvider)\r\n      const eventLogs = await loadHistoricalLogs(policy, 'LogRebase')\r\n      const historyFromLogs: SupplyInfo[] = eventLogs\r\n        .filter((log) => log.args)\r\n        .map((log) => ({\r\n          timestamp: parseInt(log.args!.timestampSec.toString(), 10),\r\n          supply: parseFloat(formatUnits(log.args!.requestedSupplyAdjustment, decimals)),\r\n          epoch: parseInt(log.args!.epoch, 10),\r\n        }))\r\n      const supplyHistory: SupplyInfo[] = [{ timestamp: AMPL_LAUNCH_DATE, supply: INITIAL_SUPPLY, epoch: 0 }].concat(\r\n        historyFromLogs,\r\n      )\r\n      for (let i = 1; i < supplyHistory.length; i++) {\r\n        supplyHistory[i].supply += supplyHistory[i - 1].supply\r\n      }\r\n      return supplyHistory\r\n    },\r\n    `${toChecksumAddress(policyAddress)}|supplyHistory`,\r\n    DAY_IN_MS,\r\n    (cached) => cached.length > 0 && cached[cached.length - 1].epoch >= epoch,\r\n  )\r\n","import { Contract } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport { RewardToken } from '../constants'\r\nimport { RewardSchedule, RewardTokenInfo, SignerOrProvider } from '../types'\r\nimport { UFRAGMENTS_ABI } from './abis/UFragments'\r\nimport { UFRAGMENTS_POLICY_ABI } from './abis/UFragmentsPolicy'\r\nimport { getTotalRewardShares } from './ampleforth'\r\nimport { defaultTokenInfo, getTokenInfo } from './token'\r\n\r\nexport const defaultRewardTokenInfo = (): RewardTokenInfo => ({\r\n  ...defaultTokenInfo(),\r\n  getTotalRewards: async () => 0,\r\n})\r\n\r\nexport const getRewardTokenInfo = async (\r\n  tokenAddress: string,\r\n  token: RewardToken,\r\n  signerOrProvider: SignerOrProvider,\r\n) => {\r\n  switch (token) {\r\n    case RewardToken.MOCK:\r\n      return getMockToken(tokenAddress, signerOrProvider)\r\n    case RewardToken.AMPL:\r\n      return getAMPLToken(tokenAddress, signerOrProvider)\r\n    default:\r\n      throw new Error(`Handler for ${token} not found`)\r\n  }\r\n}\r\n\r\nconst getMockToken = async (tokenAddress: string, signerOrProvider: SignerOrProvider): Promise<RewardTokenInfo> => {\r\n  const tokenInfo = await getTokenInfo(tokenAddress, signerOrProvider)\r\n  const getTotalRewards = async (rewardSchedules: RewardSchedule[]) =>\r\n    rewardSchedules.reduce(\r\n      (acc, schedule) => acc + parseFloat(formatUnits(schedule.rewardAmount, tokenInfo.decimals)),\r\n      0,\r\n    )\r\n  return {\r\n    ...tokenInfo,\r\n    getTotalRewards,\r\n  }\r\n}\r\n\r\nconst getAMPLToken = async (tokenAddress: string, signerOrProvider: SignerOrProvider): Promise<RewardTokenInfo> => {\r\n  const contract = new Contract(tokenAddress, UFRAGMENTS_ABI, signerOrProvider)\r\n  const tokenInfo = await getTokenInfo(tokenAddress, signerOrProvider)\r\n  const policyAddress: string = await contract.monetaryPolicy()\r\n  const policy = new Contract(policyAddress, UFRAGMENTS_POLICY_ABI, signerOrProvider)\r\n\r\n  const totalSupply = await contract.totalSupply()\r\n  const epoch = parseInt(await policy.epoch(), 10)\r\n\r\n  const getTotalRewards = async (rewardSchedules: RewardSchedule[]) => {\r\n    const totalRewardShares = await getTotalRewardShares(\r\n      rewardSchedules,\r\n      policyAddress,\r\n      epoch,\r\n      tokenInfo.decimals,\r\n      signerOrProvider,\r\n    )\r\n    return totalRewardShares * totalSupply\r\n  }\r\n\r\n  return {\r\n    ...tokenInfo,\r\n    getTotalRewards,\r\n  }\r\n}\r\n","import { AdditionalTokenConfig } from 'types'\r\n\r\n/**\r\n * `address` should be the actual address of the token. Only the `address` and `enabled` key is used\r\n */\r\nconst mockAdditionalTokens = [\r\n  {\r\n    token: 'mock bal',\r\n    address: '0x',\r\n    enabled: false,\r\n  },\r\n  {\r\n    token: 'mock sushi',\r\n    address: '0x',\r\n    enabled: false,\r\n  },\r\n]\r\n\r\nconst mainnetAdditionalTokens = [\r\n  {\r\n    token: 'balancer',\r\n    address: '0x687a6294d0d6d63e751a059bf1ca68e4ae7b13e2',\r\n    enabled: true,\r\n  },\r\n  {\r\n    token: 'sushi',\r\n    address: '0x6b3595068778dd592e39a122f4f5a5cf09c90fe2',\r\n    enabled: true,\r\n  },\r\n]\r\n\r\nexport const additionalTokens: AdditionalTokenConfig[] =\r\n  process.env.NODE_ENV === 'development' ? mockAdditionalTokens : mainnetAdditionalTokens\r\n","import { API, Wallet } from 'bnc-onboard/dist/src/interfaces'\r\nimport Onboard from 'bnc-onboard'\r\nimport React, { createContext, useCallback, useEffect, useState } from 'react'\r\nimport { providers, Signer } from 'ethers'\r\nimport { getDefaultProvider } from '../utils/eth'\r\n\r\nclass Provider extends providers.Web3Provider {}\r\n\r\nconst Web3Context = createContext<{\r\n  address?: string\r\n  wallet: Wallet | null\r\n  onboard?: API\r\n  provider: Provider | null\r\n  defaultProvider: providers.Provider\r\n  signer?: Signer\r\n  selectWallet: () => Promise<boolean>\r\n  ready: boolean\r\n}>({\r\n  selectWallet: async () => false,\r\n  ready: false,\r\n  wallet: null,\r\n  provider: null,\r\n  defaultProvider: getDefaultProvider(),\r\n})\r\n\r\ninterface Subscriptions {\r\n  wallet: (wallet: Wallet) => void\r\n  address: React.Dispatch<React.SetStateAction<string | undefined>>\r\n}\r\n\r\nconst initOnboard = (subscriptions: Subscriptions): API => {\r\n  const network = { networkName:\"meter\",networkId: 82} // mainnet\r\n\r\n  return Onboard({\r\n    ...network,\r\n    subscriptions,\r\n  })\r\n}\r\n\r\nconst Web3Provider: React.FC = ({ children }) => {\r\n  const [address, setAddress] = useState<string>()\r\n  const [wallet, setWallet] = useState<Wallet | null>(null)\r\n  const [onboard, setOnboard] = useState<API>()\r\n  const [provider, setProvider] = useState<Provider | null>(null)\r\n  const [defaultProvider] = useState<providers.Provider>(getDefaultProvider())\r\n  const [signer, setSigner] = useState<Signer>()\r\n  const [ready, setReady] = useState(false)\r\n\r\n  const updateWallet = useCallback((newWallet: Wallet) => {\r\n    setWallet(newWallet)\r\n    if (newWallet && newWallet.name) localStorage.setItem('selectedWallet', newWallet.name)\r\n    const network =  {name:\"meter\",chainId:82}\r\n    const ethersProvider = new Provider(newWallet.provider, network)\r\n    const rpcSigner = ethersProvider.getSigner()\r\n    setSigner(rpcSigner)\r\n    setProvider(ethersProvider)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const onboardAPI = initOnboard({\r\n      address: setAddress,\r\n      wallet: (w: Wallet) => {\r\n        if (w?.provider?.selectedAddress) {\r\n          updateWallet(w)\r\n        } else {\r\n          setProvider(null)\r\n          setWallet(null)\r\n        }\r\n      },\r\n    })\r\n    setOnboard(onboardAPI)\r\n  }, [updateWallet])\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const previouslySelectedWallet = localStorage.getItem('selectedWallet')\r\n      if (previouslySelectedWallet && onboard) {\r\n        const walletSelected = await onboard.walletSelect(previouslySelectedWallet)\r\n        setReady(walletSelected)\r\n      }\r\n    })();\r\n  }, [onboard])\r\n\r\n  const selectWallet = async (): Promise<boolean> => {\r\n    if (!onboard) return false\r\n    const walletSelected = await onboard.walletSelect()\r\n    if (!walletSelected) return false\r\n    const isReady = await onboard.walletCheck()\r\n    setReady(isReady)\r\n    if (isReady) updateWallet(onboard.getState().wallet)\r\n    return isReady\r\n  }\r\n\r\n  return (\r\n    <Web3Context.Provider\r\n      value={{\r\n        address,\r\n        wallet,\r\n        onboard,\r\n        provider,\r\n        signer,\r\n        selectWallet,\r\n        ready,\r\n        defaultProvider,\r\n      }}\r\n    >\r\n      {children}\r\n    </Web3Context.Provider>\r\n  )\r\n}\r\n\r\nexport { Web3Provider }\r\n\r\nexport default Web3Context\r\n","import { useLazyQuery } from '@apollo/client'\r\nimport { createContext, useContext, useEffect, useState } from 'react'\r\nimport { toChecksumAddress } from 'web3-utils'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { BigNumber, Wallet } from 'ethers'\r\nimport { Geyser, TokenInfo, GeyserConfig, Vault, GeyserInfo } from 'types'\r\nimport {  getTokenInfo } from 'utils/token'\r\nimport { geyserConfigs } from 'config/geyser'\r\nimport { defaultStakingTokenInfo, getStakingTokenInfo } from 'utils/stakingToken'\r\nimport { approveCreateDepositStake, approveDepositStake, unstake } from 'sdk'\r\nimport { GET_GEYSERS } from 'queries/geyser'\r\nimport { Centered } from 'styling/styles'\r\nimport { defaultRewardTokenInfo, getRewardTokenInfo } from 'utils/rewardToken'\r\nimport { additionalTokens } from 'config/additionalTokens'\r\nimport Web3Context from './Web3Context'\r\nimport { POLL_INTERVAL } from '../constants'\r\n\r\nexport const GeyserContext = createContext<{\r\n  geysers: Geyser[]\r\n  selectedGeyserInfo: GeyserInfo\r\n  selectGeyser: (geyser: Geyser) => void\r\n  selectGeyserById: (id: string) => void\r\n  selectGeyserByName: (name: string) => void\r\n  isStakingAction: boolean\r\n  toggleStakingAction: () => void\r\n  handleGeyserAction: (arg0: Vault |  null, arg1: BigNumber) => Promise<TransactionResponse | undefined>\r\n  allTokensInfos: TokenInfo[]\r\n  getGeyserName: (id: string) => string\r\n  selectedGeyserConfig: GeyserConfig | null\r\n}>({\r\n  geysers: [],\r\n  selectedGeyserInfo: { geyser: null, stakingTokenInfo: defaultStakingTokenInfo(), rewardTokenInfo: defaultRewardTokenInfo() },\r\n  selectGeyser: () => {},\r\n  selectGeyserById: () => {},\r\n  selectGeyserByName: () => {},\r\n  isStakingAction: true,\r\n  toggleStakingAction: () => {},\r\n  handleGeyserAction: async () => undefined,\r\n  allTokensInfos: [],\r\n  getGeyserName: () => '',\r\n  selectedGeyserConfig: null,\r\n})\r\n\r\nexport const GeyserContextProvider: React.FC = ({ children }) => {\r\n  const { signer, defaultProvider } = useContext(Web3Context)\r\n  const signerOrProvider = signer || defaultProvider\r\n  // Polling to fetch fresh geyser stats\r\n \r\n  const [getGeysers, { loading: geyserLoading, data: geyserData }] = useLazyQuery(GET_GEYSERS, {\r\n    pollInterval: POLL_INTERVAL,\r\n  })\r\n \r\n  const [geysers, setGeysers] = useState<Geyser[]>([])\r\n  const [selectedGeyserInfo, setSelectedGeyserInfo] = useState<GeyserInfo>({\r\n    geyser: null,\r\n    stakingTokenInfo: defaultStakingTokenInfo(),\r\n    rewardTokenInfo: defaultRewardTokenInfo(),\r\n  })\r\n\r\n  const [selectedGeyserConfig, setSelectedGeyserConfig] = useState<GeyserConfig | null>(null)\r\n  const [allTokensInfos, setAllTokensInfos] = useState<TokenInfo[]>([])\r\n  const [geyserAddressToName] = useState<Map<string, string>>(new Map(geyserConfigs.map(geyser => [toChecksumAddress(geyser.address), geyser.name])))\r\n  const [geyserNameToAddress] = useState<Map<string, string>>(new Map(geyserConfigs.map(geyser => [geyser.name, toChecksumAddress(geyser.address)])))\r\n\r\n\r\n  const [isStakingAction, setIsStakingAction] = useState(true)\r\n\r\n  const toggleStakingAction = () => setIsStakingAction(!isStakingAction)\r\n  \r\n  const handleGeyserAction = async (selectedVault: Vault | null, parsedAmount: BigNumber) =>\r\n    (isStakingAction ? handleStake : handleUnstake)(selectedVault, parsedAmount)\r\n\r\n  const handleUnstake = async (selectedVault: Vault | null, parsedAmount: BigNumber) => {\r\n    if (selectedGeyserInfo.geyser && selectedVault && signer) {\r\n      const geyserAddress = selectedGeyserInfo.geyser.id\r\n      const vaultAddress = selectedVault.id\r\n      return unstake(geyserAddress, vaultAddress, parsedAmount, signer as Wallet)\r\n    }\r\n    return undefined\r\n  }\r\n  const handleStake = async (selectedVault: Vault | null, parsedAmount: BigNumber) => {\r\n    if (selectedGeyserInfo.geyser && signer && !parsedAmount.isZero()) {\r\n      const geyserAddress = selectedGeyserInfo.geyser.id\r\n      console.log(selectedVault)\r\n    \r\n      return (selectedVault\r\n        ? approveDepositStake(geyserAddress, selectedVault.id, parsedAmount, signer as Wallet)\r\n        : approveCreateDepositStake(geyserAddress, parsedAmount, signer as Wallet)\r\n      )\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  const selectGeyser = async (geyser: Geyser) => {\r\n    const geyserAddress = toChecksumAddress(geyser.id)\r\n    const geyserConfig = geyserConfigs.find(config => toChecksumAddress(config.address) === geyserAddress)\r\n    if (!geyserConfig) {\r\n      throw new Error(`Geyser config not found for geyser at ${geyserAddress}`)\r\n    }\r\n    const newStakingTokenInfo = await getStakingTokenInfo(geyser.stakingToken, geyserConfig.stakingToken, signerOrProvider)\r\n    const newRewardTokenInfo = await getRewardTokenInfo(geyser.rewardToken, geyserConfig.rewardToken, signerOrProvider)\r\n    setSelectedGeyserConfig(geyserConfig)\r\n    setSelectedGeyserInfo({\r\n      geyser,\r\n      stakingTokenInfo: newStakingTokenInfo,\r\n      rewardTokenInfo: newRewardTokenInfo,\r\n    })\r\n  }\r\n  const selectGeyserById = async (id: string) => {\r\n    const geyser = geysers.find((g) => toChecksumAddress(g.id) === toChecksumAddress(id))\r\n    if (geyser) await selectGeyser(geyser)\r\n  }\r\n  const selectGeyserByName = async (name: string) => {\r\n    const geyserId = geyserNameToAddress.get(name)\r\n    if (geyserId) await selectGeyserById(geyserId)\r\n  }\r\n  const getGeyserName = (id: string) => geyserAddressToName.get(toChecksumAddress(id)) || ''\r\n\r\n  useEffect(() => {\r\n    const ids = geyserConfigs.map(geyser => geyser.address.toLowerCase())\r\n    getGeysers({ variables: { ids }})\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n  \r\n    if (geyserData && geyserData.geysers) {\r\n      const currentGeysers = [...geyserData.geysers].map((geyser) => ({ ...geyser, status: geyser.powerSwitch.status })) as Geyser[]\r\n      \r\n      const ids = geyserConfigs.map(geyser => geyser.address.toLowerCase())\r\n      currentGeysers.sort((a, b) => ids.indexOf(a.id) - ids.indexOf(b.id))\r\n      setGeysers(currentGeysers)\r\n\r\n      ;(async () => {\r\n        try {\r\n          // staking and reward tokens might have custom logic for name / symbol\r\n          const geyserAddressToTokens = new Map(\r\n            geyserConfigs.map(({ address, stakingToken, rewardToken }) => [toChecksumAddress(address), { stakingToken, rewardToken }]))\r\n\r\n          const geyserTokens = currentGeysers.map(\r\n            ({ id, stakingToken, rewardToken }) => ({ ...geyserAddressToTokens.get(toChecksumAddress(id))!, stakingTokenAddress: stakingToken, rewardTokenAddress: rewardToken })\r\n          )\r\n\r\n          const geyserTokensSet = new Set(currentGeysers.flatMap(({ stakingToken, rewardToken }) => [stakingToken, rewardToken].map(toChecksumAddress)))\r\n\r\n          const rewardTokens = await Promise.all(geyserTokens.map(({ rewardToken, rewardTokenAddress }) => getRewardTokenInfo(rewardTokenAddress, rewardToken, signerOrProvider)))\r\n          const stakingTokens = await Promise.all(geyserTokens.map(({ stakingToken, stakingTokenAddress }) => getStakingTokenInfo(stakingTokenAddress, stakingToken, signerOrProvider)))\r\n\r\n          const additionalTokensInfos = (\r\n            await Promise.allSettled(\r\n              additionalTokens\r\n                .filter(({ enabled, address }) => enabled && !geyserTokensSet.has(toChecksumAddress(address)))\r\n                .map(({ address }) => getTokenInfo(address, signerOrProvider))\r\n            )\r\n          )\r\n            .filter(({ status }) => status === 'fulfilled')\r\n            .map((result) => (result as PromiseFulfilledResult<TokenInfo>).value)\r\n\r\n\r\n          // all relevant tokens: includes additional tokens from config/additionalTokens.ts and all staking & reward tokens from all geysers\r\n          const newAllTokensInfos = additionalTokensInfos.concat(stakingTokens).concat(rewardTokens)\r\n          setAllTokensInfos(newAllTokensInfos)\r\n        } catch (e) {\r\n          console.error(e)\r\n        }\r\n      })()\r\n    }\r\n  }, [geyserData])\r\n\r\n  useEffect(() => {\r\n    if (geysers.length > 0) {\r\n      selectGeyser(geysers.find(geyser => geyser.id === selectedGeyserInfo.geyser?.id) || geysers[0])\r\n    }\r\n  }, [geysers])\r\n\r\n  if (geyserLoading) return <Centered>Loading...</Centered>\r\n\r\n  return (\r\n    <GeyserContext.Provider\r\n      value={{\r\n        geysers,\r\n        selectedGeyserInfo,\r\n        selectGeyser,\r\n        selectGeyserById,\r\n        selectGeyserByName,\r\n        isStakingAction,\r\n        toggleStakingAction,\r\n        handleGeyserAction,\r\n        allTokensInfos,\r\n        getGeyserName,\r\n        selectedGeyserConfig,\r\n      }}\r\n    >\r\n      {children}\r\n    </GeyserContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Switch } from '@headlessui/react'\r\nimport styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\n\r\ninterface Props {\r\n  enabled: boolean\r\n  options: [string, string]\r\n  toggle: () => void\r\n}\r\n\r\nexport const ToggleView: React.FC<Props> = ({ enabled, toggle, options }) => (\r\n  <Switch className=\"w-full\" checked={!enabled} onChange={toggle}>\r\n    <SwitchContainer className='h-14'>\r\n      <SwitchOptionOne className={!enabled ? 'text-gray' : 'text-darkGray'}>{options[0]}</SwitchOptionOne>\r\n      <span\r\n        className={`block h-full w-1/2 rounded transition duration-300 ease-in-out transform ${\r\n          !enabled ? 'bg-white translate-x-full' : 'bg-white'\r\n        }`}\r\n      />\r\n      <SwitchOptionTwo className={!enabled ? 'text-darkGray' : 'text-gray'}>{options[1]}</SwitchOptionTwo>\r\n    </SwitchContainer>\r\n  </Switch>\r\n)\r\n\r\nconst SwitchContainer = styled.span`\r\n  ${tw`bg-darkGray relative rounded m-auto flex border border-darkGray`}\r\n`\r\n\r\nconst SwitchOptionOne = styled.span`\r\n  ${tw`font-bold uppercase absolute z-10 w-1/2 self-center`}\r\n`\r\n\r\nconst SwitchOptionTwo = styled.span`\r\n  ${tw`font-bold uppercase z-10 w-1/2 self-center`}\r\n`\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const GET_USER_VAULTS = gql`\r\n  query getUserVaults($id: ID!) {\r\n    user(id: $id) {\r\n      vaults(first: 1000) {\r\n        id\r\n        nonce\r\n        claimedReward(first: 1000) {\r\n          id\r\n          token\r\n          amount\r\n          lastUpdate\r\n        }\r\n        locks(first: 1000) {\r\n          id\r\n          token\r\n          amount\r\n          stakeUnits\r\n          lastUpdate\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { useLazyQuery } from '@apollo/client'\r\nimport { createContext, useContext, useEffect, useState } from 'react'\r\nimport { TransactionResponse, TransactionReceipt } from '@ethersproject/providers'\r\nimport { BigNumber } from 'ethers'\r\nimport { withdraw, withdrawRewards, withdrawUnlocked } from 'sdk'\r\nimport { GET_USER_VAULTS } from '../queries/vault'\r\nimport { POLL_INTERVAL } from '../constants'\r\nimport { Lock, Vault } from '../types'\r\nimport Web3Context from './Web3Context'\r\nimport { GeyserContext } from './GeyserContext'\r\nimport { Centered } from '../styling/styles'\r\n\r\nexport const VaultContext = createContext<{\r\n  vaults: Vault[]\r\n  selectedVault: Vault | null\r\n  selectVault: (arg0: Vault) => void\r\n  selectVaultById: (id: string) => void\r\n  currentLock: Lock | null\r\n  withdrawFromVault: ((tokenAddress: string, amount: BigNumber) => Promise<TransactionResponse>) | null\r\n  withdrawRewardsFromVault: ((receipt: TransactionReceipt) => Promise<{ response: TransactionResponse, rewards: BigNumber } | null>) | null\r\n  withdrawUnlockedFromVault: ((tokenAddress: string) => Promise<{ response: TransactionResponse, amount: BigNumber } | null>) | null\r\n}>({\r\n  vaults: [],\r\n  selectedVault: null,\r\n  selectVault: () => {},\r\n  selectVaultById: () => {},\r\n  currentLock: null,\r\n  withdrawFromVault: null,\r\n  withdrawRewardsFromVault: null,\r\n  withdrawUnlockedFromVault: null,\r\n})\r\n\r\nexport const VaultContextProvider: React.FC = ({ children }) => {\r\n  const { address, signer, ready } = useContext(Web3Context)\r\n  const { selectedGeyserInfo: { geyser: selectedGeyser } } = useContext(GeyserContext)\r\n  const [getVaults, { loading: vaultLoading, data: vaultData }] = useLazyQuery(GET_USER_VAULTS, {\r\n    pollInterval: POLL_INTERVAL,\r\n  })\r\n\r\n  const [vaults, setVaults] = useState<Vault[]>([])\r\n  const [selectedVault, setSelectedVault] = useState<Vault | null>(null)\r\n  const [currentLock, setCurrentLock] = useState<Lock | null>(null)\r\n\r\n  const selectVault = (vault: Vault) => setSelectedVault(vault)\r\n  const selectVaultById = (id: string) => setSelectedVault(vaults.find(vault => vault.id === id) || selectedVault)\r\n  const withdrawFromVault = address && signer && selectedVault\r\n    ? (tokenAddress: string, amount: BigNumber) => withdraw(selectedVault.id, tokenAddress, address, amount, signer)\r\n    : null\r\n\r\n  const withdrawRewardsFromVault = address && signer && selectedGeyser\r\n    ? (receipt: TransactionReceipt) => withdrawRewards(selectedGeyser.id, address, receipt, signer)\r\n    : null\r\n\r\n  const withdrawUnlockedFromVault = address && signer && selectedVault\r\n    ? (tokenAddress: string) => withdrawUnlocked(selectedVault.id, tokenAddress, address, signer)\r\n    : null\r\n\r\n  useEffect(() => {\r\n    if (address) getVaults({ variables: { id: address.toLowerCase() } })\r\n  }, [address, getVaults])\r\n\r\n  useEffect(() => {\r\n    if (vaultData && vaultData.user) {\r\n      const userVaults = vaultData.user.vaults as Vault[]\r\n      setVaults(userVaults)\r\n      if (userVaults.length > 0 && !selectedVault) {\r\n        selectVault(userVaults[0])\r\n      } else if (userVaults.length > 0) {\r\n        setSelectedVault(userVaults.find((vault) => vault.id === selectedVault?.id) || userVaults[0])\r\n      } else {\r\n        setSelectedVault(null)\r\n      }\r\n    } else {\r\n      setVaults([])\r\n      setSelectedVault(null)\r\n    }\r\n  }, [vaultData, selectedVault])\r\n\r\n  useEffect(() => {\r\n    if (selectedVault && selectedGeyser) {\r\n      const { stakingToken } = selectedGeyser\r\n      const lockId = `${selectedVault.id}-${selectedGeyser.id}-${stakingToken}`\r\n      setCurrentLock(selectedVault.locks.find((lock) => lock.id === lockId) || null)\r\n    }\r\n  }, [selectedVault, selectedGeyser])\r\n\r\n  if (vaultLoading || (!address && ready)) return <Centered>Loading...</Centered>\r\n\r\n  return (\r\n    <VaultContext.Provider\r\n      value={{\r\n        vaults,\r\n        selectedVault,\r\n        selectVault,\r\n        selectVaultById,\r\n        currentLock,\r\n        withdrawFromVault,\r\n        withdrawRewardsFromVault,\r\n        withdrawUnlockedFromVault,\r\n      }}\r\n    >\r\n      {children}\r\n    </VaultContext.Provider>\r\n  )\r\n}\r\n","import { BigNumber } from 'ethers'\r\nimport { createContext, useCallback, useContext, useEffect, useState } from 'react'\r\nimport { ERC20Balance } from '../sdk'\r\nimport { GeyserContext } from './GeyserContext'\r\nimport Web3Context from './Web3Context'\r\n\r\nexport const WalletContext = createContext<{\r\n  walletAmount: BigNumber\r\n  refreshWalletAmount: () => void\r\n}>({\r\n  walletAmount: BigNumber.from('0'),\r\n  refreshWalletAmount: () => {},\r\n})\r\n\r\nexport const WalletContextProvider: React.FC = ({ children }) => {\r\n  const [walletAmount, setWalletAmount] = useState<BigNumber>(BigNumber.from('0'))\r\n  const { signer } = useContext(Web3Context)\r\n  const { selectedGeyserInfo: { geyser: selectedGeyser } } = useContext(GeyserContext)\r\n\r\n  const getWalletAmount = useCallback(async () => {\r\n    if (selectedGeyser && signer) {\r\n      const { stakingToken } = selectedGeyser\r\n      try {\r\n        const balance = await ERC20Balance(stakingToken, await signer.getAddress(), signer)\r\n        return balance\r\n      } catch (e) {\r\n        console.error(e)\r\n        return BigNumber.from('0')\r\n      }\r\n    }\r\n    return BigNumber.from('0')\r\n  }, [selectedGeyser?.stakingToken, signer])\r\n\r\n  const refreshWalletAmount = async () => {\r\n    const balance = await getWalletAmount()\r\n    setWalletAmount(balance)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    (async () => {\r\n      const value = await getWalletAmount()\r\n      if (mounted && value) {\r\n        setWalletAmount(value)\r\n      }\r\n    })();\r\n    return () => {\r\n      mounted = false\r\n    }\r\n  }, [getWalletAmount])\r\n\r\n  return <WalletContext.Provider value={{ walletAmount, refreshWalletAmount }}>{children}</WalletContext.Provider>\r\n}\r\n","import { BigNumber, BigNumberish } from 'ethers'\r\nimport { toChecksumAddress } from 'web3-utils'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport {\r\n  getBalanceLocked,\r\n  getCurrentUnlockedRewards,\r\n  getCurrentVaultReward,\r\n  getFutureUnlockedRewards,\r\n} from '../sdk/stats'\r\nimport {\r\n  Geyser,\r\n  GeyserStats,\r\n  Lock,\r\n  RewardTokenInfo,\r\n  SignerOrProvider,\r\n  StakingTokenInfo,\r\n  TokenInfo,\r\n  UserStats,\r\n  Vault,\r\n  VaultStats,\r\n  VaultTokenBalance,\r\n} from '../types'\r\nimport { ERC20Balance } from '../sdk'\r\nimport { DAY_IN_SEC, GEYSER_STATS_CACHE_TIME_MS, YEAR_IN_SEC } from '../constants'\r\nimport { getCurrentPrice } from './price'\r\nimport * as ls from './cache'\r\n\r\nconst nowInSeconds = () => Math.round(Date.now() / 1000)\r\n\r\nexport const defaultUserStats = (): UserStats => ({\r\n  apy: 0,\r\n  currentMultiplier: 1.0,\r\n  currentReward: 0,\r\n})\r\n\r\nexport const defaultGeyserStats = (): GeyserStats => ({\r\n  duration: 0,\r\n  totalDeposit: 0,\r\n  totalRewards: 0,\r\n  calcPeriodInDays: 0,\r\n})\r\n\r\nexport const defaultVaultStats = (): VaultStats => ({\r\n  id: '',\r\n  stakingTokenBalance: 0,\r\n  rewardTokenBalance: 0,\r\n  vaultTokenBalances: [],\r\n  currentStake: 0,\r\n})\r\n\r\nconst getGeyserDuration = (geyser: Geyser) => {\r\n  const now = nowInSeconds()\r\n  const { rewardSchedules } = geyser\r\n  const schedulesEndTime = rewardSchedules.map(\r\n    (schedule) => parseInt(schedule.start, 10) + parseInt(schedule.duration, 10),\r\n  )\r\n  return Math.max(...schedulesEndTime.map((endTime) => endTime - now), 0)\r\n}\r\n\r\nexport const getCalcPeriod = (geyser: Geyser) => {\r\n  const { scalingTime } = geyser\r\n  const geyserDuration = getGeyserDuration(geyser)\r\n  return Math.max(Math.min(geyserDuration, parseInt(scalingTime, 10)), DAY_IN_SEC)\r\n}\r\n\r\nconst getGeyserTotalDeposit = (geyser: Geyser, stakingTokenInfo: StakingTokenInfo) => {\r\n  const { totalStake } = geyser\r\n  const { decimals } = stakingTokenInfo\r\n  const stakingTokenAmount = parseFloat(formatUnits(totalStake, decimals))\r\n  return stakingTokenAmount * stakingTokenInfo.price\r\n}\r\n\r\nexport const getGeyserStats = async (\r\n  geyser: Geyser,\r\n  stakingTokenInfo: StakingTokenInfo,\r\n  rewardTokenInfo: RewardTokenInfo,\r\n): Promise<GeyserStats> =>\r\n  ls.computeAndCache<GeyserStats>(\r\n    async () => ({\r\n      duration: getGeyserDuration(geyser),\r\n      totalDeposit: getGeyserTotalDeposit(geyser, stakingTokenInfo),\r\n      totalRewards: await rewardTokenInfo.getTotalRewards(geyser.rewardSchedules),\r\n      calcPeriodInDays: getCalcPeriod(geyser) / DAY_IN_SEC,\r\n    }),\r\n    `${toChecksumAddress(geyser.id)}|stats`,\r\n    GEYSER_STATS_CACHE_TIME_MS,\r\n  )\r\n\r\nconst getTotalStakeUnits = (geyser: Geyser, timestamp: number) => {\r\n  const { totalStake, totalStakeUnits: cachedTotalStakeUnits, lastUpdate } = geyser\r\n  const lastUpdateTime = parseInt(lastUpdate, 10)\r\n  const durationSinceLastUpdate = Math.max(timestamp - lastUpdateTime, 0)\r\n  return BigNumber.from(cachedTotalStakeUnits).add(BigNumber.from(totalStake).mul(durationSinceLastUpdate))\r\n}\r\n\r\nconst getLockStakeUnits = (lock: Lock, timestamp: number) => {\r\n  const { amount, stakeUnits: cachedStakeUnits, lastUpdate } = lock\r\n  const lastUpdateTime = parseInt(lastUpdate, 10)\r\n  const durationSinceLastUpdate = Math.max(timestamp - lastUpdateTime, 0)\r\n  return BigNumber.from(cachedStakeUnits).add(BigNumber.from(amount).mul(durationSinceLastUpdate))\r\n}\r\n\r\n/**\r\n * Returns the amount of reward token that will be unlocked between now and `end`\r\n */\r\nconst getPoolDrip = async (geyser: Geyser, end: number, signerOrProvider: SignerOrProvider) => {\r\n  const geyserAddress = toChecksumAddress(geyser.id)\r\n  return (await getFutureUnlockedRewards(geyserAddress, end, signerOrProvider)).sub(\r\n    await getCurrentUnlockedRewards(geyserAddress, signerOrProvider),\r\n  )\r\n}\r\n\r\n/**\r\n * Returns the amount of reward that the user (vault) will receive after `duration` seconds\r\n * from the stakes in `lock` and `additionalStakes`, assuming that the max reward multiplier will be\r\n * achieved after `duration` seconds\r\n */\r\nexport const getUserDrip = async (\r\n  geyser: Geyser,\r\n  lock: Lock,\r\n  additionalStakes: BigNumberish,\r\n  duration: number,\r\n  signerOrProvider: SignerOrProvider,\r\n) => {\r\n  const now = nowInSeconds()\r\n  const afterDuration = now + duration\r\n  const poolDrip = await getPoolDrip(geyser, afterDuration, signerOrProvider)\r\n  const stakeUnitsFromAdditionalStake = BigNumber.from(additionalStakes).mul(duration)\r\n  const totalStakeUnitsAfterDuration = getTotalStakeUnits(geyser, afterDuration).add(stakeUnitsFromAdditionalStake)\r\n  const lockStakeUnitsAfterDuration = getLockStakeUnits(lock, afterDuration).add(stakeUnitsFromAdditionalStake)\r\n  if (totalStakeUnitsAfterDuration.isZero()) return 0\r\n  return (\r\n    parseInt(poolDrip.mul(lockStakeUnitsAfterDuration).toString(), 10) /\r\n    parseInt(totalStakeUnitsAfterDuration.toString(), 10)\r\n  )\r\n}\r\n\r\nexport const getUserDripAfterWithdraw = async (\r\n  geyser: Geyser,\r\n  lock: Lock,\r\n  withdrawAmount: BigNumberish,\r\n  duration: number,\r\n  signerOrProvider: SignerOrProvider,\r\n) => getUserDrip(geyser, lock, BigNumber.from('0').sub(withdrawAmount), duration, signerOrProvider)\r\n\r\nexport const getStakeDrip = async (\r\n  geyser: Geyser,\r\n  stake: BigNumberish,\r\n  duration: number,\r\n  signerOrProvider: SignerOrProvider,\r\n) => {\r\n  const now = nowInSeconds()\r\n  const afterDuration = now + duration\r\n  const poolDrip = await getPoolDrip(geyser, afterDuration, signerOrProvider)\r\n  const stakeUnitsFromStake = BigNumber.from(stake).mul(duration)\r\n  const totalStakeUnitsAfterDuration = getTotalStakeUnits(geyser, afterDuration).add(stakeUnitsFromStake)\r\n  if (totalStakeUnitsAfterDuration.isZero()) return 0\r\n  return (\r\n    parseInt(poolDrip.mul(stakeUnitsFromStake).toString(), 10) / parseInt(totalStakeUnitsAfterDuration.toString(), 10)\r\n  )\r\n}\r\n\r\nconst calculateAPY = (inflow: number, outflow: number, periods: number) => (1 + outflow / inflow) ** periods - 1\r\n\r\n/**\r\n * APY = (1 + (outflow / inflow)) ** periods - 1\r\n *\r\n * inflow = (amount staked by vault * price of the staking token)\r\n * outflow = (reward that will be unlocked by vault in the next `scalingTime * price of reward token)\r\n * periods = number of `calcPeriod` in a year\r\n *\r\n * calcPeriod = max(min(geyserDuration, scalingTime), day)\r\n */\r\nexport const getUserAPY = async (\r\n  geyser: Geyser,\r\n  lock: Lock | null,\r\n  stakingTokenInfo: StakingTokenInfo,\r\n  rewardTokenInfo: TokenInfo,\r\n  additionalStakes: BigNumberish,\r\n  signerOrProvider: SignerOrProvider,\r\n) => {\r\n  const { scalingTime } = geyser\r\n  const { decimals: stakingTokenDecimals, price: stakingTokenPrice } = stakingTokenInfo\r\n  const { decimals: rewardTokenDecimals, symbol: rewardTokenSymbol } = rewardTokenInfo\r\n  const rewardTokenPrice = await getCurrentPrice(rewardTokenSymbol)\r\n  const calcPeriod = getCalcPeriod(geyser)\r\n  const drip = await (lock\r\n    ? getUserDrip(geyser, lock, additionalStakes, parseInt(scalingTime, 10), signerOrProvider)\r\n    : getStakeDrip(geyser, additionalStakes, parseInt(scalingTime, 10), signerOrProvider))\r\n\r\n  const stakedAmount = BigNumber.from(additionalStakes)\r\n    .add(lock ? lock.amount : '0')\r\n    .toString()\r\n  const inflow = parseFloat(formatUnits(stakedAmount, stakingTokenDecimals)) * stakingTokenPrice\r\n  const outflow = parseFloat(formatUnits(Math.round(drip), rewardTokenDecimals)) * rewardTokenPrice\r\n  const periods = YEAR_IN_SEC / calcPeriod\r\n  return calculateAPY(inflow, outflow, periods)\r\n}\r\n\r\n/**\r\n * Pool APY is the APY for a user who makes an average deposit at the current moment in time\r\n */\r\nconst getPoolAPY = async (\r\n  geyser: Geyser,\r\n  stakingTokenInfo: StakingTokenInfo,\r\n  rewardTokenInfo: TokenInfo,\r\n  signerOrProvider: SignerOrProvider,\r\n) =>\r\n  ls.computeAndCache<number>(\r\n    async () => {\r\n      const { scalingTime } = geyser\r\n      const { price: stakingTokenPrice } = stakingTokenInfo\r\n      const { decimals: rewardTokenDecimals, symbol: rewardTokenSymbol } = rewardTokenInfo\r\n      if (!rewardTokenSymbol) return 0\r\n      const rewardTokenPrice = await getCurrentPrice('AMPL')\r\n\r\n      const inflow = 20000.0 // avg_deposit: 20,000 USD\r\n\r\n      const stake = BigNumber.from(Math.round(inflow / stakingTokenPrice))\r\n      const calcPeriod = getCalcPeriod(geyser)\r\n      const stakeDripAfterPeriod = await getStakeDrip(geyser, stake, parseInt(scalingTime, 10), signerOrProvider)\r\n      if (stakeDripAfterPeriod === 0) return 0\r\n\r\n      const outflow = parseFloat(formatUnits(Math.round(stakeDripAfterPeriod), rewardTokenDecimals)) * rewardTokenPrice\r\n      const periods = YEAR_IN_SEC / calcPeriod\r\n      return calculateAPY(inflow, outflow, periods)\r\n    },\r\n    `${toChecksumAddress(geyser.id)}|poolAPY`,\r\n    GEYSER_STATS_CACHE_TIME_MS,\r\n  )\r\n\r\n/**\r\n * Reward multiplier for the stakes of a vault on a geyser\r\n *\r\n * The minimum multiplier is 1, and the maximum multiplier is scalingCeiling / scalingFloor\r\n *\r\n * If the current multiplier were maxed, then the rewards from unstaking all stakes\r\n * would be maxRewards = (currentUnlockedRewards * lockStakeUnits / totalStakeUnits)\r\n *\r\n * The actual current multiplier is then { minMultiplier + currentRewards / maxRewards * (maxMultiplier - minMultiplier) }\r\n */\r\nconst getCurrentMultiplier = async (geyser: Geyser, vault: Vault, lock: Lock, signerOrProvider: SignerOrProvider) => {\r\n  const { scalingFloor, scalingCeiling } = geyser\r\n  const geyserAddress = toChecksumAddress(geyser.id)\r\n  const vaultAddress = toChecksumAddress(vault.id)\r\n\r\n  const now = nowInSeconds()\r\n  const minMultiplier = 1\r\n  const maxMultiplier = parseInt(scalingCeiling, 10) / parseInt(scalingFloor, 10)\r\n  const totalStakeUnits = getTotalStakeUnits(geyser, now)\r\n  const lockStakeUnits = getLockStakeUnits(lock, now)\r\n  if (totalStakeUnits.isZero() || lockStakeUnits.isZero()) return minMultiplier\r\n\r\n  const currentUnlockedRewards = await getCurrentUnlockedRewards(geyserAddress, signerOrProvider)\r\n  if (currentUnlockedRewards.isZero()) return minMultiplier\r\n\r\n  const currentRewards = parseInt(\r\n    (await getCurrentVaultReward(vaultAddress, geyserAddress, signerOrProvider)).toString(),\r\n    10,\r\n  )\r\n  const maxRewards =\r\n    parseInt(currentUnlockedRewards.mul(lockStakeUnits).toString(), 10) / parseInt(totalStakeUnits.toString(), 10)\r\n  const fraction = currentRewards / maxRewards\r\n\r\n  return minMultiplier + fraction * (maxMultiplier - minMultiplier)\r\n}\r\n\r\nexport const getUserStats = async (\r\n  geyser: Geyser,\r\n  vault: Vault | null,\r\n  lock: Lock | null,\r\n  stakingTokenInfo: StakingTokenInfo,\r\n  rewardTokenInfo: TokenInfo,\r\n  signerOrProvider: SignerOrProvider,\r\n): Promise<UserStats> => {\r\n  if (!vault || !lock) {\r\n    return {\r\n      ...defaultUserStats(),\r\n      apy: await getPoolAPY(geyser, stakingTokenInfo, rewardTokenInfo, signerOrProvider),\r\n    }\r\n  }\r\n  const vaultAddress = toChecksumAddress(vault.id)\r\n  const geyserAddress = toChecksumAddress(geyser.id)\r\n  const { decimals: rewardTokenDecimals } = rewardTokenInfo\r\n  const { amount } = lock\r\n  const currentRewards = await getCurrentVaultReward(vaultAddress, geyserAddress, signerOrProvider)\r\n  const formattedCurrentRewards = parseFloat(formatUnits(currentRewards, rewardTokenDecimals))\r\n  const apy = BigNumber.from(amount).isZero()\r\n    ? await getPoolAPY(geyser, stakingTokenInfo, rewardTokenInfo, signerOrProvider)\r\n    : await getUserAPY(geyser, lock, stakingTokenInfo, rewardTokenInfo, 0, signerOrProvider)\r\n  return {\r\n    apy,\r\n    currentMultiplier: await getCurrentMultiplier(geyser, vault, lock, signerOrProvider),\r\n    currentReward: formattedCurrentRewards,\r\n  }\r\n}\r\n\r\nconst getVaultTokenBalance = async (\r\n  tokenInfo: TokenInfo,\r\n  vaultAddress: string,\r\n  signerOrProvider: SignerOrProvider,\r\n): Promise<VaultTokenBalance> => {\r\n  const tokenAddress = toChecksumAddress(tokenInfo.address)\r\n  const parsedBalance = await ERC20Balance(tokenAddress, vaultAddress, signerOrProvider)\r\n  const lockedBalance = await getBalanceLocked(vaultAddress, tokenAddress, signerOrProvider)\r\n  const parsedUnlockedBalance = parsedBalance.sub(lockedBalance)\r\n  const balance = parseFloat(formatUnits(parsedBalance, tokenInfo.decimals))\r\n  const unlockedBalance = parseFloat(formatUnits(parsedUnlockedBalance, tokenInfo.decimals))\r\n\r\n  return {\r\n    ...tokenInfo,\r\n    address: tokenAddress,\r\n    parsedBalance,\r\n    balance,\r\n    unlockedBalance,\r\n    parsedUnlockedBalance,\r\n  }\r\n}\r\n\r\nexport const getVaultStats = async (\r\n  stakingTokenInfo: StakingTokenInfo,\r\n  rewardTokenInfo: RewardTokenInfo,\r\n  allTokensInfos: TokenInfo[],\r\n  vault: Vault | null,\r\n  lock: Lock | null,\r\n  signerOrProvider: SignerOrProvider,\r\n): Promise<VaultStats> => {\r\n  if (!vault) return defaultVaultStats()\r\n  const vaultAddress = toChecksumAddress(vault.id)\r\n\r\n  const addressSet = new Set<string>([stakingTokenInfo.address, rewardTokenInfo.address].map(toChecksumAddress))\r\n  const stakingTokenBalanceInfo = await getVaultTokenBalance(stakingTokenInfo, vaultAddress, signerOrProvider)\r\n  const rewardTokenBalanceInfo = await getVaultTokenBalance(rewardTokenInfo, vaultAddress, signerOrProvider)\r\n\r\n  const additionalTokenBalances: VaultTokenBalance[] = (\r\n    await Promise.allSettled(\r\n      allTokensInfos\r\n        .map((tokenInfo) => ({ ...tokenInfo, address: toChecksumAddress(tokenInfo.address) }))\r\n        .filter(({ address }) => {\r\n          const isDuplicate = addressSet.has(address)\r\n          if (!isDuplicate) addressSet.add(address)\r\n          return !isDuplicate\r\n        })\r\n        .map((tokenInfo) => getVaultTokenBalance(tokenInfo, vaultAddress, signerOrProvider)),\r\n    )\r\n  )\r\n    .filter(({ status }) => status === 'fulfilled')\r\n    .map((result) => (result as PromiseFulfilledResult<VaultTokenBalance>).value)\r\n\r\n  const vaultTokenBalances = [stakingTokenBalanceInfo, rewardTokenBalanceInfo]\r\n    .concat(additionalTokenBalances)\r\n    .sort((a, b) => (a.symbol < b.symbol ? -1 : 1))\r\n\r\n  const amount = lock ? lock.amount : '0'\r\n  const currentStake = parseFloat(formatUnits(amount, stakingTokenInfo.decimals))\r\n\r\n  return {\r\n    id: vaultAddress,\r\n    stakingTokenBalance: stakingTokenBalanceInfo.balance,\r\n    rewardTokenBalance: rewardTokenBalanceInfo.balance,\r\n    vaultTokenBalances,\r\n    currentStake,\r\n  }\r\n}\r\n","import {  BigNumberish } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport React, { createContext, useContext, useEffect, useState } from 'react'\r\nimport { toChecksumAddress } from 'web3-utils'\r\nimport { getCurrentStakeReward } from 'sdk/stats'\r\nimport { GeyserStats, UserStats, VaultStats } from 'types'\r\nimport { defaultGeyserStats, defaultUserStats, defaultVaultStats, getGeyserStats, getStakeDrip, getUserAPY, getUserDrip, getUserDripAfterWithdraw, getUserStats, getVaultStats } from 'utils/stats'\r\nimport { GeyserContext } from './GeyserContext'\r\nimport { VaultContext } from './VaultContext'\r\nimport Web3Context from './Web3Context'\r\nimport { MONTH_IN_SEC } from '../constants'\r\n\r\nexport const StatsContext = createContext<{\r\n  userStats: UserStats\r\n  geyserStats: GeyserStats\r\n  vaultStats: VaultStats\r\n  computeRewardsFromUnstake: (unstakeAmount: BigNumberish) => Promise<number>\r\n  computeAPYFromAdditionalStakes: (stakeAmount: BigNumberish) => Promise<number>\r\n  computeRewardsFromAdditionalStakes: (stakeAmount: BigNumberish) => Promise<number>\r\n  computeLossFromUnstake1Month: (unstakeAmount: BigNumberish) => Promise<number>\r\n  refreshVaultStats: () => void\r\n}>({\r\n  userStats: defaultUserStats(),\r\n  geyserStats: defaultGeyserStats(),\r\n  vaultStats: defaultVaultStats(),\r\n  computeRewardsFromUnstake: async () => 0,\r\n  computeAPYFromAdditionalStakes: async () => 0,\r\n  computeRewardsFromAdditionalStakes: async () => 0,\r\n  computeLossFromUnstake1Month: async () => 0,\r\n  refreshVaultStats: () => {},\r\n})\r\n\r\nexport const StatsContextProvider: React.FC = ({ children }) => {\r\n  const [userStats, setUserStats] = useState<UserStats>(defaultUserStats())\r\n  const [geyserStats, setGeyserStats] = useState<GeyserStats>(defaultGeyserStats())\r\n  const [vaultStats, setVaultStats] = useState<VaultStats>(defaultVaultStats())\r\n\r\n  const { signer, defaultProvider } = useContext(Web3Context)\r\n  const { selectedGeyserInfo, allTokensInfos } = useContext(GeyserContext)\r\n  const { selectedVault, currentLock } = useContext(VaultContext)\r\n  \r\n\r\n  const computeRewardsFromUnstake = async (unstakeAmount: BigNumberish) => {\r\n    const { geyser: selectedGeyser, rewardTokenInfo } = selectedGeyserInfo\r\n    const { decimals } = rewardTokenInfo\r\n    if (selectedGeyser && selectedVault && signer && decimals) {\r\n      const vaultAddress = toChecksumAddress(selectedVault.id)\r\n      const geyserAddress = toChecksumAddress(selectedGeyser.id)\r\n      const computedRewards = await getCurrentStakeReward(vaultAddress, geyserAddress, unstakeAmount, signer)\r\n      return parseFloat(formatUnits(computedRewards, decimals))\r\n    }\r\n    return 0\r\n  }\r\n\r\n  const computeAPYFromAdditionalStakes = async (stakeAmount: BigNumberish) => {\r\n    const { geyser: selectedGeyser, stakingTokenInfo, rewardTokenInfo } = selectedGeyserInfo\r\n    if (selectedGeyser) {\r\n      return getUserAPY(selectedGeyser, currentLock, stakingTokenInfo, rewardTokenInfo, stakeAmount, signer || defaultProvider)\r\n    }\r\n    return 0\r\n  }\r\n\r\n  const computeRewardsFromAdditionalStakes = async (stakeAmount: BigNumberish) => {\r\n    const { geyser: selectedGeyser, rewardTokenInfo } = selectedGeyserInfo\r\n    if (selectedGeyser) {\r\n      const { decimals } = rewardTokenInfo\r\n      if (geyserStats.duration) {\r\n        const drip = await (currentLock\r\n          ? getUserDrip(selectedGeyser, currentLock, stakeAmount, geyserStats.duration, signer || defaultProvider)\r\n          : getStakeDrip(selectedGeyser, stakeAmount, geyserStats.duration, signer || defaultProvider))\r\n        return parseFloat(formatUnits(Math.round(drip), decimals))\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n\r\n  const computeLossFromUnstake1Month = async (unstakeAmount: BigNumberish) => {\r\n    const { geyser: selectedGeyser, rewardTokenInfo } = selectedGeyserInfo\r\n    if (selectedGeyser) {\r\n      const { decimals } = rewardTokenInfo\r\n      if (currentLock) {\r\n        const normalGains = await getUserDrip(selectedGeyser, currentLock, '0', MONTH_IN_SEC, signer || defaultProvider)\r\n        const gainsAfterUnstake = await getUserDripAfterWithdraw(selectedGeyser, currentLock, unstakeAmount, MONTH_IN_SEC, signer || defaultProvider)\r\n        return parseFloat(formatUnits(Math.round(normalGains - gainsAfterUnstake), decimals))\r\n      }\r\n    }\r\n    return 0\r\n  }\r\n\r\n  const refreshVaultStats = async () => {\r\n    const { geyser: selectedGeyser, stakingTokenInfo, rewardTokenInfo } = selectedGeyserInfo\r\n    if (selectedGeyser && stakingTokenInfo.address && rewardTokenInfo.address) {\r\n      setVaultStats(await getVaultStats(stakingTokenInfo, rewardTokenInfo, allTokensInfos, selectedVault, currentLock, signer || defaultProvider))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    (async () => {\r\n      try {\r\n        const { geyser: selectedGeyser, stakingTokenInfo, rewardTokenInfo } = selectedGeyserInfo\r\n        if (selectedGeyser && stakingTokenInfo.address && rewardTokenInfo.address) {\r\n          const newGeyserStats = await getGeyserStats(selectedGeyser, stakingTokenInfo, rewardTokenInfo)\r\n          const newUserStats = await getUserStats(selectedGeyser, selectedVault, currentLock, stakingTokenInfo, rewardTokenInfo, signer || defaultProvider)\r\n          const newVaultStats = await getVaultStats(stakingTokenInfo, rewardTokenInfo, allTokensInfos, selectedVault, currentLock, signer || defaultProvider)\r\n          if (mounted) {\r\n            setGeyserStats(newGeyserStats)\r\n            setUserStats(newUserStats)\r\n            setVaultStats(newVaultStats)\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.error(e)\r\n      }\r\n    })();\r\n    return () => { mounted = false }\r\n  }, [selectedGeyserInfo, selectedVault, currentLock])\r\n\r\n  return (\r\n    <StatsContext.Provider\r\n      value={{\r\n        userStats,\r\n        geyserStats,\r\n        vaultStats,\r\n        computeRewardsFromUnstake,\r\n        computeAPYFromAdditionalStakes,\r\n        computeRewardsFromAdditionalStakes,\r\n        computeLossFromUnstake1Month,\r\n        refreshVaultStats,\r\n      }}\r\n    >\r\n      {children}\r\n    </StatsContext.Provider>\r\n  )\r\n}\r\n","import numeral from 'numeral-es6'\r\nimport { DAY_IN_SEC, HOUR_IN_SEC, MIN_IN_SEC, MONTH_IN_SEC, WEEK_IN_SEC } from '../constants'\r\n\r\nexport const safeNumeral = (n: number, f: string): string => {\r\n  const safeNum: string = numeral(n).format(f)\r\n  return safeNum === 'NaN' ? numeral(0).format(f) : safeNum\r\n}\r\n\r\nexport const formatWithDecimals = (value: string, decimals = 2) => {\r\n  if (decimals === 0) return value\r\n  const parts = value.split('.')\r\n  if (parts.length > 1) {\r\n    if (parts[1].length >= decimals) return value\r\n    const missingDecimals = decimals - parts[1].length\r\n    return `${value}${Array(missingDecimals).fill('0').join('')}`\r\n  }\r\n  return `${value}.${Array(decimals).fill('0').join('')}`\r\n}\r\n\r\nexport const humanReadableDuration = (duration: number) => {\r\n  const durationLabel = [\r\n    {\r\n      duration: MONTH_IN_SEC,\r\n      label: 'month',\r\n    },\r\n    {\r\n      duration: WEEK_IN_SEC,\r\n      label: 'week',\r\n    },\r\n    {\r\n      duration: DAY_IN_SEC,\r\n      label: 'day',\r\n    },\r\n    {\r\n      duration: HOUR_IN_SEC,\r\n      label: 'hour',\r\n    },\r\n    {\r\n      duration: MIN_IN_SEC,\r\n      label: 'minute',\r\n    },\r\n    {\r\n      duration: 1,\r\n      label: 'second',\r\n    },\r\n  ]\r\n\r\n  const index =\r\n    (durationLabel.findIndex(({ duration: d }) => duration >= d) + durationLabel.length) % durationLabel.length\r\n  const { duration: d, label } = durationLabel[index]\r\n  const n = duration / d\r\n  return {\r\n    numeral: safeNumeral(n, '0'),\r\n    units: `${label}${n > 1 ? 's' : ''}`,\r\n  }\r\n}\r\n","import { BigNumberish } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport { safeNumeral } from './numeral'\r\n\r\nexport const amountOrZero = (amount?: BigNumberish) => amount || '0'\r\n\r\nexport const formatAmount = (amount: BigNumberish, decimals: number) =>\r\n  safeNumeral(parseFloat(formatUnits(amount, decimals)), '0.00000')\r\n","import { BigNumber } from 'ethers'\r\nimport { formatUnits, parseUnits } from 'ethers/lib/utils'\r\nimport styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\n\r\ninterface Props extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\r\n  precision: number\r\n  maxValue: BigNumber\r\n  onChange?: (value: string) => void\r\n}\r\n\r\nexport const PositiveInput: React.FC<Props> = (props) => {\r\n  const { onChange, precision, maxValue } = props\r\n\r\n  const respectsPrecision = (value: string) => {\r\n    if (value) {\r\n      const parts = value.split('.')\r\n      return parts.length > 1 ? parts[1].length <= precision : true\r\n    }\r\n    return true\r\n  }\r\n\r\n  const respectsMax = (value: string) => {\r\n    if (value) {\r\n      return parseUnits(value, precision).lte(maxValue)\r\n    }\r\n    return true\r\n  }\r\n\r\n  const positiveOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const pattern = new RegExp(`(^\\\\d+$|^\\\\d+\\\\.\\\\d+$|^\\\\d+\\\\.$|^$)`)\r\n    const { value } = e.currentTarget\r\n    if (onChange && pattern.test(value) && respectsPrecision(value) && respectsMax(value)) {\r\n      onChange(value)\r\n    }\r\n  }\r\n\r\n  const setMax = () => {\r\n    if (onChange)\r\n      onChange(formatUnits(maxValue, precision))\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Input {...props} onChange={positiveOnChange} />\r\n      <Button onClick={setMax}>max</Button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  ${tw`flex flex-row border border-gray h-fit mb-3 mt-1 rounded-md`}\r\n`\r\n\r\nconst Input = styled.input`\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n  ::-webkit-outer-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n  ${tw`w-10/12 font-semibold tracking-wider rounded-lg p-3 text-base`}\r\n  ${tw`focus:outline-none`}\r\n`\r\n\r\nconst Button = styled.button`\r\n  ${tw`uppercase focus:outline-none p-1 text-sm w-2/12 text-link bg-0D23EE bg-opacity-5`}\r\n`\r\n","import { useEffect, useState } from 'react'\r\nimport { TransactionResponse, TransactionReceipt } from '@ethersproject/providers'\r\nimport { TxState } from '../constants'\r\n\r\ntype SubmitFunction = (receipt?: TransactionReceipt) => Promise<TransactionResponse | undefined>\r\n\r\ntype CurrentTxState = {\r\n  state: TxState\r\n  response?: TransactionResponse\r\n  receipt?: TransactionReceipt\r\n}\r\n\r\nexport type TxStateMachine = CurrentTxState & {\r\n  submitTx: (receipt?: TransactionReceipt) => Promise<void>\r\n  refresh: () => void\r\n}\r\n\r\nexport const useTxStateMachine = (submit: SubmitFunction) => {\r\n  const [currentTxState, setCurrentTxState] = useState<CurrentTxState>({ state: TxState.PENDING })\r\n\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      const { response } = currentTxState\r\n      try {\r\n        if (response) {\r\n          const receipt = await response.wait()\r\n          setCurrentTxState((txState) => ({ ...txState, receipt, state: TxState.MINED }))\r\n        }\r\n      } catch (e) {\r\n        setCurrentTxState((txState) => ({ ...txState, state: TxState.FAILED }))\r\n      }\r\n    })()\r\n  }, [currentTxState.response])\r\n\r\n  const submitTx = async (receipt?: TransactionReceipt) => {\r\n    try {\r\n      const response = await submit(receipt)\r\n      if (response) {\r\n        setCurrentTxState((txState) => ({ ...txState, response, state: TxState.SUBMITTED }))\r\n      } else {\r\n        setCurrentTxState((txState) => ({ ...txState, state: TxState.FAILED }))\r\n      }\r\n    } catch (e) {\r\n      setCurrentTxState((txState) => ({ ...txState, state: TxState.FAILED }))\r\n    }\r\n  }\r\n\r\n  const refresh = () => {\r\n    setCurrentTxState({ state: TxState.PENDING })\r\n  }\r\n\r\n  return {\r\n    submitTx,\r\n    refresh,\r\n    ...currentTxState,\r\n  }\r\n}\r\n","import { Dialog, Transition } from '@headlessui/react'\r\nimport { createContext, Fragment, MutableRefObject, useRef } from 'react'\r\nimport styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\n\r\n// Modal needs a focusable element to function correctly.\r\n// Use a context to pass the ref object down to Modal.Body,\r\n// which will make the modal focus on Modal.Body, if given\r\nconst ModalContext = createContext<{\r\n  ref: MutableRefObject<null> | null\r\n}>({\r\n  ref: null\r\n})\r\n\r\nconst Title: React.FC = ({ children }) => (\r\n  <Dialog.Title\r\n    as=\"h3\"\r\n    className=\"text-lg font-medium leading-6 text-gray-900\"\r\n  >\r\n    {children}\r\n  </Dialog.Title>\r\n)\r\n\r\nconst Body: React.FC = ({ children }) => (\r\n  <ModalContext.Consumer>\r\n    {({ ref }) => (\r\n      <MessageContainer>\r\n        <Message ref={ref}>\r\n          {children}\r\n        </Message>\r\n      </MessageContainer>\r\n    )}\r\n  </ModalContext.Consumer>\r\n)\r\n\r\nconst Footer: React.FC = ({ children }) => (\r\n  <FooterContainer>\r\n    {children}\r\n  </FooterContainer>\r\n)\r\n\r\ninterface ModalSubComponents {\r\n  Title: React.FC\r\n  Body: React.FC\r\n  Footer: React.FC\r\n}\r\n\r\ninterface Props {\r\n  onClose: () => void\r\n  open: boolean\r\n  initialFocus?: MutableRefObject<null>\r\n  disableClose?: boolean\r\n}\r\n\r\nconst ModalRoot: React.FC<Props> = ({ open, onClose, disableClose, children, initialFocus }) => {\r\n  const ref = initialFocus ?? useRef(null)\r\n\r\n  return (\r\n    <ModalContext.Provider value={{ ref }}>\r\n      <Transition appear show={open} as={Fragment}>\r\n        <Dialog\r\n          as=\"div\"\r\n          className=\"fixed inset-0 z-10 overflow-y-auto\"\r\n          onClose={disableClose ? () => {} : onClose}\r\n          initialFocus={ref}\r\n        >\r\n          <Container>\r\n            <Dialog.Overlay className=\"fixed inset-0 bg-black opacity-30\"/>\r\n            {/* This element is to trick the browser into centering the modal contents. */}\r\n            <span\r\n              className=\"inline-block h-screen align-middle\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              &#8203;\r\n            </span>\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <ContentContainer>\r\n                {children}\r\n              </ContentContainer>\r\n            </Transition.Child>\r\n          </Container>\r\n        </Dialog>\r\n      </Transition>\r\n    </ModalContext.Provider>\r\n  )\r\n}\r\n\r\nexport const Modal: React.FC<Props> & ModalSubComponents = Object.assign(ModalRoot, { Title, Body, Footer })\r\n\r\nconst Container = styled.div`\r\n  ${tw`min-h-screen px-4 text-center`}\r\n`\r\n\r\nconst ContentContainer = styled.div`\r\n  ${tw`inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-2xl`}\r\n`\r\n\r\nconst MessageContainer = styled.div`\r\n  ${tw`mt-2`}\r\n`\r\n\r\nconst Message = styled.p`\r\n  ${tw`text-sm`}\r\n`\r\n\r\nconst FooterContainer = styled.div`\r\n  ${tw`mt-8 flex justify-center`}\r\n`\r\n","import styled from \"styled-components/macro\"\r\nimport tw from \"twin.macro\"\r\nimport { ModalButton } from \"styling/styles\"\r\n\r\n\r\nexport const ProcessingButton = () => (\r\n  <DisabledButton disabled isLoading>\r\n    Processing\r\n  </DisabledButton>\r\n)\r\n\r\nconst DisabledButton = styled(ModalButton)`\r\n  ${tw`bg-lightGray cursor-not-allowed border-none text-white cursor-not-allowed`}\r\n`\r\n","import { EXTERNAL_LINKS } from \"../constants\";\r\n\r\ninterface Props {\r\n  txHash?: string\r\n}\r\n\r\nexport const EtherscanLink: React.FC<Props> = ({ txHash }) => (\r\n  <a rel=\"noreferrer\" className=\"text-link\" href={`${EXTERNAL_LINKS.etherscan}/${txHash}`} target=\"_blank\">Etherscan</a>\r\n)\r\n","import { TxStateMachine } from \"hooks/useTxStateMachine\"\r\nimport { ReactNode } from \"react\"\r\nimport { TxState } from \"../constants\"\r\nimport { EtherscanLink } from \"./EtherscanLink\"\r\n\r\ninterface Props {\r\n  txStateMachine: TxStateMachine\r\n  successMessage: ReactNode\r\n}\r\n\r\nexport const SingleTxMessage: React.FC<Props> = ({ txStateMachine: { state, response }, successMessage }) => {\r\n  const getTxMessage = () => {\r\n    switch(state) {\r\n      case TxState.PENDING:\r\n        return <span>Waiting for user to confirm transaction...</span>\r\n      case TxState.SUBMITTED:\r\n        return (\r\n          <span>\r\n            Transaction submitted to blockchain, waiting to be mined.{' '}\r\n            View on <EtherscanLink txHash={response?.hash} />\r\n          </span>\r\n        )\r\n      case TxState.MINED:\r\n        return (\r\n          <>\r\n            {successMessage}{' '}\r\n            <span>View on <EtherscanLink txHash={response?.hash} /></span>\r\n          </>\r\n        )\r\n      case TxState.FAILED:\r\n        return <>Transaction failed.</>\r\n      default:\r\n        return <></>\r\n    }\r\n  }\r\n  return getTxMessage()\r\n}\r\n","import { ReactNode, useEffect, useState } from \"react\"\r\nimport { TransactionResponse } from \"@ethersproject/providers\"\r\nimport { useTxStateMachine } from \"hooks/useTxStateMachine\"\r\nimport { ModalButton } from \"styling/styles\"\r\nimport { Modal } from \"./Modal\"\r\nimport { ProcessingButton } from \"./ProcessingButton\"\r\nimport { TxState } from \"../constants\"\r\nimport { SingleTxMessage } from \"./SingleTxMessage\"\r\n\r\ninterface Props {\r\n  submit: () => Promise<TransactionResponse | undefined>\r\n  txSuccessMessage?: ReactNode\r\n  open: boolean\r\n  onClose: () => void\r\n}\r\n\r\nexport const SingleTxModal: React.FC<Props> = ({ submit, txSuccessMessage, open, onClose, children }) => {\r\n  const txStateMachine = useTxStateMachine(submit)\r\n  const { state, submitTx, refresh } = txStateMachine\r\n  const [successMessage, setSuccessMessage] = useState<ReactNode>(null)\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      refresh()\r\n      setSuccessMessage(txSuccessMessage || null)\r\n      submitTx()\r\n    }\r\n  }, [open])\r\n\r\n  const isProcessing = () => [TxState.PENDING, TxState.SUBMITTED].includes(state)\r\n\r\n  return (\r\n    <Modal onClose={onClose} open={open} disableClose={isProcessing()}>\r\n      <Modal.Title>\r\n        Processing Transaction\r\n      </Modal.Title>\r\n      <Modal.Body>\r\n        <SingleTxMessage successMessage={successMessage} txStateMachine={txStateMachine} />\r\n        {children}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        {isProcessing() ? (\r\n          <ProcessingButton />\r\n        ) : (\r\n          <ModalButton onClick={onClose}> Close </ModalButton>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n","import styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\n\r\ninterface Props {\r\n  onClick: () => void\r\n  displayText: string\r\n  disabled?: boolean\r\n}\r\n\r\nexport const GeyserInteractionButton: React.FC<Props> = ({ onClick, displayText, disabled }) => (\r\n    <Button disabled={disabled} onClick={onClick}>\r\n      {displayText}\r\n    </Button>\r\n  )\r\n\r\nconst Button = styled.button`\r\n  ${tw`h-16 border-2 rounded-lg bg-primary text-secondary uppercase font-semibold`};\r\n  ${tw`hover:border-primary hover:bg-secondary hover:text-primary`}\r\n  ${tw`disabled:bg-lightGray disabled:cursor-not-allowed disabled:border-none disabled:text-white`}\r\n`\r\n","import { BigNumber, BigNumberish } from 'ethers'\r\nimport styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\nimport { formatAmount } from 'utils/amount'\r\n\r\ninterface Props {\r\n  parsedAmount: BigNumber\r\n  currentAmount: BigNumber\r\n  decimals: number\r\n  symbol: string\r\n  isStakingAction: boolean\r\n}\r\n\r\nexport const UserBalance: React.FC<Props> = ({ parsedAmount, currentAmount, decimals, symbol, isStakingAction }) => {\r\n  const formatDisplayAmount = (amt: BigNumberish) => formatAmount(amt, decimals)\r\n  return (\r\n    <FlexDiv>\r\n      {parsedAmount.isZero() ? (\r\n        <Text>{isStakingAction ? 'Wallet' : 'Staked'} balance: {formatDisplayAmount(currentAmount)} ({symbol})</Text>\r\n      ) : (\r\n        <Text>New {isStakingAction ? 'wallet' : 'stake'} balance: {formatDisplayAmount(currentAmount.sub(parsedAmount))} ({symbol})</Text>\r\n      )}\r\n    </FlexDiv>\r\n  )\r\n}\r\n\r\nconst Text = styled.span`\r\n  ${tw`text-xs sm:text-sm`}\r\n`\r\n\r\nconst FlexDiv = styled.div`\r\n  ${tw`flex`}\r\n`\r\n","export default __webpack_public_path__ + \"static/media/rewardSymbol.7d66a78e.svg\";","export default __webpack_public_path__ + \"static/media/info.4a6e2494.svg\";","import { Popover, Transition } from '@headlessui/react'\r\nimport { Fragment } from 'react'\r\nimport styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\nimport info from 'assets/info.svg'\r\nimport { TooltipMessage } from 'types'\r\nimport { ResponsiveSubText, ResponsiveText } from 'styling/styles'\r\n\r\ninterface Props {\r\n  messages: TooltipMessage[]\r\n  classNames?: string\r\n  panelClassnames?: string\r\n}\r\n\r\nexport const Tooltip: React.FC<Props> = ({ messages, classNames, panelClassnames }) => (\r\n  <Popover className={`font-normal relative bg-white ${classNames}`}>\r\n    <Popover.Button className=\"flex\">\r\n      <img src={info} alt=\"Info\" />\r\n    </Popover.Button>\r\n    <Transition\r\n      as={Fragment}\r\n      enter=\"transition ease-out duration-200\"\r\n      enterFrom=\"opacity-0 translate-y-1\"\r\n      enterTo=\"opacity-100 translate-y-0\"\r\n      leave=\"transition ease-in duration-150\"\r\n      leaveFrom=\"opacity-100 translate-y-0\"\r\n      leaveTo=\"opacity-0 translate-y-1\"\r\n    >\r\n      <Popover.Panel className={`absolute z-30 w-screen max-w-sm px-4 mt-3 transform ${panelClassnames}`}>\r\n        <OuterLayer>\r\n          <InnerLayer>\r\n            {messages.map(({ title, body }) => (\r\n              <Message key={title}>\r\n                <Title>{title}</Title>\r\n                <Body>{body}</Body>\r\n              </Message>\r\n            ))}\r\n          </InnerLayer>\r\n        </OuterLayer>\r\n      </Popover.Panel>\r\n    </Transition>\r\n  </Popover>\r\n)\r\n\r\nconst OuterLayer = styled.div`\r\n  ${tw`shadow-all max-w-sm rounded-lg overflow-hidden ring-1 ring-black ring-opacity-5`}\r\n`\r\n\r\nconst InnerLayer = styled.div`\r\n  ${tw`relative grid gap-6 bg-white p-6`}\r\n`\r\n\r\nconst Message = styled.div`\r\n  ${tw`m-auto`}\r\n`\r\n\r\nconst Title = styled.p`\r\n  ${ResponsiveText}\r\n  ${tw`text-gray mb-2`}\r\n`\r\n\r\nconst Body = styled.p`\r\n  ${ResponsiveSubText}\r\n  ${tw`text-black text-left`}\r\n`\r\n","import styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\nimport rewardSymbol from 'assets/rewardSymbol.svg'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { StatsContext } from 'context/StatsContext'\r\nimport { formatWithDecimals } from 'utils/numeral'\r\nimport { BigNumber } from 'ethers'\r\nimport { Tooltip } from 'components/Tooltip'\r\nimport { CardValue, CardLabel } from 'styling/styles'\r\nimport { GeyserContext } from 'context/GeyserContext'\r\nimport { GET_ESTIMATED_REWARDS_MSG } from '../../constants'\r\n\r\ninterface Props {\r\n  parsedUserInput: BigNumber\r\n}\r\n\r\nexport const EstimatedRewards: React.FC<Props> = ({ parsedUserInput }) => {\r\n  const [rewards, setRewards] = useState<string>('0.00')\r\n  const { selectedGeyserInfo: { rewardTokenInfo: { symbol } } } = useContext(GeyserContext)\r\n  const { computeRewardsFromAdditionalStakes, geyserStats: { calcPeriodInDays } } = useContext(StatsContext)\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setRewards(\r\n        parsedUserInput.isZero() ? '0.00' : formatWithDecimals(`${await computeRewardsFromAdditionalStakes(parsedUserInput)}`, 2)\r\n      )\r\n    })();\r\n  }, [parsedUserInput])\r\n\r\n  return (\r\n    <EstimatedRewardsContainer>\r\n      <ColoredDiv />\r\n      <Icon src={rewardSymbol} alt=\"Rewards Symbol\" />\r\n      <RewardsTextContainer>\r\n        <CardLabel>\r\n          Your Estimated Rewards\r\n          <Tooltip\r\n            classNames=\"my-auto ml-2 normal-case tracking-wide\"\r\n            panelClassnames=\"-translate-x-3/4 xs:left-1/2 xs:-translate-x-1/2\"\r\n            messages={[{ title: 'Estimated Rewards', body: GET_ESTIMATED_REWARDS_MSG() }]}\r\n          />\r\n        </CardLabel>\r\n        <CardValue>\r\n          {rewards} {symbol}{' '}\r\n          <span>\r\n            {parsedUserInput.gt(0) && calcPeriodInDays > 0 ? `in ${calcPeriodInDays} day${calcPeriodInDays > 1 ? 's' : ''}` : ''}\r\n          </span>\r\n        </CardValue>\r\n      </RewardsTextContainer>\r\n    </EstimatedRewardsContainer>\r\n  )\r\n}\r\n\r\nconst EstimatedRewardsContainer = styled.div`\r\n  ${tw`h-120px shadow-all-xs my-6 border border-lightGray rounded flex flex-row tracking-wide`}\r\n`\r\n\r\nconst ColoredDiv = styled.div`\r\n  ${tw`rounded-l-sm h-full bg-radicalRed w-4`}\r\n`\r\n\r\nconst Icon = styled.img`\r\n  ${tw`mx-4 w-0`}\r\n  ${tw`sm:w-auto`}\r\n`\r\n\r\nconst RewardsTextContainer = styled.div`\r\n  ${tw`flex flex-col my-auto`}\r\n`\r\n","export default __webpack_public_path__ + \"static/media/warning.dc79fe13.svg\";","import tw from 'twin.macro'\r\nimport styled from 'styled-components/macro'\r\nimport warning from 'assets/warning.svg'\r\n\r\ninterface Props {\r\n  onClick: () => void\r\n}\r\n\r\nexport const ConnectWalletWarning: React.FC<Props> = ({ onClick }) => (\r\n  <ConnectWalletWarningContainer>\r\n    <ColoredDiv />\r\n    <Content>\r\n      <MessageContainer>\r\n        <Img src={warning} alt=\"Warning\" />\r\n        <Message>Connect Your Ethereum Wallet</Message>\r\n      </MessageContainer>\r\n      <ButtonWrapper>\r\n        <Button onClick={onClick}>Connect</Button>\r\n      </ButtonWrapper>\r\n    </Content>\r\n  </ConnectWalletWarningContainer>\r\n)\r\n\r\nconst Content = styled.div`\r\n  ${tw`flex flex-row flex-grow`}\r\n`\r\n\r\nconst ConnectWalletWarningContainer = styled.div`\r\n  ${tw`h-80px shadow-all-xs mt-1 mb-5 border border-primary rounded flex flex-row tracking-wider`}\r\n`\r\n\r\nconst ColoredDiv = styled.div`\r\n  ${tw`h-full w-4 rounded-l-sm bg-primary`}\r\n`\r\n\r\nconst Img = styled.img`\r\n  ${tw`w-0 mx-4 h-3/5 my-auto`}\r\n  ${tw`sm:mx-8 sm:w-auto`}\r\n`\r\n\r\nconst Message = styled.span`\r\n  ${tw`my-auto text-primary`}\r\n`\r\n\r\nconst ButtonWrapper = styled.div`\r\n  ${tw`flex-grow`}\r\n`\r\n\r\nconst Button = styled.button`\r\n  ${tw`uppercase font-bold bg-primary text-secondary w-full h-full`}\r\n  ${tw`sm:text-lg`}\r\n`\r\n\r\nconst MessageContainer = styled.div`\r\n  ${tw`flex flex-row flex-grow`}\r\n`\r\n","import { useContext, useState, useEffect } from 'react'\r\nimport styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\nimport { BigNumber } from 'ethers'\r\nimport { GeyserContext } from 'context/GeyserContext'\r\nimport { StatsContext } from 'context/StatsContext'\r\nimport { CardValue, CardLabel } from 'styling/styles'\r\nimport { amountOrZero } from 'utils/amount'\r\nimport { formatWithDecimals } from 'utils/numeral'\r\n\r\ninterface Props {\r\n  userInput: string\r\n  parsedUserInput: BigNumber\r\n}\r\n\r\nexport const UnstakeSummary: React.FC<Props> = ({ userInput, parsedUserInput }) => {\r\n  const {\r\n    selectedGeyserInfo: {\r\n      rewardTokenInfo: { symbol: rewardTokenSymbol },\r\n      stakingTokenInfo: { symbol: stakingTokenSymbol },\r\n    },\r\n  } = useContext(GeyserContext)\r\n  const { computeRewardsFromUnstake } = useContext(StatsContext)\r\n\r\n  const [rewardAmount, setRewardAmount] = useState<string>('0.00')\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setRewardAmount(formatWithDecimals(`${await computeRewardsFromUnstake(parsedUserInput)}`, 2))\r\n    })();\r\n  }, [parsedUserInput])\r\n\r\n  return (\r\n    <Container>\r\n      <SummaryCard>\r\n        <Content>\r\n          <Label>\r\n            Amount to Unstake\r\n          </Label>\r\n          <Value>\r\n            <Amount>{`${formatWithDecimals(amountOrZero(userInput).toString(), 2)} `}</Amount>\r\n            <span>{stakingTokenSymbol}</span>\r\n          </Value>\r\n        </Content>\r\n      </SummaryCard>\r\n      <SummaryCard>\r\n        <Content>\r\n          <Label>\r\n            Rewards Claimed\r\n          </Label>\r\n          <Value>\r\n            <Amount>{`${rewardAmount} `}</Amount>\r\n            <span>{rewardTokenSymbol}</span>\r\n          </Value>\r\n        </Content>\r\n      </SummaryCard>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  ${tw`grid grid-cols-2 gap-x-4 my-6`}\r\n`\r\n\r\nconst SummaryCard = styled.div`\r\n  ${tw`h-120px shadow-all-xs border border-lightGray rounded flex flex-col my-auto tracking-wide`}\r\n`\r\n\r\nconst Label = styled(CardLabel)`\r\n  ${tw`text-sm sm:text-base text-left`}\r\n`\r\n\r\nconst Value = styled(CardValue)`\r\n  ${tw`text-sm sm:text-base flex-wrap text-left`}\r\n`\r\n\r\nconst Amount = styled.span`\r\n  ${tw`whitespace-pre-wrap`}\r\n`\r\n\r\nconst Content = styled.div`\r\n  ${tw`flex flex-col my-auto ml-4`}\r\n`\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport { safeNumeral } from 'utils/numeral'\r\nimport { StatsContext } from 'context/StatsContext'\r\nimport { GeyserContext } from 'context/GeyserContext'\r\nimport styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\nimport { BigNumber } from 'ethers'\r\nimport { ModalButton } from 'styling/styles'\r\nimport { Modal } from 'components/Modal'\r\n\r\ninterface Props {\r\n  open: boolean\r\n  onClose: () => void\r\n  onConfirm: () => void\r\n  parsedUserInput: BigNumber\r\n}\r\n\r\nexport const UnstakeConfirmModal: React.FC<Props> = ({ parsedUserInput, open, onClose, onConfirm }) => {\r\n  const { computeLossFromUnstake1Month } = useContext(StatsContext)\r\n  const { selectedGeyserInfo: { rewardTokenInfo: { symbol } } } = useContext(GeyserContext)\r\n  const [loss, setLoss] = useState<string>('0.00')\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setLoss(safeNumeral(await computeLossFromUnstake1Month(parsedUserInput), '0,0.00'))\r\n    })();\r\n  }, [parsedUserInput])\r\n\r\n  return (\r\n    <Modal onClose={onClose} open={open}>\r\n      <Modal.Title>\r\n        Are you sure?\r\n      </Modal.Title>\r\n      <Modal.Body>\r\n        If you stayed deposited for 1 more month,{' '}\r\n        you could be eligible for an additional{' '}\r\n        <b>\r\n          {loss}{' '}\r\n          {symbol}\r\n        </b>{' '}\r\n        reward.\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <ModalButton className=\"mr-4\" onClick={onClose}>No, Wait</ModalButton>\r\n        <ConfirmButton onClick={onConfirm}>Withdraw Anyway</ConfirmButton>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst ConfirmButton = styled(ModalButton)`\r\n  ${tw`rounded-lg bg-primary text-secondary font-semibold`}\r\n`\r\n","import { TransactionResponse, TransactionReceipt } from '@ethersproject/providers'\r\nimport { useTxStateMachine, TxStateMachine } from 'hooks/useTxStateMachine'\r\nimport { ReactNode, useEffect, useState } from 'react'\r\nimport { ModalButton } from 'styling/styles'\r\nimport { Modal } from 'components/Modal'\r\nimport { ProcessingButton } from 'components/ProcessingButton'\r\nimport { SingleTxMessage } from 'components/SingleTxMessage'\r\nimport { TxState } from '../../constants'\r\n\r\ninterface Props {\r\n  open: boolean\r\n  onClose: () => void\r\n  unstake: () => Promise<TransactionResponse | undefined>\r\n  unstakeSuccessMessage: ReactNode\r\n\r\n  withdrawStaking: () => Promise<TransactionResponse | undefined>\r\n  withdrawStakingTxMessage: (txStateMachine: TxStateMachine) => ReactNode\r\n\r\n  withdrawReward: (receipt?: TransactionReceipt) => Promise<TransactionResponse | undefined>\r\n  withdrawRewardTxMessage: (TxStateMachine: TxStateMachine) => ReactNode\r\n}\r\n\r\nexport const UnstakeTxModal: React.FC<Props> = ({ open, onClose, unstake, unstakeSuccessMessage, withdrawStaking, withdrawReward, withdrawStakingTxMessage, withdrawRewardTxMessage, children }) => {\r\n  const unstakeTxStateMachine = useTxStateMachine(unstake)\r\n  const withdrawStakeStateMachine = useTxStateMachine(withdrawStaking)\r\n  const withdrawRewardStateMachine = useTxStateMachine(withdrawReward)\r\n  const [submittedWithdraw, setSubmittedWithdraw] = useState<boolean>(false)\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      setSubmittedWithdraw(false)\r\n      unstakeTxStateMachine.refresh()\r\n      withdrawStakeStateMachine.refresh()\r\n      withdrawRewardStateMachine.refresh()\r\n      unstakeTxStateMachine.submitTx()\r\n    }\r\n  }, [open])\r\n\r\n  useEffect(() => {\r\n    const { state: unstakeState, receipt: unstakeReceipt } = unstakeTxStateMachine\r\n    if (unstakeState === TxState.MINED && unstakeReceipt && !submittedWithdraw) {\r\n      withdrawStakeStateMachine.submitTx()\r\n      withdrawRewardStateMachine.submitTx(unstakeReceipt)\r\n      setSubmittedWithdraw(true)\r\n    }\r\n  }, [unstakeTxStateMachine])\r\n\r\n  const getModalBody = () => {\r\n    if (unstakeTxStateMachine.state !== TxState.MINED)\r\n      return <SingleTxMessage txStateMachine={unstakeTxStateMachine} successMessage={unstakeSuccessMessage} />\r\n    return (\r\n      <div className=\"flex flex-col space-y-2\">\r\n        <div><SingleTxMessage txStateMachine={unstakeTxStateMachine} successMessage={unstakeSuccessMessage} /></div>\r\n        <div>{withdrawStakingTxMessage(withdrawStakeStateMachine)}</div>\r\n        <div>{withdrawRewardTxMessage(withdrawRewardStateMachine)}</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const isProcessing = () => {\r\n    const processingStates = new Set([TxState.PENDING, TxState.SUBMITTED])\r\n    const unstakeProcessing = processingStates.has(unstakeTxStateMachine.state)\r\n    const withdrawProcessing = (unstakeTxStateMachine.state === TxState.MINED) && [withdrawStakeStateMachine, withdrawRewardStateMachine].filter(({ state }) => processingStates.has(state)).length > 0\r\n    return unstakeProcessing || withdrawProcessing\r\n  }\r\n\r\n  return (\r\n    <Modal onClose={onClose} open={open} disableClose={isProcessing()}>\r\n      <Modal.Title>\r\n        Processing Transaction\r\n      </Modal.Title>\r\n      <Modal.Body>\r\n        {getModalBody()}\r\n        {children}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        {isProcessing() ? (\r\n          <ProcessingButton />\r\n        ) : (\r\n          <ModalButton onClick={onClose}> Close </ModalButton>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n","import { TxStateMachine } from \"hooks/useTxStateMachine\"\r\nimport { EtherscanLink } from \"components/EtherscanLink\"\r\nimport { TxState } from \"../../constants\"\r\n\r\ninterface Props {\r\n  txStateMachine: TxStateMachine\r\n  symbol: string\r\n  amount: string\r\n}\r\n\r\nexport const WithdrawTxMessage: React.FC<Props> = ({ txStateMachine: { state, response }, symbol, amount }) => {\r\n  const getTxMessage = () => {\r\n    switch (state) {\r\n      case TxState.PENDING:\r\n        return <span>Withdrawing {symbol} from your vault...</span>\r\n      case TxState.SUBMITTED:\r\n        return (\r\n          <span>\r\n            Withdrawing {symbol} from your vault...{' '}\r\n            View on <EtherscanLink txHash={response?.hash} />\r\n          </span>\r\n        )\r\n      case TxState.MINED:\r\n        return (\r\n          <span>\r\n            Successfully withdrew <b>{amount} {symbol}</b> from your vault to your wallet.{' '}\r\n            View on <EtherscanLink txHash={response?.hash} />\r\n          </span>\r\n        )\r\n      case TxState.FAILED:\r\n        return (\r\n          <span>\r\n            Unlocked <b>{amount} {symbol}</b> that can be withdrawn from your vault.\r\n          </span>\r\n        )\r\n      default:\r\n        return <></>\r\n    }\r\n  }\r\n  return getTxMessage()\r\n}\r\n","import { BigNumber } from 'ethers'\r\nimport { formatUnits, parseUnits } from 'ethers/lib/utils'\r\nimport { TransactionReceipt } from '@ethersproject/providers'\r\nimport tw from 'twin.macro'\r\nimport styled from 'styled-components/macro'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { GeyserContext } from 'context/GeyserContext'\r\nimport { VaultContext } from 'context/VaultContext'\r\nimport { WalletContext } from 'context/WalletContext'\r\nimport { StatsContext } from 'context/StatsContext'\r\nimport Web3Context from 'context/Web3Context'\r\nimport { TxStateMachine } from 'hooks/useTxStateMachine'\r\nimport { amountOrZero } from 'utils/amount'\r\nimport { PositiveInput } from 'components/PositiveInput'\r\nimport { SingleTxModal } from 'components/SingleTxModal'\r\nimport { GeyserInteractionButton } from './GeyserInteractionButton'\r\nimport { UserBalance } from './UserBalance'\r\nimport { EstimatedRewards } from './EstimatedRewards'\r\nimport { ConnectWalletWarning } from './ConnectWalletWarning'\r\nimport { UnstakeSummary } from './UnstakeSummary'\r\nimport { UnstakeConfirmModal } from './UnstakeConfirmModal'\r\nimport { UnstakeTxModal } from './UnstakeTxModal'\r\nimport { WithdrawTxMessage } from './WithdrawTxMessage'\r\nimport {\r\n  WITHDRAW_UNLOCKED_STAKING_TOKENS_WHEN_UNSTAKING,\r\n  WITHDRAW_UNLOCKED_REWARD_TOKENS_WHEN_UNSTAKING,\r\n} from '../../constants'\r\n\r\nexport const GeyserStakeView = () => {\r\n  const [userInput, setUserInput] = useState('')\r\n  const [parsedUserInput, setParsedUserInput] = useState(BigNumber.from('0'))\r\n  const { selectedGeyserInfo: { geyser: selectedGeyser, stakingTokenInfo, rewardTokenInfo }, handleGeyserAction, isStakingAction } = useContext(GeyserContext)\r\n  const { decimals: stakingTokenDecimals, symbol: stakingTokenSymbol, address: stakingTokenAddress } = stakingTokenInfo\r\n  const { decimals: rewardTokenDecimals, symbol: rewardTokenSymbol, address: rewardTokenAddress } = rewardTokenInfo\r\n  const { signer } = useContext(Web3Context)\r\n  const { selectedVault, currentLock, withdrawFromVault, withdrawRewardsFromVault, withdrawUnlockedFromVault } = useContext(VaultContext)\r\n  const { walletAmount, refreshWalletAmount } = useContext(WalletContext)\r\n  const { refreshVaultStats } = useContext(StatsContext)\r\n  const { selectWallet, address } = useContext(Web3Context)\r\n  const currentStakeAmount = BigNumber.from(currentLock ? currentLock.amount : '0')\r\n  const [unstakeConfirmModalOpen, setUnstakeConfirmModalOpen] = useState<boolean>(false)\r\n  const [actualRewardsFromUnstake, setActualRewardsFromUnstake] = useState<BigNumber>(BigNumber.from('0'))\r\n  const [actualStakingTokensFromUnstake, setActualStakingTokensFromUnstake] = useState<BigNumber>(BigNumber.from('0'))\r\n\r\n  const [txModalOpen, setTxModalOpen] = useState<boolean>(false)\r\n\r\n  const refreshInputAmount = () => {\r\n    setUserInput('')\r\n    setParsedUserInput(BigNumber.from('0'))\r\n  }\r\n\r\n  useEffect(() => {\r\n    refreshInputAmount()\r\n  }, [isStakingAction])\r\n\r\n  const handleGeyserInteraction = () => {\r\n    (isStakingAction ? setTxModalOpen : setUnstakeConfirmModalOpen)(true)\r\n  }\r\n\r\n  const handleConfirmUnstake = () => {\r\n    setUnstakeConfirmModalOpen(false)\r\n\r\n    // Need to set a timeout before opening a new modal\r\n    // otherwise the overflow-y of the page gets messed up\r\n    setTimeout(() => setTxModalOpen(true), 300)\r\n  }\r\n\r\n  const handleOnChange = (value: string) => {\r\n    setUserInput(value)\r\n    if (selectedGeyser && signer) {\r\n      setParsedUserInput(parseUnits(amountOrZero(value).toString(), stakingTokenDecimals))\r\n    }\r\n  }\r\n\r\n  const onCloseTxModal = () => {\r\n    setTxModalOpen(false)\r\n    refreshInputAmount()\r\n    refreshWalletAmount()\r\n    refreshVaultStats()\r\n  }\r\n\r\n  const withdrawStaking = async () => {\r\n    if (WITHDRAW_UNLOCKED_STAKING_TOKENS_WHEN_UNSTAKING) {\r\n      if (withdrawUnlockedFromVault) {\r\n        const tx = await withdrawUnlockedFromVault(stakingTokenAddress)\r\n        if (tx) {\r\n          const { response, amount } = tx\r\n          console.log(amount.toString())\r\n          setActualStakingTokensFromUnstake(amount)\r\n          return response\r\n        }\r\n      }\r\n    } else if (withdrawFromVault) {\r\n      setActualStakingTokensFromUnstake(parsedUserInput)\r\n      return withdrawFromVault(stakingTokenAddress, parsedUserInput)\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  const withdrawReward = async (receipt?: TransactionReceipt) => {\r\n    if (WITHDRAW_UNLOCKED_REWARD_TOKENS_WHEN_UNSTAKING) {\r\n      if (withdrawUnlockedFromVault) {\r\n        const tx = await withdrawUnlockedFromVault(rewardTokenAddress)\r\n        if (tx) {\r\n          const { response, amount } = tx\r\n          setActualRewardsFromUnstake(amount)\r\n          return response\r\n        }\r\n      }\r\n    } else if (receipt && withdrawRewardsFromVault) {\r\n      const tx = await withdrawRewardsFromVault(receipt)\r\n      if (tx) {\r\n        const { response, rewards } = tx\r\n        setActualRewardsFromUnstake(rewards)\r\n        return response\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  const withdrawStakingTxMessage = (txStateMachine: TxStateMachine) => (\r\n    <WithdrawTxMessage txStateMachine={txStateMachine} symbol={stakingTokenSymbol} amount={formatUnits(actualStakingTokensFromUnstake, stakingTokenDecimals)} />\r\n  )\r\n\r\n  const withdrawRewardTxMessage = (txStateMachine: TxStateMachine) => (\r\n    <WithdrawTxMessage txStateMachine={txStateMachine} symbol={rewardTokenSymbol} amount={formatUnits(actualRewardsFromUnstake, rewardTokenDecimals)} />\r\n  )\r\n\r\n  return (\r\n    <GeyserStakeViewContainer>\r\n      <UserBalance\r\n        parsedAmount={parsedUserInput}\r\n        currentAmount={isStakingAction ? walletAmount : currentStakeAmount}\r\n        decimals={stakingTokenDecimals}\r\n        symbol={stakingTokenSymbol}\r\n        isStakingAction={isStakingAction}\r\n      />\r\n      <PositiveInput\r\n        placeholder=\"Enter amount\"\r\n        value={userInput}\r\n        onChange={handleOnChange}\r\n        precision={stakingTokenDecimals}\r\n        maxValue={isStakingAction ? walletAmount : currentStakeAmount}\r\n      />\r\n      {isStakingAction ? (\r\n        <EstimatedRewards parsedUserInput={parsedUserInput} />\r\n      ) : (\r\n        <UnstakeSummary userInput={userInput} parsedUserInput={parsedUserInput} />\r\n      )}\r\n      {!address && <ConnectWalletWarning onClick={selectWallet} />}\r\n      <GeyserInteractionButton\r\n        disabled={!address || parsedUserInput.isZero()}\r\n        onClick={handleGeyserInteraction}\r\n        displayText={isStakingAction ? `Stake` : `Unstake`}\r\n      />\r\n      {!isStakingAction && (\r\n        <UnstakeConfirmModal\r\n          parsedUserInput={parsedUserInput}\r\n          open={unstakeConfirmModalOpen}\r\n          onClose={() => setUnstakeConfirmModalOpen(false)}\r\n          onConfirm={handleConfirmUnstake}\r\n        />\r\n      )}\r\n      {isStakingAction ? (\r\n        <SingleTxModal\r\n          submit={() => handleGeyserAction(selectedVault, parsedUserInput)}\r\n          txSuccessMessage={<span>Successfully staked <b>{userInput} {stakingTokenSymbol}</b>.</span>}\r\n          open={txModalOpen}\r\n          onClose={onCloseTxModal}\r\n        />\r\n      ) : (\r\n        <UnstakeTxModal\r\n          open={txModalOpen}\r\n          unstake={() => handleGeyserAction(selectedVault, parsedUserInput)}\r\n          unstakeSuccessMessage={<span>Successfully unstaked <b>{userInput} {stakingTokenSymbol}</b>.</span>}\r\n          onClose={onCloseTxModal}\r\n          withdrawStaking={withdrawStaking}\r\n          withdrawStakingTxMessage={withdrawStakingTxMessage}\r\n          withdrawReward={withdrawReward}\r\n          withdrawRewardTxMessage={withdrawRewardTxMessage}\r\n        />\r\n      )}\r\n    </GeyserStakeViewContainer>\r\n  )\r\n}\r\n\r\nconst GeyserStakeViewContainer = styled.div`\r\n  ${tw`m-6 mb-7 min-h-300px flex flex-col`}\r\n`\r\n","import { useState } from 'react'\r\nimport styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { ResponsiveSubText, ResponsiveText } from 'styling/styles'\r\n\r\ninterface Props {\r\n  name: string\r\n  value: number\r\n  units: string\r\n  from?: number\r\n  interpolate?: (val: number) => string\r\n}\r\n\r\nexport const GeyserStatsBox: React.FC<Props> = ({ name, value: targetValue, units, children, from, interpolate }) => {\r\n  const [statsValue, setStatsValue] = useState<string>(interpolate ? interpolate(targetValue) : `${targetValue}`)\r\n\r\n  useSpring({\r\n    val: targetValue,\r\n    from: { val: from || 0 },\r\n    onChange: ({ value }) => {\r\n      setStatsValue(interpolate ? interpolate(value.val) : `${value.val}`)\r\n    },\r\n  })\r\n\r\n  return (\r\n    <GeyserStatsBoxContainer>\r\n      <GeyserStatsBoxLabel>{name}</GeyserStatsBoxLabel>\r\n      <GeyserStatsBoxValueContainer>\r\n        <GeyserStatsBoxValue>\r\n          <animated.span>\r\n            {statsValue}\r\n          </animated.span>\r\n          {' '}\r\n          <GeyserStatsBoxUnits>\r\n            {units}\r\n            {children}\r\n          </GeyserStatsBoxUnits>\r\n        </GeyserStatsBoxValue>\r\n      </GeyserStatsBoxValueContainer>\r\n    </GeyserStatsBoxContainer>\r\n  )\r\n}\r\n\r\nconst GeyserStatsBoxContainer = styled.div`\r\n  ${tw`h-40px`}\r\n  ${tw`sm:mr-5 sm:bg-paleBlue sm:border sm:border-lightGray sm:rounded-sm sm:p-3 sm:h-72px`}\r\n`\r\n\r\nconst GeyserStatsBoxLabel = styled.span`\r\n  ${ResponsiveText}\r\n  ${tw`mb-1 flex font-light`}\r\n`\r\n\r\nconst GeyserStatsBoxValueContainer = styled.div`\r\n  ${tw`flex flex-row`}\r\n`\r\n\r\nconst GeyserStatsBoxValue = styled.span`\r\n  ${ResponsiveText}\r\n`\r\n\r\nconst GeyserStatsBoxUnits = styled.span`\r\n  ${ResponsiveSubText}\r\n`\r\n","import styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { useState } from 'react'\r\nimport { ResponsiveSubText, ResponsiveText } from 'styling/styles'\r\n\r\ninterface Props {\r\n  name: string\r\n  from?: number\r\n  interpolate: (val: number) => string\r\n  value: number\r\n  units: string\r\n  delim?: string\r\n  classNames?: string\r\n}\r\n\r\nexport const MyStatsBox: React.FC<Props> = ({ classNames, name, units, delim, value: targetValue, from, interpolate }) => {\r\n  const [statsValue, setStatsValue] = useState<string>(interpolate(targetValue))\r\n\r\n  useSpring({\r\n    val: targetValue,\r\n    from: { val: from || 0 },\r\n    onChange: ({ value }) => {\r\n      setStatsValue(interpolate(value.val))\r\n    },\r\n  })\r\n\r\n  return (\r\n    <MyStatContainer>\r\n      <MyStatName className={classNames}>\r\n        {name}\r\n      </MyStatName>\r\n      <MyStatValueContainer>\r\n        <MyStatValue>\r\n          <animated.span>{statsValue}</animated.span>\r\n          {delim}\r\n          <MyStatUnits>{units}</MyStatUnits>\r\n        </MyStatValue>\r\n      </MyStatValueContainer>\r\n    </MyStatContainer>\r\n  )\r\n}\r\n\r\nconst MyStatContainer = styled.div`\r\n  ${tw`h-40px mt-4`}\r\n  ${tw`sm:my-5 sm:col-span-1 sm:h-fit sm:h-72px`}\r\n`\r\n\r\nconst MyStatName = styled.span`\r\n  ${ResponsiveText}\r\n  ${tw`mb-1 flex font-light`}\r\n  ${tw`sm:mb-2 sm:mr-8 sm:block sm:ml-3`}\r\n`\r\n\r\nconst MyStatValueContainer = styled.div`\r\n  ${tw`flex`}\r\n  ${tw`sm:rounded-full sm:bg-mediumGray sm:text-white sm:mt-2 sm:py-7 sm:items-center sm:justify-center sm:h-80px sm:w-80px`}\r\n`\r\n\r\nconst MyStatValue = styled.span`\r\n  ${tw`w-full text-left sm:text-center`}\r\n  ${ResponsiveText}\r\n`\r\n\r\nconst MyStatUnits = styled.span`\r\n  ${ResponsiveSubText}\r\n`\r\n","import { useContext, useCallback } from 'react'\r\nimport styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\nimport { GeyserContext } from 'context/GeyserContext'\r\nimport { StatsContext } from 'context/StatsContext'\r\nimport { ResponsiveText } from 'styling/styles'\r\nimport { safeNumeral } from 'utils/numeral'\r\nimport { Tooltip } from 'components/Tooltip'\r\nimport { GeyserStatsBox } from './GeyserStatsBox'\r\nimport { MyStatsBox } from './MyStatsBox'\r\nimport {\r\n  DAY_IN_SEC,\r\n  GET_APY_NO_STAKE_MSG,\r\n  GET_APY_STAKE_MSG,\r\n  GET_CURRENT_REWARDS_MSG,\r\n  GET_REWARD_MULTIPLIER_MSG,\r\n} from '../../constants'\r\n\r\nexport const MyStats = () => {\r\n  const {\r\n    userStats: { apy, currentMultiplier, currentReward },\r\n    vaultStats: { currentStake },\r\n    geyserStats: { duration },\r\n  } = useContext(StatsContext)\r\n  const {\r\n    selectedGeyserInfo: {\r\n      rewardTokenInfo: { symbol: rewardTokenSymbol },\r\n      stakingTokenInfo: { price: stakingTokenPrice },\r\n    },\r\n  } = useContext(GeyserContext)\r\n\r\n  const getTooltipMessages = useCallback(\r\n    () => [\r\n      {\r\n        title: 'APY',\r\n        body: currentStake > 0 ? GET_APY_STAKE_MSG() : GET_APY_NO_STAKE_MSG({ days: safeNumeral(duration / DAY_IN_SEC, '0.0') }),\r\n      },\r\n      {\r\n        title: 'Reward Multiplier',\r\n        body: GET_REWARD_MULTIPLIER_MSG({ days: safeNumeral(duration / DAY_IN_SEC, '0.0'), multiplier: safeNumeral(currentMultiplier, '0.0') }),\r\n      },\r\n      {\r\n        title: 'Current Rewards',\r\n        body: GET_CURRENT_REWARDS_MSG(),\r\n      },\r\n    ],\r\n    [currentStake],\r\n  )\r\n\r\n  return (\r\n    <MyStatsContainer>\r\n      <Header>\r\n        My Stats <Tooltip classNames=\"my-auto ml-2 normal-case tracking-wide\" panelClassnames='-translate-x-1/4' messages={getTooltipMessages()} />\r\n      </Header>\r\n      <MyStatsWrapper>\r\n        <MyStatsBox\r\n          classNames=\"sm:my-6\"\r\n          name=\"APY\"\r\n          value={Math.min(apy, 10000)}\r\n          units=\"%\"\r\n          interpolate={(val) => safeNumeral(val, '0.00%').slice(0, val > 100 ? -4 : -1)}\r\n        />\r\n        <MyStatsBox\r\n          name=\"Reward Multiplier\"\r\n          value={currentMultiplier}\r\n          units=\"x\"\r\n          interpolate={(val) => safeNumeral(val, '0.0')}\r\n        />\r\n        <MyStatsBox\r\n          name=\"Current Rewards\"\r\n          value={currentReward}\r\n          delim=\" \"\r\n          units={rewardTokenSymbol}\r\n          interpolate={(val) => safeNumeral(val, '0,0.00')}\r\n        />\r\n      </MyStatsWrapper>\r\n      <GeyserStatsContainer>\r\n        <GeyserStatsBox\r\n          name=\"Total Staked\"\r\n          value={currentStake * stakingTokenPrice}\r\n          units=\"USD\"\r\n          interpolate={(val) => safeNumeral(val, '0,0.00')}\r\n        />\r\n      </GeyserStatsContainer>\r\n    </MyStatsContainer>\r\n  )\r\n}\r\n\r\nconst MyStatsContainer = styled.div`\r\n  ${tw`px-5 my-5 pr-0 border-r-2 border-lightGray`}\r\n`\r\n\r\nconst MyStatsWrapper = styled.div`\r\n  ${tw`sm:grid sm:grid-cols-3 sm:h-180px`}\r\n`\r\n\r\nconst Header = styled.h3`\r\n  ${ResponsiveText}\r\n  ${tw`uppercase flex text-radicalRed font-medium sm:pl-3`}\r\n`\r\n\r\nconst GeyserStatsContainer = styled.div`\r\n  ${tw`mt-4`}\r\n  ${tw`sm:mt-0`}\r\n`\r\n","import styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\nimport { useContext } from 'react'\r\nimport { StatsContext } from 'context/StatsContext'\r\nimport { GeyserContext } from 'context/GeyserContext'\r\nimport { safeNumeral } from 'utils/numeral'\r\nimport { ResponsiveText } from 'styling/styles'\r\nimport { GeyserStatsBox } from './GeyserStatsBox'\r\nimport { DAY_IN_SEC } from '../../constants'\r\n\r\nexport const GeyserStats = () => {\r\n  const { geyserStats: { duration, totalDeposit, totalRewards }} = useContext(StatsContext)\r\n  \r\n  const { selectedGeyserInfo: { rewardTokenInfo: { symbol } } } = useContext(GeyserContext)\r\n\r\n  return (\r\n    <GeyserStatsContainer>\r\n      <Header>Geyser Stats</Header>\r\n      <GeyserStatsBoxContainer>\r\n        <GeyserStatsBox\r\n          name=\"Program Duration\"\r\n          value={duration / DAY_IN_SEC}\r\n          units=\"days left\"\r\n          interpolate={(val) => safeNumeral(val, '0.0')}\r\n        />\r\n      </GeyserStatsBoxContainer>\r\n      <GeyserStatsBoxContainer>\r\n        <GeyserStatsBox\r\n          name=\"Total Deposits\"\r\n          value={totalDeposit}\r\n          units=\"USD\"\r\n          interpolate={(val) => safeNumeral(val, '0,0.00')}\r\n        />\r\n      </GeyserStatsBoxContainer>\r\n      <GeyserStatsBoxContainer>\r\n        <GeyserStatsBox\r\n          name=\"Total Rewards\"\r\n          value={totalRewards}\r\n          units={symbol}\r\n          interpolate={(val) => safeNumeral(val, '0,0.00')}\r\n        />\r\n      </GeyserStatsBoxContainer>\r\n    </GeyserStatsContainer>\r\n  )\r\n}\r\n\r\nconst GeyserStatsContainer = styled.div`\r\n  ${tw`px-5 my-5 pr-0`}\r\n`\r\n\r\nconst Header = styled.h3`\r\n  ${ResponsiveText}\r\n  ${tw`uppercase flex font-medium text-radicalRed`}\r\n  ${tw`sm:pl-3`}\r\n`\r\n\r\nconst GeyserStatsBoxContainer = styled.div`\r\n  ${tw`mt-4`}\r\n  ${tw`sm:mt-3`}\r\n`\r\n","import styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\nimport { MyStats } from './MyStats'\r\nimport { GeyserStats } from './GeyserStats'\r\n\r\nexport const GeyserStatsView = () => (\r\n  <GeyserStatsContainer>\r\n    <MyStats />\r\n    <GeyserStats />\r\n  </GeyserStatsContainer>\r\n)\r\n\r\nconst GeyserStatsContainer = styled.div`\r\n  ${tw`grid grid-cols-2 w-full h-280px`};\r\n  ${tw`sm:h-312px`}\r\n`\r\n","import { useContext } from 'react'\r\nimport styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\nimport { Overlay } from 'styling/styles'\r\nimport { GeyserContext } from 'context/GeyserContext'\r\nimport { ToggleView } from 'components/ToggleView'\r\nimport { GeyserStakeView } from './GeyserStakeView'\r\nimport { GeyserStatsView } from './GeyserStatsView'\r\n\r\nexport const GeyserFirstContainer = () => {\r\n  const { isStakingAction, toggleStakingAction } = useContext(GeyserContext)\r\n\r\n  return (\r\n    <Container>\r\n      <Overlay>\r\n        <GeyserStatsView />\r\n      </Overlay>\r\n      <Overlay>\r\n        <ToggleContainer>\r\n          <ToggleView enabled={isStakingAction} toggle={toggleStakingAction} options={['Stake', 'Unstake']} />\r\n        </ToggleContainer>\r\n        <GeyserStakeView />\r\n      </Overlay>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  ${tw`text-center m-auto my-4 flex flex-col flex-wrap w-full`}\r\n  ${tw`sm:w-sm`}\r\n`\r\n\r\nconst ToggleContainer = styled.div`\r\n  ${tw`m-6`}\r\n`\r\n","import { ReactNode } from \"react\"\r\nimport styled from \"styled-components/macro\"\r\nimport tw from \"twin.macro\"\r\nimport { Align } from \"../constants\"\r\n\r\nexport type Column = {\r\n  title: ReactNode\r\n  dataIndex: string\r\n  key: string | number\r\n  widthClass?: string\r\n  textAlign?: Align\r\n}\r\n\r\nexport type DataSource = {\r\n  [index: string]: ReactNode\r\n  key: string | number\r\n  textAlign?: Align\r\n}\r\n\r\ninterface Props {\r\n  columns: Column[]\r\n  dataSource: DataSource[]\r\n}\r\n\r\nexport const Table: React.FC<Props> = ({ columns, dataSource }) => {\r\n  const getRowFromSource = (source: DataSource) => (\r\n    columns.map(({ dataIndex }) => Object.getOwnPropertyDescriptor(source, dataIndex) ? source[dataIndex] : '')\r\n  )\r\n\r\n  const rows = dataSource.map(getRowFromSource)\r\n\r\n  const getAlignmentClass = (textAlign: Align) => {\r\n    switch(textAlign) {\r\n      case Align.CENTER: return 'text-center'\r\n      case Align.LEFT: return 'text-left'\r\n      case Align.RIGHT: return 'text-right'\r\n      default: return ''\r\n    }\r\n  }\r\n\r\n  const getPaddingClass = (colNumber: number, numCols: number) =>\r\n    (colNumber === 0 && 'pl-3') || (colNumber === numCols - 1 && 'pr-3') || ''\r\n\r\n  return (\r\n    <TableContent>\r\n      <TableHead>\r\n        <tr>\r\n          {columns.map(({ title, key, textAlign, widthClass }, colNumber) => (\r\n            <HeaderCell\r\n              key={key}\r\n              className={`${getAlignmentClass(textAlign || Align.LEFT)} ${widthClass} ${getPaddingClass(colNumber, columns.length)}`}\r\n            >\r\n              {title}\r\n            </HeaderCell>\r\n          ))}\r\n        </tr>\r\n      </TableHead>\r\n      <TableBody>\r\n        {rows.map((row, rowNumber) => (\r\n          <>\r\n            <TableRow key={dataSource[rowNumber].key}>\r\n              {row.map((cell, colNumber) => (\r\n                <RowCell\r\n                  key={`${dataSource[rowNumber].key}-${columns[colNumber].key}`}\r\n                  className={`${getAlignmentClass(columns[colNumber].textAlign || Align.LEFT)} ${getPaddingClass(colNumber, columns.length)}`}\r\n                >\r\n                  {cell}\r\n                </RowCell>\r\n              ))}\r\n            </TableRow>\r\n            {rowNumber !== rows.length - 1 && <Spacer />}\r\n          </>\r\n        ))}\r\n      </TableBody>\r\n    </TableContent>\r\n  )\r\n}\r\n\r\nconst TableContent = styled.table`\r\n  width: 100%;\r\n  ${tw`table-fixed border-collapse space-y-2`}\r\n`\r\n\r\nconst TableRow = styled.tr`\r\n  ${tw`border border-lightGray h-72px`}\r\n`\r\n\r\nconst TableHead = styled.thead``\r\n\r\nconst TableBody = styled.tbody``\r\n\r\nconst HeaderCell = styled.th`\r\n  ${tw`sm:px-6 py-3 text-xs font-medium uppercase tracking-wider`}\r\n`\r\n\r\nconst Spacer = styled.tr`\r\n  ${tw`h-10px`}\r\n`\r\n\r\nconst RowCell = styled.td`\r\n  ${tw`text-xs`}\r\n  ${tw`sm:px-6 sm:text-base whitespace-nowrap`}\r\n`\r\n","import { StatsContext } from \"context/StatsContext\"\r\nimport { useContext, useState } from \"react\"\r\nimport styled from \"styled-components/macro\"\r\nimport tw from \"twin.macro\"\r\nimport { safeNumeral } from \"utils/numeral\"\r\nimport { VaultTokenBalance } from \"types\"\r\nimport { VaultContext } from \"context/VaultContext\"\r\nimport { WalletContext } from \"context/WalletContext\"\r\nimport { Ellipsis } from \"styling/styles\"\r\nimport { Column, Table } from \"components/Table\"\r\nimport { SingleTxModal } from \"components/SingleTxModal\"\r\nimport { Align } from \"../../constants\"\r\n\r\nexport const VaultBalanceView = () => {\r\n  const { vaultStats: { vaultTokenBalances }, refreshVaultStats } = useContext(StatsContext)\r\n  const { withdrawFromVault } = useContext(VaultContext)\r\n\r\n  // state of the token about to be withdrawn\r\n  const [tokenBalance, setTokenBalance] = useState<VaultTokenBalance>()\r\n  const [modalOpen, setModalOpen] = useState<boolean>(false)\r\n  const { refreshWalletAmount } = useContext(WalletContext)\r\n\r\n  const confirmWithdraw = (balance: VaultTokenBalance) => {\r\n    setTokenBalance(balance)\r\n    setModalOpen(true)\r\n  }\r\n\r\n  const submit = async () => {\r\n    if (tokenBalance && withdrawFromVault) {\r\n      const { address, parsedUnlockedBalance } = tokenBalance\r\n      return withdrawFromVault(address, parsedUnlockedBalance)\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  const onClose = () => {\r\n    setModalOpen(false)\r\n    refreshVaultStats()\r\n    refreshWalletAmount()\r\n  }\r\n\r\n  const columns: Column[] = [\r\n    {\r\n      title: 'Token',\r\n      dataIndex: 'token',\r\n      key: 'token',\r\n      widthClass: 'sm:w-1/3 w-1/4',\r\n    },\r\n    {\r\n      title: 'Balance',\r\n      dataIndex: 'balance',\r\n      key: 'balance',\r\n    },\r\n    {\r\n      title: 'Unlocked',\r\n      dataIndex: 'unlocked',\r\n      key: 'unlocked',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: 'action',\r\n      key: 'action',\r\n      textAlign: Align.CENTER,\r\n    },\r\n  ]\r\n\r\n  const dataSource = vaultTokenBalances\r\n    .map((vaultTokenBalance) =>\r\n      ({\r\n        key: vaultTokenBalance.symbol,\r\n        token: <TextEllipsis>{vaultTokenBalance.symbol}</TextEllipsis>,\r\n        balance: safeNumeral(vaultTokenBalance.balance, '0.00'),\r\n        unlocked: safeNumeral(vaultTokenBalance.unlockedBalance, '0.00'),\r\n        action: (\r\n          <ActionButton\r\n            disabled={vaultTokenBalance.parsedUnlockedBalance.isZero()}\r\n            onClick={() => confirmWithdraw(vaultTokenBalance)}\r\n          >\r\n            <ButtonText>Withdraw</ButtonText>\r\n          </ActionButton>\r\n        ),\r\n      })\r\n    )\r\n\r\n  return (\r\n    <Container>\r\n      <Table columns={columns} dataSource={dataSource} />\r\n      <SingleTxModal\r\n        open={modalOpen}\r\n        submit={submit}\r\n        txSuccessMessage={<span>Successfully withdrawn <b>{tokenBalance?.unlockedBalance} {tokenBalance?.symbol}</b>.</span>}\r\n        onClose={onClose}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  ${tw`m-4`}\r\n`\r\n\r\nconst ButtonText = styled.span`\r\n  ${tw`m-1 text-xs py-3 sm:px-2`}\r\n`\r\n\r\nconst ActionButton = styled.button`\r\n  ${tw`flex m-auto text-link bg-0D23EE bg-opacity-5 uppercase`}\r\n  ${tw`disabled:bg-lightGray disabled:bg-opacity-50 disabled:cursor-not-allowed disabled:border-none disabled:text-gray`}\r\n  ${tw`focus:outline-none`}\r\n`\r\n\r\nconst TextEllipsis = styled.div`\r\n  ${Ellipsis}\r\n`\r\n","import styled from 'styled-components/macro'\r\nimport { CardLabel, Overlay } from 'styling/styles'\r\nimport tw from 'twin.macro'\r\nimport { VaultBalanceView } from './VaultBalanceView'\r\n\r\nexport const VaultFirstContainer = () => (\r\n  <Container>\r\n    <Overlay>\r\n      <Title>Manage Balances</Title>\r\n      <VaultBalanceView />\r\n    </Overlay>\r\n  </Container>\r\n)\r\n\r\nconst Title = styled(CardLabel)`\r\n  ${tw`text-xl p-5 text-left font-normal`}\r\n`\r\n\r\nconst Container = styled.div`\r\n  ${tw`text-center m-auto flex flex-wrap w-full flex-col`}\r\n  ${tw`sm:w-sm`}\r\n`\r\n","import { AppContext } from 'context/AppContext'\r\nimport { useContext } from 'react'\r\nimport { GeyserFirstContainer } from './GeyserFirst/GeyserFirstContainer'\r\nimport { VaultFirstContainer } from './VaultFirst/VaultFirstContainer'\r\nimport { Mode } from '../constants'\r\n\r\nexport const Body = () => {\r\n  const { mode } = useContext(AppContext)\r\n  return mode === Mode.VAULTS ? <VaultFirstContainer /> : <GeyserFirstContainer />\r\n}\r\n","import { useContext } from 'react'\r\nimport styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\nimport Web3Context from 'context/Web3Context'\r\nimport { displayAddr } from 'utils/formatDisplayAddress'\r\nimport { Paragraph } from 'styling/styles'\r\nimport { NamedColors } from 'styling/colors'\r\n\r\nexport const HeaderWalletButton = () => {\r\n  const { selectWallet, address } = useContext(Web3Context)\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={selectWallet}>\r\n        <Paragraph autoCapitalize=\"yes\" color={NamedColors.WHITE}>\r\n          {address ? displayAddr(address) : 'CONNECT'}\r\n        </Paragraph>\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Button = styled.button`\r\n  ${tw`w-full px-8 py-4 rounded-bl-2xl float-right bg-radicalRed`}\r\n  ${tw`sm:px-14 sm:py-5`}\r\n  ${tw`hover:bg-amaranth`}\r\n`\r\n","import { BigNumber, providers, Signer } from 'ethers'\r\nimport { RewardToken, StakingToken } from './constants'\r\n\r\ntype ClaimedReward = {\r\n  id: string\r\n  token: string\r\n  amount: string\r\n  lastUpdate: string\r\n}\r\n\r\nexport type Vault = {\r\n  id: string\r\n  nonce: string\r\n  claimedReward: ClaimedReward[]\r\n  locks: Lock[]\r\n}\r\n\r\nexport enum GeyserStatus {\r\n  ONLINE = 'Online',\r\n  OFFLINE = 'Offline',\r\n  SHUTDOWN = 'Shutdown',\r\n}\r\n\r\nexport type RewardSchedule = {\r\n  id: string\r\n  duration: string\r\n  start: string\r\n  rewardAmount: string\r\n}\r\n\r\nexport type Geyser = {\r\n  id: string\r\n  rewardToken: string\r\n  stakingToken: string\r\n  totalStake: string\r\n  totalStakeUnits: string\r\n  status: GeyserStatus\r\n  scalingFloor: string\r\n  scalingCeiling: string\r\n  scalingTime: string\r\n  unlockedReward: string\r\n  rewardSchedules: RewardSchedule[]\r\n  lastUpdate: string\r\n}\r\n\r\nexport type Lock = {\r\n  id: string\r\n  geyser: Geyser\r\n  token: string\r\n  amount: string\r\n  lastUpdate: string\r\n  stakeUnits: string\r\n}\r\n\r\nexport type TokenInfo = {\r\n  address: string\r\n  name: string\r\n  symbol: string\r\n  decimals: number\r\n}\r\n\r\nexport type TokenComposition = TokenInfo & {\r\n  balance: number\r\n  value: number\r\n  weight: number\r\n}\r\n\r\nexport type StakingTokenInfo = TokenInfo & {\r\n  price: number\r\n  totalSupply: number\r\n  marketCap: number\r\n  composition: TokenComposition[]\r\n}\r\n\r\nexport type RewardTokenInfo = TokenInfo & {\r\n  getTotalRewards: (rewardSchedules: RewardSchedule[]) => Promise<number>\r\n}\r\n\r\nexport type GeyserInfo = {\r\n  geyser: Geyser | null\r\n  stakingTokenInfo: StakingTokenInfo\r\n  rewardTokenInfo: RewardTokenInfo\r\n}\r\n\r\nexport type GeyserStats = {\r\n  duration: number\r\n  totalDeposit: number\r\n  totalRewards: number\r\n  calcPeriodInDays: number\r\n}\r\n\r\nexport type VaultTokenBalance = TokenInfo & {\r\n  balance: number\r\n  parsedBalance: BigNumber\r\n  unlockedBalance: number\r\n  parsedUnlockedBalance: BigNumber\r\n}\r\n\r\nexport type VaultStats = {\r\n  id: string\r\n  stakingTokenBalance: number\r\n  rewardTokenBalance: number\r\n  vaultTokenBalances: VaultTokenBalance[]\r\n  currentStake: number\r\n}\r\n\r\nexport type UserStats = {\r\n  apy: number\r\n  currentMultiplier: number\r\n  currentReward: number\r\n}\r\n\r\nexport type GeyserConfig = {\r\n  name: string\r\n  address: string\r\n  stakingToken: StakingToken\r\n  rewardToken: RewardToken\r\n}\r\n\r\nexport type AdditionalTokenConfig = {\r\n  address: string\r\n  enabled: boolean\r\n  [key: string]: any\r\n}\r\n\r\nexport type SupplyInfo = {\r\n  timestamp: number\r\n  supply: number\r\n  epoch: number\r\n}\r\n\r\nexport type SignerOrProvider = Signer | providers.Provider\r\n\r\nexport type TooltipMessage = {\r\n  title: string\r\n  body: string\r\n}\r\n","import { toChecksumAddress } from 'web3-utils'\r\n\r\nconst formatAddr = (addr: string) => `${addr.slice(0, 6)}...${addr.slice(addr.length - 4)}`\r\nexport const displayAddr = (addr: string) => formatAddr(toChecksumAddress(addr))\r\n","import styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\nimport { Switch } from '@headlessui/react'\r\nimport { ResponsiveHeader } from 'styling/styles'\r\n\r\ninterface Props {\r\n  enabled: boolean\r\n  toggle: () => void\r\n  options: [string, string]\r\n}\r\n\r\nexport const HeaderToggle: React.FC<Props> = ({ enabled, toggle, options }) => (\r\n  <Switch.Group>\r\n    <div className=\"flex items-center\">\r\n      <SwitchLabel className=\"mr-4\">{options[0]}</SwitchLabel>\r\n      <Switchy className={enabled ? 'bg-primary' : 'bg-radicalRed'} checked={enabled} onChange={toggle}>\r\n        <span\r\n          className={`${\r\n            enabled ? 'translate-x-3' : 'translate-x-0'\r\n          } inline-block w-5 h-5 transform bg-white border border-lightBlack rounded-full transition-transform`}\r\n        />\r\n      </Switchy>\r\n      <SwitchLabel className=\"ml-4\">{options[1]}</SwitchLabel>\r\n    </div>\r\n  </Switch.Group>\r\n)\r\n\r\nconst SwitchLabel = styled(Switch.Label)`\r\n  ${ResponsiveHeader}\r\n  ${tw`font-normal tracking-wider`}\r\n`\r\n\r\nconst Switchy = styled(Switch)`\r\n  ${tw`relative inline-flex items-center h-3 rounded-full w-8 transition-colors`}\r\n  ${tw`focus:outline-none`}\r\n`\r\n","import { AppContext } from 'context/AppContext'\r\nimport { useContext } from 'react'\r\nimport styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\nimport { Mode } from '../constants'\r\nimport { HeaderWalletButton } from './HeaderWalletButton'\r\nimport { HeaderToggle } from './HeaderToggle'\r\n\r\nexport const Header = () => {\r\n  const { mode, toggleMode } = useContext(AppContext)\r\n  return (\r\n    <Container>\r\n      <LeftContainer>\r\n        <LogoSpan><a href=\"https://www.ampleforth.org/dapps\">Λ</a></LogoSpan>\r\n      </LeftContainer>\r\n      <MiddleContainer>\r\n        <HeaderToggle enabled={mode === Mode.VAULTS} toggle={toggleMode} options={['Geyser View', 'Vault View']} />\r\n      </MiddleContainer>\r\n      <RightContainer>\r\n        <HeaderWalletButton />\r\n      </RightContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  ${tw`shadow-sm flex flex-wrap py-1 -mt-1 h-fit`}\r\n`\r\n\r\nconst LogoSpan = styled.span`\r\n  font-family: 'Coromont Garamond';\r\n  ${tw`ml-2 p-3 text-3xl`}\r\n  ${tw`header-wrap:ml-20`}\r\n`\r\n\r\nconst LeftContainer = styled.div`\r\n  ${tw`flex w-auto`}\r\n  ${tw`header-wrap:w-2/12`}\r\n`\r\n\r\nconst MiddleContainer = styled.div`\r\n  ${tw`flex flex-col xl:flex-row items-center justify-center w-full order-3 py-6`}\r\n  ${tw`header-wrap:py-0 header-wrap:max-w-830px header-wrap:mx-auto header-wrap:order-2 header-wrap:w-1/3 xl:w-8/12`}\r\n`\r\nconst RightContainer = styled.div`\r\n  ${tw`ml-auto order-2 w-auto`}\r\n  ${tw`header-wrap:ml-0 header-wrap:order-3 header-wrap:w-2/12`}\r\n`\r\n","import { ApolloClient, InMemoryCache } from '@apollo/client'\r\nimport { GEYSER_SUBGRAPH_ENDPOINT } from '../constants'\r\n\r\nconst uri = GEYSER_SUBGRAPH_ENDPOINT\r\n\r\nexport const client = new ApolloClient({\r\n  uri,\r\n  cache: new InMemoryCache(),\r\n})\r\n","export default __webpack_public_path__ + \"static/media/caret_down.8278281c.svg\";","export default __webpack_public_path__ + \"static/media/checkmark_light.a8a2314b.svg\";","import { Listbox, Transition } from '@headlessui/react'\r\nimport styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\nimport caretDown from 'assets/caret_down.svg'\r\nimport checkMark from 'assets/checkmark_light.svg'\r\nimport { Fragment } from 'react'\r\n\r\n// needs one of options or optgroups\r\ninterface Props {\r\n  options?: string[]\r\n  optgroups?: { group: string, options: string[] }[]\r\n  selectedOption: string\r\n  onChange: (arg0: string) => void\r\n}\r\n\r\nexport const Dropdown: React.FC<Props> = ({ options, optgroups, selectedOption, onChange }) => {\r\n  const renderOptions = (opts: string[]) => (\r\n    <>\r\n      {opts.map((option) => (\r\n        <Listbox.Option\r\n          key={option}\r\n          className={({ active }) =>\r\n            `${active ? 'text-primary' : 'text-gray'}\r\n                    cursor-default select-none relative py-2 pl-10 pr-4 text-left`\r\n          }\r\n          value={option}\r\n        >\r\n          {({ selected }) => (\r\n            <>\r\n              <span className={`${selected ? 'font-medium' : 'font-normal'} block truncate`}>{option}</span>\r\n              {selected ? (\r\n                <span className={`'text-primary' absolute inset-y-0 left-0 flex items-center pl-3`}>\r\n                  <Img src={checkMark} alt=\"Selected\" />\r\n                </span>\r\n              ) : null}\r\n            </>\r\n          )}\r\n        </Listbox.Option>\r\n      ))}\r\n    </>\r\n  )\r\n\r\n  const renderOptgroups = (groups: { group: string, options: string[] }[]) => (\r\n    <>\r\n      {groups.map(({ group, options: opts }) => (\r\n        <>\r\n          <Listbox.Option disabled key={group} className=\"text-gray align-center justify-center flex\" value={group}>\r\n            <span>{group}</span>\r\n          </Listbox.Option>\r\n          {renderOptions(opts)}\r\n        </>\r\n      ))}\r\n    </>\r\n  )\r\n  return (\r\n    <Listbox value={selectedOption} onChange={onChange}>\r\n      <OptionsWrapper>\r\n        <Listbox.Button className=\"relative w-full py-2 pl-3 pr-10 text-left bg-paleBlue rounded-lg shadow-all-xs cursor-default focus:outline-none focus-visible:ring-2 focus-visible:ring-opacity-75 focus-visible:ring-white sm:text-sm\">\r\n          <span className=\"block truncate\">{selectedOption}</span>\r\n          <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\r\n            <Img src={caretDown} alt=\"Down arrow\" />\r\n          </span>\r\n        </Listbox.Button>\r\n        <Transition as={Fragment} leave=\"transition ease-in duration-100\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\r\n          <Listbox.Options className=\"z-10 absolute w-full py-1 mt-1 overflow-auto text-base bg-white rounded-md shadow-all-xs max-h-60 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\r\n            {optgroups ? renderOptgroups(optgroups) : renderOptions(options || [])}\r\n          </Listbox.Options>\r\n        </Transition>\r\n      </OptionsWrapper>\r\n    </Listbox>\r\n  )\r\n}\r\n\r\nconst Img = styled.img`\r\n  ${tw`w-5 h-5 text-gray`}\r\n`\r\n\r\nconst OptionsWrapper = styled.div`\r\n  ${tw`relative mt-1 w-336px`}\r\n`\r\n","import styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\nimport { ResponsiveText } from 'styling/styles'\r\nimport { useContext } from 'react'\r\nimport { GeyserContext } from 'context/GeyserContext'\r\nimport { GeyserStatus } from 'types'\r\nimport { Dropdown } from './Dropdown'\r\n\r\nexport const GeysersList = () => {\r\n  const { geysers, selectGeyserByName, selectedGeyserInfo: { geyser: selectedGeyser }, getGeyserName } = useContext(GeyserContext)\r\n  const handleGeyserChange = (geyserName: string) => selectGeyserByName(geyserName)\r\n\r\n  const optgroups = (() => {\r\n    const activeGeysers = geysers\r\n      .filter(({ status }) => status !== GeyserStatus.SHUTDOWN)\r\n      .map(({ id }) => getGeyserName(id))\r\n    const inactiveGeysers = geysers\r\n      .filter(({ status }) => status === GeyserStatus.SHUTDOWN)\r\n      .map(({ id }) => getGeyserName(id))\r\n\r\n    return [\r\n      {\r\n        group: 'Active Geysers',\r\n        options: activeGeysers,\r\n      },\r\n      {\r\n        group: 'Inactive Geysers',\r\n        options: inactiveGeysers,\r\n      },\r\n    ]\r\n  })()\r\n\r\n  return (\r\n    <>\r\n      {geysers.length > 0 && (\r\n        <GeysersListContainer>\r\n          <Heading>\r\n            <Label>Geyser</Label>\r\n          </Heading>\r\n          <Dropdown\r\n            optgroups={optgroups}\r\n            selectedOption={getGeyserName(selectedGeyser ? selectedGeyser.id : geysers[0].id)}\r\n            onChange={handleGeyserChange}\r\n          />\r\n        </GeysersListContainer>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst GeysersListContainer = styled.div`\r\n  ${tw`my-3`}\r\n  ${tw`mx-5 sm:mx-10 xl:mx-5`}\r\n`\r\n\r\nconst Heading = styled.div`\r\n  ${tw`flex flex-row`}\r\n`\r\n\r\nconst Label = styled.span`\r\n  ${ResponsiveText}\r\n  ${tw`tracking-wider`}\r\n`\r\n","export default __webpack_public_path__ + \"static/media/clipboard.3669ac84.svg\";","import styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\nimport { ResponsiveSubText } from 'styling/styles'\r\n\r\ninterface Props {\r\n  displayText: string\r\n  classNames?: string\r\n  onClick: () => void\r\n}\r\n\r\nexport const ToolButton: React.FC<Props> = ({ classNames, displayText, onClick, children }) => (\r\n  <Button className={classNames} onClick={onClick}>\r\n    {displayText} {children}\r\n  </Button>\r\n)\r\n\r\nconst Button = styled.button`\r\n  ${ResponsiveSubText}\r\n  ${tw`p-0 inline-flex uppercase text-link`}\r\n  ${tw`hover:underline`}\r\n`\r\n","import styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\nimport copy from 'assets/clipboard.svg'\r\nimport { Ellipsis, ResponsiveText } from 'styling/styles'\r\nimport { useContext } from 'react'\r\nimport { VaultContext } from 'context/VaultContext'\r\nimport { ToolButton } from './ToolButton'\r\nimport { Dropdown } from './Dropdown'\r\n\r\nexport const VaultsList = () => {\r\n  const { vaults, selectVaultById, selectedVault } = useContext(VaultContext)\r\n\r\n  const handleCopyToClipboard = () => navigator.clipboard.writeText(selectedVault ? selectedVault.id : vaults[0].id)\r\n  const handleVaultChange = (vaultId: string) => selectVaultById(vaultId)\r\n\r\n  return (\r\n    <>\r\n      {vaults.length > 0 && (\r\n        <VaultsListContainer>\r\n          <Heading>\r\n            <Label>Vault ID</Label>\r\n            <ToolButton classNames=\"my-auto mx-4\" displayText=\"Copy\" onClick={handleCopyToClipboard}>\r\n              <Img src={copy} alt=\"Copy\" />\r\n            </ToolButton>\r\n          </Heading>\r\n          {vaults.length > 1 ? (\r\n            <Dropdown\r\n              options={vaults.map((vault) => vault.id)}\r\n              selectedOption={selectedVault ? selectedVault.id : vaults[0].id}\r\n              onChange={handleVaultChange}\r\n            />\r\n          ) : (\r\n            <SelectedOption>{selectedVault ? selectedVault.id : vaults[0].id}</SelectedOption>\r\n          )}\r\n        </VaultsListContainer>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst VaultsListContainer = styled.div`\r\n  ${tw`mx-5 my-3`}\r\n  ${tw`sm:mx-10 xl:mx-5`}\r\n`\r\n\r\nconst Heading = styled.div`\r\n  ${tw`flex flex-row`}\r\n`\r\n\r\nconst Label = styled.span`\r\n  ${ResponsiveText}\r\n  ${tw`tracking-wider`}\r\n`\r\n\r\nconst Img = styled.img`\r\n  ${tw`w-16px h-16px`}\r\n  ${tw`mx-2 fill-current text-link`}\r\n`\r\n\r\nconst SelectedOption = styled.span`\r\n  ${ResponsiveText}\r\n  ${Ellipsis}\r\n  ${tw`font-bold tracking-wide block my-2 w-336px`}\r\n`\r\n","import styled from 'styled-components/macro'\r\nimport tw from 'twin.macro'\r\nimport { GeysersList } from './GeysersList'\r\nimport { VaultsList } from './VaultsList'\r\n\r\nexport const DropdownsContainer = () => (\r\n  <Container>\r\n    <Center>\r\n      <VaultsList />\r\n      <GeysersList />\r\n    </Center>\r\n  </Container>\r\n)\r\n\r\nconst Center = styled.div`\r\n  ${tw`header-wrap:flex-row`}\r\n  ${tw`text-center m-auto my-4 flex flex-col`}\r\n`\r\n\r\nconst Container = styled.div`\r\n  ${tw`text-center m-auto my-4 flex flex-row w-full justify-center items-center`}\r\n  ${tw`sm:w-sm`}\r\n`\r\n","import { ApolloProvider } from '@apollo/client'\r\nimport { AppContextProvider } from 'context/AppContext'\r\nimport { Body } from 'components/Body'\r\nimport { Header } from 'components/Header'\r\nimport { VaultContextProvider } from 'context/VaultContext'\r\nimport { GeyserContextProvider } from 'context/GeyserContext'\r\nimport { Web3Provider } from 'context/Web3Context'\r\nimport { client } from 'queries/client'\r\nimport { WalletContextProvider } from 'context/WalletContext'\r\nimport { StatsContextProvider } from 'context/StatsContext'\r\nimport { DropdownsContainer } from 'components/DropdownsContainer'\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <AppContextProvider>\r\n        <Web3Provider>\r\n          <GeyserContextProvider>\r\n            <VaultContextProvider>\r\n              <WalletContextProvider>\r\n                <StatsContextProvider>\r\n                  <Header />\r\n                  <DropdownsContainer />\r\n                  <Body />\r\n                </StatsContextProvider>\r\n              </WalletContextProvider>\r\n            </VaultContextProvider>\r\n          </GeyserContextProvider>\r\n        </Web3Provider>\r\n      </AppContextProvider>\r\n    </ApolloProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals'\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}